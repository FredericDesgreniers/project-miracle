var _=Object.defineProperty;var z=(p,t,i)=>t in p?_(p,t,{enumerable:!0,configurable:!0,writable:!0,value:i}):p[t]=i;var a=(p,t,i)=>z(p,typeof t!="symbol"?t+"":t,i);(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))s(e);new MutationObserver(e=>{for(const o of e)if(o.type==="childList")for(const r of o.addedNodes)r.tagName==="LINK"&&r.rel==="modulepreload"&&s(r)}).observe(document,{childList:!0,subtree:!0});function i(e){const o={};return e.integrity&&(o.integrity=e.integrity),e.referrerPolicy&&(o.referrerPolicy=e.referrerPolicy),e.crossOrigin==="use-credentials"?o.credentials="include":e.crossOrigin==="anonymous"?o.credentials="omit":o.credentials="same-origin",o}function s(e){if(e.ep)return;e.ep=!0;const o=i(e);fetch(e.href,o)}})();class W{constructor(t){a(this,"gl");a(this,"width");a(this,"height");const i=t.getContext("webgl2");if(!i)throw new Error("WebGL2 not supported");this.gl=i,this.width=t.width,this.height=t.height,this.setupGL()}setupGL(){const t=this.gl;t.enable(t.BLEND),t.blendFunc(t.SRC_ALPHA,t.ONE_MINUS_SRC_ALPHA),t.enable(t.DEPTH_TEST),t.depthFunc(t.LEQUAL),this.resize(this.width,this.height)}resize(t,i){this.width=t,this.height=i,this.gl.viewport(0,0,t,i)}clear(t=.1,i=.1,s=.1,e=1){const o=this.gl;o.clearColor(t,i,s,e),o.clear(o.COLOR_BUFFER_BIT|o.DEPTH_BUFFER_BIT)}getGL(){return this.gl}getWidth(){return this.width}getHeight(){return this.height}}class A{constructor(t,i,s){a(this,"gl");a(this,"program");a(this,"uniformLocations",new Map);this.gl=t;const e=this.compileShader(t.VERTEX_SHADER,i),o=this.compileShader(t.FRAGMENT_SHADER,s);this.program=this.createProgram(e,o)}compileShader(t,i){const s=this.gl,e=s.createShader(t);if(!e)throw new Error("Failed to create shader");if(s.shaderSource(e,i),s.compileShader(e),!s.getShaderParameter(e,s.COMPILE_STATUS)){const o=s.getShaderInfoLog(e);throw s.deleteShader(e),new Error(`Shader compilation error: ${o}`)}return e}createProgram(t,i){const s=this.gl,e=s.createProgram();if(!e)throw new Error("Failed to create program");if(s.attachShader(e,t),s.attachShader(e,i),s.linkProgram(e),!s.getProgramParameter(e,s.LINK_STATUS)){const o=s.getProgramInfoLog(e);throw s.deleteProgram(e),new Error(`Program linking error: ${o}`)}return s.deleteShader(t),s.deleteShader(i),e}use(){this.gl.useProgram(this.program)}getUniformLocation(t){if(!this.uniformLocations.has(t)){const i=this.gl.getUniformLocation(this.program,t);if(!i)return console.warn(`Uniform '${t}' not found`),null;this.uniformLocations.set(t,i)}return this.uniformLocations.get(t)}setUniform1i(t,i){const s=this.getUniformLocation(t);s&&this.gl.uniform1i(s,i)}setUniform1f(t,i){const s=this.getUniformLocation(t);s&&this.gl.uniform1f(s,i)}setUniform2f(t,i,s){const e=this.getUniformLocation(t);e&&this.gl.uniform2f(e,i,s)}setUniform3f(t,i,s,e){const o=this.getUniformLocation(t);o&&this.gl.uniform3f(o,i,s,e)}setUniform4f(t,i,s,e,o){const r=this.getUniformLocation(t);r&&this.gl.uniform4f(r,i,s,e,o)}setUniformMatrix4fv(t,i){const s=this.getUniformLocation(t);s&&this.gl.uniformMatrix4fv(s,!1,i)}getProgram(){return this.program}}const G=`#version 300 es
precision highp float;

in vec2 a_position;
in vec2 a_texCoord;

uniform mat4 u_projection;
uniform mat4 u_view;
uniform mat4 u_model;

out vec2 v_texCoord;

void main() {
    gl_Position = u_projection * u_view * u_model * vec4(a_position, 0.0, 1.0);
    v_texCoord = a_texCoord;
}`,O=`#version 300 es
precision highp float;

in vec2 v_texCoord;

uniform sampler2D u_texture;
uniform vec4 u_color;

out vec4 fragColor;

void main() {
    vec4 texColor = texture(u_texture, v_texCoord);
    fragColor = texColor * u_color;
}`,q=`#version 300 es
precision highp float;

in vec2 a_position;

uniform mat4 u_projection;
uniform mat4 u_view;
uniform mat4 u_model;

void main() {
    gl_Position = u_projection * u_view * u_model * vec4(a_position, 0.0, 1.0);
}`,N=`#version 300 es
precision highp float;

uniform vec4 u_color;

out vec4 fragColor;

void main() {
    fragColor = u_color;
}`;class v{constructor(t=0,i=0){this.x=t,this.y=i}add(t){return new v(this.x+t.x,this.y+t.y)}subtract(t){return new v(this.x-t.x,this.y-t.y)}multiply(t){return new v(this.x*t,this.y*t)}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}normalize(){const t=this.length();return t===0?new v(0,0):new v(this.x/t,this.y/t)}}class I{constructor(t){a(this,"data");this.data=t||new Float32Array(16)}static identity(){const t=new I;return t.data[0]=1,t.data[5]=1,t.data[10]=1,t.data[15]=1,t}static orthographic(t,i,s,e,o,r){const n=new I,h=1/(t-i),c=1/(s-e),u=1/(o-r);return n.data[0]=-2*h,n.data[5]=-2*c,n.data[10]=2*u,n.data[12]=(t+i)*h,n.data[13]=(e+s)*c,n.data[14]=(r+o)*u,n.data[15]=1,n}static translate(t,i,s=0){const e=I.identity();return e.data[12]=t,e.data[13]=i,e.data[14]=s,e}static scale(t,i,s=1){const e=I.identity();return e.data[0]=t,e.data[5]=i,e.data[10]=s,e}static rotateZ(t){const i=I.identity(),s=Math.cos(t),e=Math.sin(t);return i.data[0]=s,i.data[1]=e,i.data[4]=-e,i.data[5]=s,i}multiply(t){const i=new I,s=this.data,e=t.data,o=i.data;for(let r=0;r<4;r++)for(let n=0;n<4;n++)o[r*4+n]=s[r*4+0]*e[0*4+n]+s[r*4+1]*e[1*4+n]+s[r*4+2]*e[2*4+n]+s[r*4+3]*e[3*4+n];return i}}class ${constructor(t,i=1e3){a(this,"gl");a(this,"spriteShader");a(this,"colorShader");a(this,"vertexBuffer");a(this,"indexBuffer");a(this,"vertices");a(this,"indices");a(this,"maxSprites");a(this,"spriteCount",0);a(this,"vertexIndex",0);this.gl=t,this.maxSprites=i,this.spriteShader=new A(t,G,O),this.colorShader=new A(t,q,N),this.vertices=new Float32Array(i*4*4),this.indices=new Uint16Array(i*6),this.setupBuffers(),this.setupIndices()}setupBuffers(){const t=this.gl,i=t.createBuffer();if(!i)throw new Error("Failed to create vertex buffer");this.vertexBuffer=i;const s=t.createBuffer();if(!s)throw new Error("Failed to create index buffer");this.indexBuffer=s}setupIndices(){for(let t=0;t<this.maxSprites;t++){const i=t*6,s=t*4;this.indices[i+0]=s+0,this.indices[i+1]=s+1,this.indices[i+2]=s+2,this.indices[i+3]=s+0,this.indices[i+4]=s+2,this.indices[i+5]=s+3}}begin(t,i){this.spriteCount=0,this.vertexIndex=0,this.spriteShader.use(),this.spriteShader.setUniformMatrix4fv("u_projection",t.data),this.spriteShader.setUniformMatrix4fv("u_view",i.data),this.spriteShader.setUniformMatrix4fv("u_model",I.identity().data),this.spriteShader.setUniform4f("u_color",1,1,1,1)}drawTexturedQuad(t,i,s,e,o=0,r=0,n=1,h=1,c=0){this.spriteCount>=this.maxSprites&&this.flush();const u=s/2,d=e/2,m=Math.cos(c),l=Math.sin(c),f=-u,g=-d,b=u,y=d,T=[t+f*m-g*l,i+f*l+g*m,t+b*m-g*l,i+b*l+g*m,t+b*m-y*l,i+b*l+y*m,t+f*m-y*l,i+f*l+y*m],k=[o,r,n,r,n,h,o,h];for(let M=0;M<4;M++)this.vertices[this.vertexIndex++]=T[M*2],this.vertices[this.vertexIndex++]=T[M*2+1],this.vertices[this.vertexIndex++]=k[M*2],this.vertices[this.vertexIndex++]=k[M*2+1];this.spriteCount++}drawColoredQuad(t,i,s,e,o,r,n,h=1,c,u){const d=this.gl;this.flush(),this.colorShader.use(),this.colorShader.setUniform4f("u_color",o,r,n,h),c&&u&&(this.colorShader.setUniformMatrix4fv("u_projection",c.data),this.colorShader.setUniformMatrix4fv("u_view",u.data),this.colorShader.setUniformMatrix4fv("u_model",I.identity().data));const m=new Float32Array([t-s/2,i-e/2,t+s/2,i-e/2,t+s/2,i+e/2,t-s/2,i+e/2]),l=d.createBuffer();d.bindBuffer(d.ARRAY_BUFFER,l),d.bufferData(d.ARRAY_BUFFER,m,d.STATIC_DRAW);const f=d.getAttribLocation(this.colorShader.getProgram(),"a_position");d.enableVertexAttribArray(f),d.vertexAttribPointer(f,2,d.FLOAT,!1,0,0),d.drawArrays(d.TRIANGLE_FAN,0,4),d.deleteBuffer(l)}flush(){if(this.spriteCount===0)return;const t=this.gl;t.bindBuffer(t.ARRAY_BUFFER,this.vertexBuffer),t.bufferData(t.ARRAY_BUFFER,this.vertices.subarray(0,this.vertexIndex),t.DYNAMIC_DRAW),t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,this.indexBuffer),t.bufferData(t.ELEMENT_ARRAY_BUFFER,this.indices.subarray(0,this.spriteCount*6),t.DYNAMIC_DRAW);const i=4*4,s=t.getAttribLocation(this.spriteShader.getProgram(),"a_position");s!==-1&&(t.enableVertexAttribArray(s),t.vertexAttribPointer(s,2,t.FLOAT,!1,i,0));const e=t.getAttribLocation(this.spriteShader.getProgram(),"a_texCoord");e!==-1&&(t.enableVertexAttribArray(e),t.vertexAttribPointer(e,2,t.FLOAT,!1,i,8)),this.spriteShader.setUniform1i("u_texture",0),t.drawElements(t.TRIANGLES,this.spriteCount*6,t.UNSIGNED_SHORT,0),this.spriteCount=0,this.vertexIndex=0}end(){this.flush()}getSpriteShader(){return this.spriteShader}}class x{constructor(t,i,s){a(this,"gl");a(this,"texture");a(this,"width");a(this,"height");this.gl=t,this.width=i,this.height=s;const e=t.createTexture();if(!e)throw new Error("Failed to create texture");this.texture=e}static fromImageData(t,i){const s=new x(t,i.width,i.height);return s.setData(new Uint8Array(i.data)),s}static async load(t,i,s=t.CLAMP_TO_EDGE){return new Promise((e,o)=>{const r=new Image;r.onload=()=>{const n=new x(t,r.width,r.height);t.bindTexture(t.TEXTURE_2D,n.texture),t.texImage2D(t.TEXTURE_2D,0,t.RGBA,t.RGBA,t.UNSIGNED_BYTE,r),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_S,s),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_T,s),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MIN_FILTER,t.NEAREST),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MAG_FILTER,t.NEAREST),e(n)},r.onerror=()=>{o(new Error(`Failed to load image: ${i}`))},r.src=i})}static createSolid(t,i,s,e,o,r,n=255){const h=new x(t,i,s),c=new Uint8Array(i*s*4);for(let u=0;u<i*s;u++)c[u*4+0]=e,c[u*4+1]=o,c[u*4+2]=r,c[u*4+3]=n;return h.setData(c),h}static generateGrassTile(t,i=32){const s=document.createElement("canvas");s.width=i,s.height=i;const e=s.getContext("2d");e.fillStyle="#4a7c4e",e.fillRect(0,0,i,i);for(let r=0;r<100;r++){const n=Math.random()*i,h=Math.random()*i,c=2+Math.random()*4,u=-Math.PI/2+(Math.random()-.5)*.5;e.strokeStyle=`rgba(${60+Math.random()*40}, ${100+Math.random()*55}, 60, 0.7)`,e.lineWidth=1,e.beginPath(),e.moveTo(n,h),e.lineTo(n+Math.cos(u)*c,h+Math.sin(u)*c),e.stroke()}const o=e.getImageData(0,0,i,i);return x.fromImageData(t,o)}static generateDirtTile(t,i=32){const s=document.createElement("canvas");s.width=i,s.height=i;const e=s.getContext("2d");e.fillStyle="#8b6914",e.fillRect(0,0,i,i);for(let r=0;r<50;r++){const n=Math.random()*i,h=Math.random()*i,c=Math.random()*3;e.fillStyle=`rgba(${100+Math.random()*55}, ${80+Math.random()*40}, 20, 0.5)`,e.beginPath(),e.arc(n,h,c,0,Math.PI*2),e.fill()}const o=e.getImageData(0,0,i,i);return x.fromImageData(t,o)}static generateStoneTile(t,i=32){const s=document.createElement("canvas");s.width=i,s.height=i;const e=s.getContext("2d");e.fillStyle="#666666",e.fillRect(0,0,i,i);for(let r=0;r<30;r++){const n=Math.random()*i,h=Math.random()*i,c=5+Math.random()*10,u=5+Math.random()*10;e.fillStyle=`rgba(${80+Math.random()*40}, ${80+Math.random()*40}, ${80+Math.random()*40}, 0.5)`,e.fillRect(n,h,c,u)}const o=e.getImageData(0,0,i,i);return x.fromImageData(t,o)}static generateWaterTile(t,i=32){const s=document.createElement("canvas");s.width=i,s.height=i;const e=s.getContext("2d"),o=e.createLinearGradient(0,0,i,i);o.addColorStop(0,"#2e86de"),o.addColorStop(.5,"#54a0ff"),o.addColorStop(1,"#2e86de"),e.fillStyle=o,e.fillRect(0,0,i,i),e.strokeStyle="rgba(255, 255, 255, 0.3)",e.lineWidth=1;for(let n=0;n<3;n++){const h=Math.random()*i,c=Math.random()*i,u=5+Math.random()*10;e.beginPath(),e.arc(h,c,u,0,Math.PI*2),e.stroke()}const r=e.getImageData(0,0,i,i);return x.fromImageData(t,r)}setData(t){const i=this.gl;i.bindTexture(i.TEXTURE_2D,this.texture),i.texImage2D(i.TEXTURE_2D,0,i.RGBA,this.width,this.height,0,i.RGBA,i.UNSIGNED_BYTE,t),i.texParameteri(i.TEXTURE_2D,i.TEXTURE_WRAP_S,i.CLAMP_TO_EDGE),i.texParameteri(i.TEXTURE_2D,i.TEXTURE_WRAP_T,i.CLAMP_TO_EDGE),i.texParameteri(i.TEXTURE_2D,i.TEXTURE_MIN_FILTER,i.NEAREST),i.texParameteri(i.TEXTURE_2D,i.TEXTURE_MAG_FILTER,i.NEAREST)}bind(t=0){const i=this.gl;i.activeTexture(i.TEXTURE0+t),i.bindTexture(i.TEXTURE_2D,this.texture)}getWidth(){return this.width}getHeight(){return this.height}dispose(){this.gl.deleteTexture(this.texture)}}class X{constructor(t,i){a(this,"position");a(this,"zoom");a(this,"screenWidth");a(this,"screenHeight");this.position=new v(0,0),this.zoom=1,this.screenWidth=t,this.screenHeight=i}setPosition(t,i){this.position.x=t,this.position.y=i}getPosition(){return this.position}setZoom(t){this.zoom=Math.max(.1,Math.min(5,t))}getZoom(){return this.zoom}resize(t,i){this.screenWidth=t,this.screenHeight=i}getProjectionMatrix(){const t=this.screenWidth/2,i=this.screenHeight/2;return I.orthographic(-t,t,i,-i,-1,1)}getViewMatrix(){const t=I.scale(this.zoom,this.zoom),i=I.translate(-this.position.x,-this.position.y);return t.multiply(i)}screenToWorld(t,i){const s=(t-this.screenWidth/2)/this.zoom+this.position.x,e=(i-this.screenHeight/2)/this.zoom+this.position.y;return new v(s,e)}worldToScreen(t,i){const s=(t-this.position.x)*this.zoom+this.screenWidth/2,e=(i-this.position.y)*this.zoom+this.screenHeight/2;return new v(s,e)}followTarget(t,i,s=.1){this.position.x+=(t-this.position.x)*s,this.position.y+=(i-this.position.y)*s}}var P=(p=>(p.W="KeyW",p.A="KeyA",p.S="KeyS",p.D="KeyD",p.Space="Space",p.Shift="ShiftLeft",p.E="KeyE",p.F="KeyF",p.Escape="Escape",p.ArrowUp="ArrowUp",p.ArrowDown="ArrowDown",p.ArrowLeft="ArrowLeft",p.ArrowRight="ArrowRight",p))(P||{});class K{constructor(t){a(this,"keys",new Map);a(this,"previousKeys",new Map);a(this,"mousePosition",new v);a(this,"mouseButtons",new Map);a(this,"previousMouseButtons",new Map);t.tabIndex=1,t.focus(),this.setupEventListeners(t)}setupEventListeners(t){window.addEventListener("keydown",i=>{this.keys.set(i.code,!0),(i.code.startsWith("Arrow")||i.code.startsWith("Key")||i.code==="Space"||i.code.startsWith("Digit"))&&i.preventDefault()}),window.addEventListener("keyup",i=>{this.keys.set(i.code,!1),(i.code.startsWith("Arrow")||i.code.startsWith("Key")||i.code==="Space"||i.code.startsWith("Digit"))&&i.preventDefault()}),t.addEventListener("mousemove",i=>{const s=t.getBoundingClientRect();this.mousePosition.x=i.clientX-s.left,this.mousePosition.y=i.clientY-s.top}),t.addEventListener("mousedown",i=>{t.focus(),this.mouseButtons.set(i.button,!0),i.preventDefault()}),t.addEventListener("mouseup",i=>{this.mouseButtons.set(i.button,!1),i.preventDefault()}),t.addEventListener("contextmenu",i=>{i.preventDefault()}),window.addEventListener("blur",()=>{this.keys.clear(),this.mouseButtons.clear()})}update(){this.previousKeys=new Map(this.keys),this.previousMouseButtons=new Map(this.mouseButtons)}isKeyDown(t){return this.keys.get(t)||!1}isKeyPressed(t){const i=this.keys.get(t)||!1,s=this.previousKeys.get(t)||!1;return i&&!s}isKeyReleased(t){return!this.keys.get(t)&&(this.previousKeys.get(t)||!1)}isMouseButtonDown(t){return this.mouseButtons.get(t)||!1}isMouseButtonPressed(t){return(this.mouseButtons.get(t)||!1)&&!this.previousMouseButtons.get(t)}isMouseButtonReleased(t){return!this.mouseButtons.get(t)&&(this.previousMouseButtons.get(t)||!1)}getMousePosition(){return this.mousePosition}getMovementVector(){const t=new v;return(this.isKeyDown("KeyW")||this.isKeyDown("ArrowUp"))&&(t.y-=1),(this.isKeyDown("KeyS")||this.isKeyDown("ArrowDown"))&&(t.y+=1),(this.isKeyDown("KeyA")||this.isKeyDown("ArrowLeft"))&&(t.x-=1),(this.isKeyDown("KeyD")||this.isKeyDown("ArrowRight"))&&(t.x+=1),t.length()>0?t.normalize():t}}var S=(p=>(p[p.Grass=0]="Grass",p[p.Dirt=1]="Dirt",p[p.Stone=2]="Stone",p[p.Water=3]="Water",p[p.TilledDirt=4]="TilledDirt",p[p.PlantedDirt=5]="PlantedDirt",p[p.Tree=6]="Tree",p[p.TreeStump=7]="TreeStump",p))(S||{});class Q{constructor(t,i,s=32){a(this,"tiles");a(this,"width");a(this,"height");a(this,"tileSize");this.width=t,this.height=i,this.tileSize=s,this.tiles=[],this.generateMap()}generateMap(){for(let t=0;t<this.height;t++){this.tiles[t]=[];for(let i=0;i<this.width;i++)this.tiles[t][i]={type:0,solid:!1}}this.generateRiver(),this.generateStones(),this.generateDirtPatches(),this.generateTrees()}generateRiver(){const t=Math.floor(this.height/2),i=3;for(let s=0;s<this.width;s++){const e=Math.sin(s*.3)*2;for(let o=-i;o<=i;o++){const r=Math.floor(t+e+o);r>=0&&r<this.height&&(this.tiles[r][s]={type:3,solid:!0})}}}generateStones(){const t=Math.floor(this.width*this.height*.02);for(let i=0;i<t;i++){const s=Math.floor(Math.random()*this.width),e=Math.floor(Math.random()*this.height);this.tiles[e][s].type===0&&(this.tiles[e][s]={type:2,solid:!0})}}generateDirtPatches(){for(let i=0;i<5;i++){const s=Math.floor(Math.random()*this.width),e=Math.floor(Math.random()*this.height),o=2+Math.floor(Math.random()*3);for(let r=-o;r<=o;r++)for(let n=-o;n<=o;n++)if(n*n+r*r<=o*o){const h=s+n,c=e+r;h>=0&&h<this.width&&c>=0&&c<this.height&&this.tiles[c][h].type===0&&(this.tiles[c][h]={type:1,solid:!1})}}}generateTrees(){const t=Math.floor(this.width*this.height*.03);for(let i=0;i<t;i++){const s=Math.floor(Math.random()*this.width),e=Math.floor(Math.random()*this.height);if(this.tiles[e][s].type===0){let o=!1;for(let r=-1;r<=1;r++){for(let n=-1;n<=1;n++){const h=s+n,c=e+r;if(h>=0&&h<this.width&&c>=0&&c<this.height&&this.tiles[c][h].type===6){o=!0;break}}if(o)break}o||(this.tiles[e][s]={type:6,solid:!0,treeHealth:3,treeVariant:Math.floor(Math.random()*4)+1})}}}getTile(t,i){const s=Math.floor(t/this.tileSize),e=Math.floor(i/this.tileSize);return s<0||s>=this.width||e<0||e>=this.height?null:this.tiles[e][s]}getTileAt(t,i){return t<0||t>=this.width||i<0||i>=this.height?null:this.tiles[i][t]}setTile(t,i,s){t>=0&&t<this.width&&i>=0&&i<this.height&&(this.tiles[i][t]=s)}tillTile(t,i){const s=Math.floor(t/this.tileSize),e=Math.floor(i/this.tileSize),o=this.getTileAt(s,e);return o&&(o.type===0||o.type===1)?(this.tiles[e][s]={type:4,solid:!1,tilled:!0,tilledTime:Date.now()},!0):!1}plantSeed(t,i,s="carrot"){const e=Math.floor(t/this.tileSize),o=Math.floor(i/this.tileSize),r=this.getTileAt(e,o);if(s==="tree"){if(r&&r.type===0)return this.tiles[o][e]={type:7,solid:!1,stumpTime:Date.now()-15e3,originalTreeVariant:Math.floor(Math.random()*4)+1},!0}else if(r&&r.type===4&&!r.planted)return this.tiles[o][e]={type:5,solid:!1,tilled:!0,planted:!0,growth:0,watered:!1,cropType:s},!0;return!1}waterTile(t,i){const s=Math.floor(t/this.tileSize),e=Math.floor(i/this.tileSize),o=this.getTileAt(s,e);return o&&(o.type===4||o.type===5)?(o.watered=!0,o.lastWatered=Date.now(),!0):!1}harvestCrop(t,i){const s=Math.floor(t/this.tileSize),e=Math.floor(i/this.tileSize),o=this.getTileAt(s,e);if(o&&o.type===5&&o.growth&&o.growth>=1){const r=o.cropType||"carrot";return this.tiles[e][s]={type:4,solid:!1,tilled:!0,watered:!1},r}return null}chopTree(t,i){const s=Math.floor(t/this.tileSize),e=Math.floor(i/this.tileSize),o=this.getTileAt(s,e);if(o&&o.type===6){if(o.treeHealth&&o.treeHealth>1)return o.treeHealth--,!1;{const r=o.treeVariant||1;return this.tiles[e][s]={type:7,solid:!1,stumpTime:Date.now(),originalTreeVariant:r},!0}}else if(o&&o.type===7)return this.tiles[e][s]={type:0,solid:!1},"stump";return!1}updateCrops(t){const i=Date.now();for(let s=0;s<this.height;s++)for(let e=0;e<this.width;e++){const o=this.tiles[s][e];o.type===5&&o.planted&&o.growth!==void 0?o.watered&&(o.growth=Math.min(1,o.growth+t*.1),o.lastWatered&&i-o.lastWatered>5e3&&(o.watered=!1)):o.type===4&&!o.planted?o.tilledTime&&i-o.tilledTime>3e4&&(this.tiles[s][e]={type:0,solid:!1}):o.type===7&&o.stumpTime&&i-o.stumpTime>2e4&&(this.tiles[s][e]={type:6,solid:!0,treeHealth:3,treeVariant:o.originalTreeVariant||Math.floor(Math.random()*4)+1})}}isSolid(t,i){const s=this.getTile(t,i);return s?s.solid:!0}getWidth(){return this.width}getHeight(){return this.height}getTileSize(){return this.tileSize}getWorldWidth(){return this.width*this.tileSize}getWorldHeight(){return this.height*this.tileSize}}var w=(p=>(p.None="none",p.Hoe="hoe",p.Seeds="seeds",p.WateringCan="wateringCan",p.Scythe="scythe",p.Axe="axe",p))(w||{});class Y{constructor(){a(this,"tools",[]);a(this,"selectedIndex",0);this.initializeTools()}initializeTools(){this.tools=[{type:"hoe",name:"Hoe",icon:"⛏️"},{type:"seeds",name:"Carrot Seeds",icon:"🥕",quantity:10},{type:"wateringCan",name:"Watering Can",icon:"💧"},{type:"scythe",name:"Scythe",icon:"🌾"},{type:"axe",name:"Axe",icon:"🪓"}]}getSelectedTool(){return this.tools[this.selectedIndex]}selectTool(t){t>=0&&t<this.tools.length&&(this.selectedIndex=t)}selectNextTool(){this.selectedIndex=(this.selectedIndex+1)%this.tools.length}selectPreviousTool(){this.selectedIndex=(this.selectedIndex-1+this.tools.length)%this.tools.length}consumeSeed(){const t=this.getSelectedTool();return t.type==="seeds"&&t.quantity&&t.quantity>0?(t.quantity--,!0):!1}addSeeds(t){const i=this.tools.find(s=>s.type==="seeds");i&&i.quantity!==void 0&&(i.quantity+=t)}getTools(){return this.tools}getSelectedIndex(){return this.selectedIndex}}class V{constructor(t,i){a(this,"position");a(this,"velocity");a(this,"size");a(this,"speed");a(this,"facing");a(this,"inventory");a(this,"harvestedCrops",new Map);a(this,"isUsingTool",!1);a(this,"toolUseTime",0);a(this,"toolUseDuration",.3);a(this,"money",100);a(this,"sprintMultiplier",1.75);a(this,"animationTime",0);a(this,"isMoving",!1);this.position=new v(t,i),this.velocity=new v(0,0),this.size=new v(24,24),this.speed=150,this.facing="down",this.inventory=new Y}update(t,i,s,e=!1){this.isUsingTool&&(this.toolUseTime+=t,this.toolUseTime>=this.toolUseDuration&&(this.isUsingTool=!1,this.toolUseTime=0)),this.isMoving=i.length()>0,this.isMoving?this.animationTime+=t:this.animationTime=0;let o=this.isUsingTool?.5:1;e&&!this.isUsingTool&&(o*=this.sprintMultiplier),this.velocity=i.multiply(this.speed*o),Math.abs(this.velocity.x)>Math.abs(this.velocity.y)?this.facing=this.velocity.x>0?"right":"left":this.velocity.y!==0&&(this.facing=this.velocity.y>0?"down":"up");const r=this.position.x+this.velocity.x*t,n=this.position.y+this.velocity.y*t;this.checkCollision(r,this.position.y,s)||(this.position.x=r),this.checkCollision(this.position.x,n,s)||(this.position.y=n);const h=s.getWorldWidth(),c=s.getWorldHeight();this.position.x=Math.max(this.size.x/2,Math.min(h-this.size.x/2,this.position.x)),this.position.y=Math.max(this.size.y/2,Math.min(c-this.size.y/2,this.position.y))}checkCollision(t,i,s){const e=this.size.x/2,o=this.size.y/2,r=[{x:t-e,y:i-o},{x:t+e,y:i-o},{x:t-e,y:i+o},{x:t+e,y:i+o}];for(const n of r)if(s.isSolid(n.x,n.y))return!0;return!1}interact(t,i,s,e){if(this.isUsingTool)return;this.isUsingTool=!0,this.toolUseTime=0;let o=this.position.x,r=this.position.y;const n=32;switch(this.facing){case"up":r-=n;break;case"down":r+=n;break;case"left":o-=n;break;case"right":o+=n;break}switch(e||this.inventory.getSelectedTool().type){case w.Hoe:case"hoe":t.tillTile(o,r)&&s?.playSound("hoe",.5);break;case w.Seeds:case"seeds":t.plantSeed(o,r)&&s?.playSound("plant",.4);break;case w.WateringCan:case"wateringCan":t.waterTile(o,r)&&s?.playSound("watering",.4);break;case w.Scythe:case"scythe":const c=t.harvestCrop(o,r);c&&(s?.playSound("scythe",.5),i.createDrop(o,r,c,1),i.createDrop(o+10,r-10,"seeds",2));break;case w.Axe:case"axe":const u=t.chopTree(o,r);s?.playSound("axe",.6),u&&(i.createDrop(o,r,"wood",3),i.createDrop(o-10,r+10,"wood",2));break}}interactAt(t,i,s,e,o,r){if(this.isUsingTool)return;switch(this.isUsingTool=!0,this.toolUseTime=0,r||this.inventory.getSelectedTool().type){case w.Hoe:s.tillTile(t,i)&&o?.playSound("hoe",.5);break;case w.Seeds:case"seeds":s.plantSeed(t,i)&&o?.playSound("plant",.4);break;case"treeSeeds":s.plantSeed(t,i,"tree")&&o?.playSound("plant",.4);break;case w.WateringCan:case"wateringCan":s.waterTile(t,i)&&o?.playSound("watering",.4);break;case w.Scythe:case"scythe":const h=s.harvestCrop(t,i);h&&(o?.playSound("scythe",.5),e.createDrop(t,i,h,1),e.createDrop(t+10,i-10,"seeds",2));break;case w.Axe:case"axe":const c=s.chopTree(t,i);o?.playSound("axe",.6),c===!0?(e.createDrop(t,i,"wood",3),e.createDrop(t-10,i+10,"wood",2),e.createDrop(t+15,i,"tree_seeds",1)):c==="stump"&&e.createDrop(t,i,"wood",1);break}}getPosition(){return this.position}getSize(){return this.size}getFacing(){return this.facing}getInventory(){return this.inventory}getHarvestedCrops(){return this.harvestedCrops}isAnimatingTool(){return this.isUsingTool}getToolAnimationProgress(){return this.isUsingTool?this.toolUseTime/this.toolUseDuration:0}collectItems(t,i,s){t.checkPickup(this.position.x,this.position.y).forEach(o=>{let r=!1;if(s){let n=null;o.itemType==="seeds"?n={id:"carrot_seeds",name:"Carrot Seeds",icon:"🥕",quantity:o.quantity,stackable:!0,type:"seed",toolType:"seeds"}:o.itemType==="carrot"?n={id:"carrot",name:"Carrot",icon:"🥕",quantity:o.quantity,stackable:!0,type:"crop"}:o.itemType==="wood"?n={id:"wood",name:"Wood",icon:"🪵",quantity:o.quantity,stackable:!0,type:"resource"}:o.itemType==="tree_seeds"&&(n={id:"tree_seeds",name:"Tree Seeds",icon:"🌰",quantity:o.quantity,stackable:!0,type:"seed",toolType:"treeSeeds"}),n&&(r=s.addItem(n))}else if(o.itemType==="seeds")this.inventory.addSeeds(o.quantity),r=!0;else{const n=this.harvestedCrops.get(o.itemType)||0;this.harvestedCrops.set(o.itemType,n+o.quantity),r=!0}r&&(console.log(`Picked up ${o.quantity} ${o.itemType}!`),i?.playSound("pickup",.4))})}getMoney(){return this.money}addMoney(t){this.money+=t}spendMoney(t){return this.money>=t?(this.money-=t,!0):!1}getAnimationTime(){return this.animationTime}isPlayerMoving(){return this.isMoving}}class j{constructor(){a(this,"drops",new Map);a(this,"nextId",1)}createDrop(t,i,s,e=1){const o={id:this.nextId++,position:new v(t,i),itemType:s,quantity:e,bobOffset:0,bobTime:Math.random()*Math.PI*2};this.drops.set(o.id,o)}update(t){this.drops.forEach(i=>{i.bobTime+=t*3,i.bobOffset=Math.sin(i.bobTime)*2})}checkPickup(t,i,s=24){const e=[],o=[];return this.drops.forEach((r,n)=>{const h=r.position.x-t,c=r.position.y-i;h*h+c*c<s*s&&(e.push(r),o.push(n))}),o.forEach(r=>this.drops.delete(r)),e}getDrops(){return Array.from(this.drops.values())}clear(){this.drops.clear()}}class U{constructor(t){a(this,"id");a(this,"name");a(this,"position");a(this,"type");a(this,"dialogue");a(this,"animTime",0);this.id=t.id,this.name=t.name,this.position=t.position,this.type=t.type,this.dialogue=t.dialogue||["Hello there!"]}update(t){this.animTime+=t}getAnimOffset(){return Math.sin(this.animTime*2)*1}isNearPlayer(t,i=48){const s=this.position.x-t.x,e=this.position.y-t.y;return s*s+e*e<i*i}}class Z{constructor(){a(this,"items",[]);a(this,"isOpen",!1);this.initializeShopItems()}initializeShopItems(){this.items=[{id:"seeds",name:"Carrot Seeds",buyPrice:10,sellPrice:5,quantity:-1},{id:"carrot",name:"Carrot",buyPrice:30,sellPrice:15,quantity:0}]}open(){this.isOpen=!0}close(){this.isOpen=!1}isShopOpen(){return this.isOpen}getItems(){return this.items}canBuyItem(t,i){const s=this.items.find(e=>e.id===t);return!s||t==="carrot"?!1:i>=s.buyPrice}buyItem(t){const i=this.items.find(s=>s.id===t);return!i||t==="carrot"?0:i.buyPrice}sellItem(t,i=1){const s=this.items.find(e=>e.id===t);return s?s.sellPrice*i:0}}class J{constructor(){a(this,"audioContext");a(this,"masterGain");a(this,"sounds",new Map);a(this,"musicGain");a(this,"currentMusic",null);a(this,"musicBuffer",null);a(this,"musicStatus","Not loaded");a(this,"musicPlaying",!1);this.audioContext=new(window.AudioContext||window.webkitAudioContext),this.masterGain=this.audioContext.createGain(),this.masterGain.gain.value=.3,this.masterGain.connect(this.audioContext.destination),this.musicGain=this.audioContext.createGain(),this.musicGain.gain.value=.2,this.musicGain.connect(this.masterGain),this.generateSounds()}generateSounds(){this.sounds.set("footstep1",this.generateFootstep(.1)),this.sounds.set("footstep2",this.generateFootstep(.15)),this.sounds.set("footstep3",this.generateFootstep(.12)),this.sounds.set("hoe",this.generateHoeSound()),this.sounds.set("axe",this.generateAxeSound()),this.sounds.set("scythe",this.generateScytheSound()),this.sounds.set("watering",this.generateWateringSound()),this.sounds.set("plant",this.generatePlantSound()),this.sounds.set("pickup",this.generatePickupSound()),this.sounds.set("coin",this.generateCoinSound()),this.sounds.set("uiOpen",this.generateUIOpenSound()),this.sounds.set("uiClose",this.generateUICloseSound()),this.sounds.set("purchase",this.generatePurchaseSound())}generateFootstep(t){const i=this.audioContext.sampleRate,e=this.audioContext.createBuffer(1,i*.1,i),o=e.getChannelData(0);for(let r=0;r<o.length;r++){const n=r/i,h=Math.sin(2*Math.PI*(50+t*100)*n)*Math.exp(-n*30),c=(Math.random()-.5)*.1*Math.exp(-n*40);o[r]=(h+c)*.3}return e}generateHoeSound(){const t=this.audioContext.sampleRate,s=this.audioContext.createBuffer(1,t*.2,t),e=s.getChannelData(0);for(let o=0;o<e.length;o++){const r=o/t,n=Math.sin(2*Math.PI*80*r)*Math.exp(-r*15),h=(Math.random()-.5)*.3*Math.exp(-r*10)*Math.sin(2*Math.PI*200*r);e[o]=(n+h)*.4}return s}generateAxeSound(){const t=this.audioContext.sampleRate,s=this.audioContext.createBuffer(1,t*.3,t),e=s.getChannelData(0);for(let o=0;o<e.length;o++){const r=o/t,n=Math.sin(2*Math.PI*150*r)*Math.exp(-r*20),h=Math.sin(2*Math.PI*300*r)*Math.exp(-r*8)*.5,c=(Math.random()-.5)*Math.exp(-r*50);e[o]=(n+h+c)*.6}return s}generateScytheSound(){const t=this.audioContext.sampleRate,s=this.audioContext.createBuffer(1,t*.25,t),e=s.getChannelData(0);for(let o=0;o<e.length;o++){const r=o/t,n=Math.sin(2*Math.PI*400*r*(1+r))*Math.exp(-r*10),h=(Math.random()-.5)*.2*Math.exp(-r*20);e[o]=(n+h)*.3}return s}generateWateringSound(){const t=this.audioContext.sampleRate,i=.8,s=this.audioContext.createBuffer(1,t*i,t),e=s.getChannelData(0);for(let o=0;o<e.length;o++){const r=o/t,n=(Math.random()-.5)*.3,h=Math.sin(2*Math.PI*50*r)*Math.sin(2*Math.PI*3*r),c=Math.sin(Math.PI*r/i);e[o]=(n+h*.2)*c*.3}return s}generatePlantSound(){const t=this.audioContext.sampleRate,s=this.audioContext.createBuffer(1,t*.15,t),e=s.getChannelData(0);for(let o=0;o<e.length;o++){const r=o/t,n=Math.sin(2*Math.PI*100*r)*Math.exp(-r*25),h=(Math.random()-.5)*.1*Math.exp(-r*30);e[o]=(n+h)*.25}return s}generatePickupSound(){const t=this.audioContext.sampleRate,s=this.audioContext.createBuffer(1,t*.2,t),e=s.getChannelData(0);for(let o=0;o<e.length;o++){const r=o/t,n=Math.sin(2*Math.PI*600*r)*Math.exp(-r*8),h=Math.sin(2*Math.PI*800*r)*Math.exp(-r*10)*(r>.05?1:0);e[o]=(n+h)*.3}return s}generateCoinSound(){const t=this.audioContext.sampleRate,s=this.audioContext.createBuffer(1,t*.3,t),e=s.getChannelData(0);for(let o=0;o<e.length;o++){const r=o/t,n=Math.sin(2*Math.PI*1200*r)*Math.exp(-r*5),h=Math.sin(2*Math.PI*1800*r)*Math.exp(-r*7)*.5;e[o]=(n+h)*.4}return s}generateUIOpenSound(){const t=this.audioContext.sampleRate,s=this.audioContext.createBuffer(1,t*.2,t),e=s.getChannelData(0);for(let o=0;o<e.length;o++){const r=o/t,n=Math.sin(2*Math.PI*(200+r*800)*r)*Math.exp(-r*5);e[o]=n*.3}return s}generateUICloseSound(){const t=this.audioContext.sampleRate,s=this.audioContext.createBuffer(1,t*.2,t),e=s.getChannelData(0);for(let o=0;o<e.length;o++){const r=o/t,n=Math.sin(2*Math.PI*(800-r*600)*r)*Math.exp(-r*5);e[o]=n*.3}return s}generatePurchaseSound(){const t=this.audioContext.sampleRate,s=this.audioContext.createBuffer(1,t*.4,t),e=s.getChannelData(0);for(let o=0;o<e.length;o++){const r=o/t,n=Math.sin(2*Math.PI*800*r)*Math.exp(-r*4)*(r<.1?1:0),h=Math.sin(2*Math.PI*1e3*r)*Math.exp(-(r-.1)*4)*(r>.1?1:0);e[o]=(n+h)*.4}return s}playSound(t,i=1,s=1){const e=this.sounds.get(t);if(!e){console.warn(`Sound "${t}" not found`);return}this.audioContext.state==="suspended"&&this.audioContext.resume();const o=this.audioContext.createBufferSource();o.buffer=e;const r=this.audioContext.createGain();r.gain.value=i,o.connect(r),r.connect(this.masterGain),o.playbackRate.value=s,o.start()}playFootstep(){const t=Math.floor(Math.random()*3)+1,i=.9+Math.random()*.2;this.playSound(`footstep${t}`,.3,i)}setMasterVolume(t){this.masterGain.gain.value=Math.max(0,Math.min(1,t))}async loadMusic(t){try{this.musicStatus="Loading...";const s=await(await fetch(t)).arrayBuffer();this.musicBuffer=await this.audioContext.decodeAudioData(s),this.musicStatus="Loaded (Click to play)",console.log("Music loaded successfully")}catch(i){this.musicStatus="Load failed: "+i,console.error("Failed to load music:",i)}}playMusic(t=!0){if(!this.musicBuffer){console.warn("No music loaded"),this.musicStatus="No music buffer";return}this.stopMusic(),this.audioContext.state==="suspended"&&this.audioContext.resume(),this.currentMusic=this.audioContext.createBufferSource(),this.currentMusic.buffer=this.musicBuffer,this.currentMusic.loop=t,this.currentMusic.connect(this.musicGain),this.currentMusic.start(),this.musicPlaying=!0,this.musicStatus="Playing",console.log("Music started playing")}stopMusic(){this.currentMusic&&(this.currentMusic.stop(),this.currentMusic.disconnect(),this.currentMusic=null,this.musicPlaying=!1,this.musicStatus="Stopped")}getMusicStatus(){return this.musicStatus}getAudioContextState(){return this.audioContext.state}setMusicVolume(t){this.musicGain.gain.value=Math.max(0,Math.min(1,t))}}class tt{constructor(){a(this,"grid");a(this,"hotbar");a(this,"gridSize",{rows:6,cols:6});a(this,"hotbarSize",6);a(this,"isOpen",!1);a(this,"selectedHotbarSlot",0);a(this,"draggedItem",null);a(this,"draggedFromSlot",null);this.grid=[];for(let t=0;t<this.gridSize.rows;t++){this.grid[t]=[];for(let i=0;i<this.gridSize.cols;i++)this.grid[t][i]={item:null,row:t,col:i}}this.hotbar=[];for(let t=0;t<this.hotbarSize;t++)this.hotbar[t]={item:null,row:-1,col:t};this.initializeStartingItems()}initializeStartingItems(){this.hotbar[0].item={id:"hoe",name:"Hoe",icon:"⛏️",quantity:1,stackable:!1,type:"tool",toolType:"hoe"},this.hotbar[1].item={id:"axe",name:"Axe",icon:"🪓",quantity:1,stackable:!1,type:"tool",toolType:"axe"},this.hotbar[2].item={id:"watering_can",name:"Watering Can",icon:"💧",quantity:1,stackable:!1,type:"tool",toolType:"wateringCan"},this.hotbar[3].item={id:"scythe",name:"Scythe",icon:"🌾",quantity:1,stackable:!1,type:"tool",toolType:"scythe"},this.hotbar[4].item={id:"carrot_seeds",name:"Carrot Seeds",icon:"🥕",quantity:10,stackable:!0,type:"seed",toolType:"seeds"}}addItem(t){if(t.stackable){for(const i of this.hotbar)if(i.item&&i.item.id===t.id)return i.item.quantity+=t.quantity,!0;for(let i=0;i<this.gridSize.rows;i++)for(let s=0;s<this.gridSize.cols;s++){const e=this.grid[i][s];if(e.item&&e.item.id===t.id)return e.item.quantity+=t.quantity,!0}}for(let i=0;i<this.gridSize.rows;i++)for(let s=0;s<this.gridSize.cols;s++)if(!this.grid[i][s].item)return this.grid[i][s].item={...t},!0;return!1}removeItem(t,i){for(const s of this.hotbar)if(s.item&&s.item.id===t&&s.item.quantity>=i)return s.item.quantity-=i,s.item.quantity===0&&(s.item=null),!0;for(let s=0;s<this.gridSize.rows;s++)for(let e=0;e<this.gridSize.cols;e++){const o=this.grid[s][e];if(o.item&&o.item.id===t&&o.item.quantity>=i)return o.item.quantity-=i,o.item.quantity===0&&(o.item=null),!0}return!1}getItemCount(t){let i=0;for(const s of this.hotbar)s.item&&s.item.id===t&&(i+=s.item.quantity);for(let s=0;s<this.gridSize.rows;s++)for(let e=0;e<this.gridSize.cols;e++){const o=this.grid[s][e];o.item&&o.item.id===t&&(i+=o.item.quantity)}return i}startDragging(t,i,s){const e=s?this.hotbar[i]:this.grid[t][i];e.item&&(this.draggedItem={...e.item},this.draggedFromSlot={row:t,col:i,isHotbar:s},e.item=null)}dropItem(t,i,s){if(!this.draggedItem||!this.draggedFromSlot)return;const e=s?this.hotbar[i]:this.grid[t][i],o=this.draggedFromSlot.isHotbar?this.hotbar[this.draggedFromSlot.col]:this.grid[this.draggedFromSlot.row][this.draggedFromSlot.col];e.item&&(o.item=e.item),e.item=this.draggedItem,this.draggedItem=null,this.draggedFromSlot=null}cancelDragging(){if(this.draggedItem&&this.draggedFromSlot){const t=this.draggedFromSlot.isHotbar?this.hotbar[this.draggedFromSlot.col]:this.grid[this.draggedFromSlot.row][this.draggedFromSlot.col];t.item=this.draggedItem}this.draggedItem=null,this.draggedFromSlot=null}toggleInventory(){this.isOpen=!this.isOpen,this.isOpen||this.cancelDragging()}isInventoryOpen(){return this.isOpen}selectHotbarSlot(t){t>=0&&t<this.hotbarSize&&(this.selectedHotbarSlot=t)}getSelectedHotbarItem(){return this.hotbar[this.selectedHotbarSlot].item}getGrid(){return this.grid}getHotbar(){return this.hotbar}getSelectedHotbarIndex(){return this.selectedHotbarSlot}getDraggedItem(){return this.draggedItem}getGridSize(){return this.gridSize}quickTransfer(t,i,s){const e=s?this.hotbar[i]:this.grid[t][i];if(e.item)if(s){for(let o=0;o<this.gridSize.rows;o++)for(let r=0;r<this.gridSize.cols;r++){const n=this.grid[o][r];if(e.item.stackable&&n.item&&n.item.id===e.item.id){n.item.quantity+=e.item.quantity,e.item=null;return}}for(let o=0;o<this.gridSize.rows;o++)for(let r=0;r<this.gridSize.cols;r++)if(!this.grid[o][r].item){this.grid[o][r].item=e.item,e.item=null;return}}else{for(let o=0;o<this.hotbarSize;o++){const r=this.hotbar[o];if(e.item.stackable&&r.item&&r.item.id===e.item.id){r.item.quantity+=e.item.quantity,e.item=null;return}}for(let o=0;o<this.hotbarSize;o++)if(!this.hotbar[o].item){this.hotbar[o].item=e.item,e.item=null;return}}}}class et{constructor(t){a(this,"container",null);a(this,"hotbarContainer",null);a(this,"inventorySystem");a(this,"mousePos",{x:0,y:0});a(this,"hoveredSlot",null);a(this,"handledKeys",new Set);a(this,"tooltip",null);a(this,"keyHandler",null);a(this,"keyupHandler",null);this.inventorySystem=t,this.createHotbar(),this.createTooltip(),this.setupMouseTracking()}setupMouseTracking(){document.addEventListener("mousemove",t=>{this.mousePos={x:t.clientX,y:t.clientY},this.updateDraggedItem(),this.updateTooltip()})}createTooltip(){this.tooltip=document.createElement("div"),this.tooltip.style.cssText=`
      position: fixed;
      background: rgba(0, 0, 0, 0.9);
      color: white;
      padding: 8px 12px;
      border-radius: 6px;
      font-size: 14px;
      pointer-events: none;
      z-index: 3000;
      display: none;
      border: 1px solid #555;
      box-shadow: 0 2px 8px rgba(0, 0, 0, 0.5);
      font-family: Arial, sans-serif;
    `,document.body.appendChild(this.tooltip)}updateTooltip(){if(this.tooltip)if(this.hoveredSlot&&!this.inventorySystem.getDraggedItem()){const t=this.hoveredSlot.isHotbar?this.inventorySystem.getHotbar()[this.hoveredSlot.col]:this.inventorySystem.getGrid()[this.hoveredSlot.row][this.hoveredSlot.col];if(t.item){this.tooltip.style.display="block",this.tooltip.innerHTML=`
          <div style="font-weight: bold; margin-bottom: 4px;">${t.item.name}</div>
          ${t.item.quantity>1?`<div style="color: #AAA; font-size: 12px;">Quantity: ${t.item.quantity}</div>`:""}
          ${t.item.type==="tool"?'<div style="color: #FFD700; font-size: 12px;">Tool</div>':""}
          ${t.item.type==="seed"?'<div style="color: #90EE90; font-size: 12px;">Seed - Can be planted</div>':""}
          ${t.item.type==="crop"?'<div style="color: #FFA500; font-size: 12px;">Crop - Can be sold</div>':""}
          ${t.item.type==="resource"?'<div style="color: #8B7355; font-size: 12px;">Resource</div>':""}
        `;const i=this.tooltip.getBoundingClientRect();let s=this.mousePos.x+15,e=this.mousePos.y+15;s+i.width>window.innerWidth&&(s=this.mousePos.x-i.width-15),e+i.height>window.innerHeight&&(e=this.mousePos.y-i.height-15),this.tooltip.style.left=`${s}px`,this.tooltip.style.top=`${e}px`}else this.tooltip.style.display="none"}else this.tooltip.style.display="none"}createHotbar(){this.hotbarContainer=document.createElement("div"),this.hotbarContainer.id="hotbar",this.hotbarContainer.style.cssText=`
      position: fixed;
      bottom: 20px;
      left: 50%;
      transform: translateX(-50%);
      display: flex;
      gap: 4px;
      background: rgba(0, 0, 0, 0.7);
      padding: 8px;
      border-radius: 8px;
      border: 2px solid #444;
      z-index: 100;
    `,document.body.appendChild(this.hotbarContainer),this.updateHotbar()}updateHotbar(){if(!this.hotbarContainer)return;this.hotbarContainer.innerHTML="";const t=this.inventorySystem.getHotbar(),i=this.inventorySystem.getSelectedHotbarIndex();t.forEach((s,e)=>{const o=this.createSlotElement(s,!0,e);e===i&&(o.style.border="2px solid #FFD700",o.style.boxShadow="0 0 10px #FFD700");const r=document.createElement("div");r.style.cssText=`
        position: absolute;
        top: 2px;
        left: 2px;
        font-size: 10px;
        color: #AAA;
        text-shadow: 1px 1px 2px black;
      `,r.textContent=(e+1).toString(),o.appendChild(r),this.hotbarContainer.appendChild(o)})}showInventory(){if(this.container)return;this.container=document.createElement("div"),this.container.id="inventory",this.container.style.cssText=`
      position: fixed;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
      background: rgba(0, 0, 0, 0.9);
      border: 3px solid #444;
      border-radius: 10px;
      padding: 20px;
      z-index: 1000;
      box-shadow: 0 0 20px rgba(0, 0, 0, 0.8);
      width: 360px;
      display: flex;
      flex-direction: column;
      min-height: 480px;
    `,this.setupHotbarAssignment();const t=document.createElement("h2");t.textContent="Inventory",t.style.cssText=`
      color: white;
      text-align: center;
      margin: 0 0 20px 0;
      font-size: 24px;
    `,this.container.appendChild(t);const i=document.createElement("div");i.style.cssText=`
      display: grid;
      grid-template-columns: repeat(6, 50px);
      gap: 4px;
      margin-bottom: 30px;
      width: fit-content;
      justify-self: center;
      align-self: center;
    `;const s=this.inventorySystem.getGrid();for(let r=0;r<6;r++)for(let n=0;n<6;n++){const h=s[r][n],c=this.createSlotElement(h,!1,n,r);i.appendChild(c)}this.container.appendChild(i);const e=document.createElement("p");e.textContent="Press E to close",e.style.cssText=`
      color: #AAA;
      text-align: center;
      margin: 10px 0 0 0;
      font-size: 14px;
    `,this.container.appendChild(e),document.body.appendChild(this.container);const o=document.createElement("div");o.id="dragged-item",o.style.cssText=`
      position: fixed;
      pointer-events: none;
      z-index: 2000;
      display: none;
    `,document.body.appendChild(o)}hideInventory(){this.container&&(this.container.remove(),this.container=null);const t=document.getElementById("dragged-item");t&&t.remove(),this.removeHotbarAssignment()}createSlotElement(t,i,s,e=-1){const o=document.createElement("div");return o.style.cssText=`
      width: 50px;
      height: 50px;
      background: rgba(50, 50, 50, 0.8);
      border: 2px solid #666;
      border-radius: 4px;
      position: relative;
      cursor: pointer;
      display: flex;
      align-items: center;
      justify-content: center;
      font-size: 24px;
      user-select: none;
    `,t.item&&(o.innerHTML=`
        <span style="font-size: 28px;">${t.item.icon}</span>
        ${t.item.quantity>1?`<span style="
          position: absolute;
          bottom: 2px;
          right: 2px;
          font-size: 12px;
          color: white;
          text-shadow: 1px 1px 2px black;
          background: rgba(0, 0, 0, 0.5);
          padding: 0 3px;
          border-radius: 3px;
        ">${t.item.quantity}</span>`:""}
      `),o.addEventListener("mousedown",r=>{if(r.preventDefault(),i&&!this.inventorySystem.isInventoryOpen()){this.inventorySystem.selectHotbarSlot(s),this.updateHotbar();return}if(r.shiftKey&&t.item&&this.inventorySystem.isInventoryOpen()){this.inventorySystem.quickTransfer(e,s,i),this.updateDisplay();return}t.item&&(this.inventorySystem.startDragging(e,s,i),this.updateDisplay())}),o.addEventListener("mouseup",r=>{r.preventDefault(),this.inventorySystem.isInventoryOpen()&&this.inventorySystem.getDraggedItem()&&(this.inventorySystem.dropItem(e,s,i),this.updateDisplay())}),o.addEventListener("mouseenter",()=>{o.style.background="rgba(80, 80, 80, 0.8)",this.hoveredSlot={row:e,col:s,isHotbar:i}}),o.addEventListener("mouseleave",()=>{o.style.background="rgba(50, 50, 50, 0.8)",this.hoveredSlot=null}),o}updateDraggedItem(){const t=document.getElementById("dragged-item");if(!t)return;const i=this.inventorySystem.getDraggedItem();i?(t.style.display="block",t.style.left=`${this.mousePos.x-25}px`,t.style.top=`${this.mousePos.y-25}px`,t.innerHTML=`
        <div style="
          width: 50px;
          height: 50px;
          background: rgba(50, 50, 50, 0.9);
          border: 2px solid #888;
          border-radius: 4px;
          display: flex;
          align-items: center;
          justify-content: center;
          font-size: 28px;
          opacity: 0.8;
        ">
          ${i.icon}
          ${i.quantity>1?`<span style="
            position: absolute;
            bottom: 2px;
            right: 2px;
            font-size: 12px;
            color: white;
            text-shadow: 1px 1px 2px black;
          ">${i.quantity}</span>`:""}
        </div>
      `):t.style.display="none"}updateDisplay(){this.updateHotbar(),this.container&&this.refreshInventoryGrid(),this.updateDraggedItem()}refreshInventoryGrid(){if(!this.container)return;const t=this.container.querySelector('div[style*="grid-template-columns"]');if(!t)return;t.innerHTML="";const i=this.inventorySystem.getGrid();for(let s=0;s<6;s++)for(let e=0;e<6;e++){const o=i[s][e],r=this.createSlotElement(o,!1,e,s);t.appendChild(r)}}cleanup(){this.container&&this.container.remove(),this.hotbarContainer&&this.hotbarContainer.remove(),this.tooltip&&this.tooltip.remove(),this.removeHotbarAssignment()}isKeyHandled(t){return this.handledKeys.has(t)}setupHotbarAssignment(){this.keyHandler=t=>{const i=t.key;if(i>="1"&&i<="6"&&this.hoveredSlot&&this.inventorySystem.isInventoryOpen()){t.preventDefault(),t.stopPropagation(),t.stopImmediatePropagation(),this.handledKeys.add(t.code);const s=parseInt(i)-1;this.quickAssignToHotbar(s)}},this.keyupHandler=t=>{this.handledKeys.delete(t.code)},document.addEventListener("keydown",this.keyHandler,!0),document.addEventListener("keyup",this.keyupHandler,!0)}removeHotbarAssignment(){this.keyHandler&&(document.removeEventListener("keydown",this.keyHandler,!0),this.keyHandler=null),this.keyupHandler&&(document.removeEventListener("keyup",this.keyupHandler,!0),this.keyupHandler=null),this.handledKeys.clear()}quickAssignToHotbar(t){if(!this.hoveredSlot)return;const i=this.hoveredSlot.isHotbar?this.inventorySystem.getHotbar()[this.hoveredSlot.col]:this.inventorySystem.getGrid()[this.hoveredSlot.row][this.hoveredSlot.col],s=this.inventorySystem.getHotbar()[t];if(i.item){const e=s.item;if(s.item=i.item,i.item=e,this.updateHotbar(),this.container&&!this.hoveredSlot.isHotbar){const o=this.container.querySelector('div[style*="grid-template-columns"]');if(o){const r=this.hoveredSlot.row*6+this.hoveredSlot.col,n=o.children[r];if(n){const h=this.createSlotElement(i,!1,this.hoveredSlot.col,this.hoveredSlot.row);o.replaceChild(h,n)}}}}}}class it{constructor(t,i){a(this,"position");a(this,"actions");a(this,"opacity",1);a(this,"targetOpacity",1);this.position=t,this.actions=i}show(){this.targetOpacity=1}hide(){this.targetOpacity=0}update(t){this.opacity<this.targetOpacity?this.opacity=Math.min(this.opacity+5*t,this.targetOpacity):this.opacity>this.targetOpacity&&(this.opacity=Math.max(this.opacity-5*t,this.targetOpacity))}isVisible(){return this.opacity>.01}}class st{constructor(){a(this,"interactables",new Map);a(this,"currentIndicator",null)}registerInteractable(t,i){this.interactables.set(t,i)}unregisterInteractable(t){this.interactables.delete(t)}update(t,i,s){let e=null,o=[];for(const[r,n]of this.interactables)if(n.canInteract(t,i)){const h=n.getAvailableActions();if(h.length>0){e=n,o=h;break}}e&&o.length>0?((!this.currentIndicator||this.currentIndicator.position.x!==e.position.x||this.currentIndicator.position.y!==e.position.y)&&(this.currentIndicator=new it(e.position,o)),this.currentIndicator.show()):this.currentIndicator&&this.currentIndicator.hide(),this.currentIndicator&&(this.currentIndicator.update(s),!this.currentIndicator.isVisible()&&this.currentIndicator.targetOpacity===0&&(this.currentIndicator=null))}getCurrentIndicator(){return this.currentIndicator}handleKeyPress(t){if(!this.currentIndicator||!this.currentIndicator.isVisible())return!1;for(const[i,s]of this.interactables)if(s.canInteract(this.currentIndicator.position,"")){const o=s.getAvailableActions().find(r=>r.keyCode===t);if(o)return s.performAction(o.id),!0}return!1}}class L{constructor(t,i,s,e){a(this,"npc");a(this,"shop");a(this,"blacksmith");a(this,"game");a(this,"onInteract");this.npc=t,this.game=i,this.shop=s,this.blacksmith=e}get position(){return this.npc.position}getAvailableActions(){const t=[];return t.push({id:"talk",name:"Talk",key:"E",keyCode:P.E,icon:"💬"}),this.npc.type==="shopkeeper"&&this.shop&&t.push({id:"shop",name:"Shop",key:"F",keyCode:P.F,icon:"🛍️"}),this.npc.type==="blacksmith"&&this.blacksmith&&t.push({id:"blacksmith",name:"Forge",key:"F",keyCode:P.F,icon:"🔨"}),t}canInteract(t,i){const e=this.npc.position.x-t.x,o=this.npc.position.y-t.y;if(e*e+o*o>48*48)return!1;const n=Math.atan2(o,e),h=this.getFacingAngle(i);return Math.abs(this.normalizeAngle(n-h))<Math.PI/2}performAction(t){switch(t){case"talk":console.log(`${this.npc.name}: ${this.npc.dialogue[0]}`);break;case"shop":this.shop&&(this.shop.isShopOpen()?this.shop.close():this.shop.open());break;case"blacksmith":this.blacksmith&&(this.blacksmith.isBlacksmithOpen()?this.blacksmith.close():this.blacksmith.open());break}}getFacingAngle(t){switch(t){case"up":return-Math.PI/2;case"down":return Math.PI/2;case"left":return Math.PI;case"right":return 0;default:return 0}}normalizeAngle(t){for(;t>Math.PI;)t-=2*Math.PI;for(;t<-Math.PI;)t+=2*Math.PI;return t}}class ot{constructor(t){a(this,"renderer");a(this,"keyTextures",new Map);a(this,"whiteTexture");this.renderer=t,this.whiteTexture=this.generateWhiteTexture(),this.generateKeyTextures()}generateWhiteTexture(){const t=this.renderer.getGL(),i=document.createElement("canvas");i.width=1,i.height=1;const s=i.getContext("2d");s.fillStyle="white",s.fillRect(0,0,1,1);const e=s.getImageData(0,0,1,1);return x.fromImageData(t,e)}generateKeyTextures(){["E","F","C"].forEach(i=>{this.keyTextures.set(i,this.generateKeyBadgeTexture(i))})}generateKeyBadgeTexture(t){const i=this.renderer.getGL(),s=20,e=document.createElement("canvas");e.width=s,e.height=s;const o=e.getContext("2d");o.clearRect(0,0,s,s),o.fillStyle="rgba(0, 0, 0, 0.7)",o.beginPath(),o.arc(s/2,s/2,s/2-1,0,Math.PI*2),o.fill(),o.strokeStyle="rgba(255, 255, 255, 0.9)",o.lineWidth=1.5,o.beginPath(),o.arc(s/2,s/2,s/2-2,0,Math.PI*2),o.stroke(),o.fillStyle="#ffffff",o.font="bold 12px Arial",o.textAlign="center",o.textBaseline="middle",o.fillText(t,s/2,s/2);const r=o.getImageData(0,0,s,s);return x.fromImageData(i,r)}renderTileActions(t,i){i.forEach(s=>{const e=this.keyTextures.get(s.key==="Click"?"C":s.key);e&&(t.flush(),e.bind(0),t.drawTexturedQuad(s.position.x+10,s.position.y+-10,20,20))})}dispose(){for(const[t,i]of this.keyTextures)i.dispose();this.keyTextures.clear(),this.whiteTexture.dispose()}}class rt{constructor(){a(this,"items",[]);a(this,"isOpen",!1);this.initializeBlacksmithItems()}initializeBlacksmithItems(){this.items=[{id:"wood",name:"Wood",buyPrice:0,sellPrice:5,quantity:0},{id:"iron_ingot",name:"Iron Ingot",buyPrice:25,sellPrice:0,quantity:-1},{id:"gold_ingot",name:"Gold Ingot",buyPrice:100,sellPrice:0,quantity:-1}]}open(){this.isOpen=!0}close(){this.isOpen=!1}isBlacksmithOpen(){return this.isOpen}getItems(){return this.items}canBuyItem(t,i){const s=this.items.find(e=>e.id===t);return!s||t==="wood"?!1:i>=s.buyPrice}buyItem(t){const i=this.items.find(s=>s.id===t);return!i||t==="wood"?0:i.buyPrice}sellItem(t,i=1){const s=this.items.find(e=>e.id===t);return s?s.sellPrice*i:0}}class nt{constructor(t){a(this,"canvas");a(this,"renderer");a(this,"spriteBatch");a(this,"camera");a(this,"input");a(this,"tileMap");a(this,"player");a(this,"itemDropManager");a(this,"shopkeeper");a(this,"shop");a(this,"blacksmithNPC");a(this,"blacksmith");a(this,"textures",new Map);a(this,"whiteTexture");a(this,"lastTime",0);a(this,"frameCount",0);a(this,"fpsTime",0);a(this,"debugLogTime",0);a(this,"shopToggled",!1);a(this,"mouseWorldPos",new v(0,0));a(this,"hoveredTile",null);a(this,"audioSystem");a(this,"lastFootstepTime",0);a(this,"footstepInterval",.3);a(this,"inventorySystem");a(this,"inventoryUI");a(this,"actionSystem");a(this,"tileActionRenderer");a(this,"currentTileActions",[]);a(this,"gameLoop",()=>{const t=performance.now(),i=(t-this.lastTime)/1e3;this.lastTime=t,this.update(i),this.render(),this.updateFPS(t),requestAnimationFrame(this.gameLoop)});this.canvas=t,this.setupCanvas(),this.renderer=new W(t),this.spriteBatch=new $(this.renderer.getGL()),this.camera=new X(t.width,t.height),this.input=new K(t),this.tileMap=new Q(50,50,32);const i=this.findSafeSpawnPosition();this.player=new V(i.x,i.y),this.itemDropManager=new j;const s=this.findSafePositionNear(i.x,i.y,200);this.shopkeeper=new U({id:"shopkeeper",name:"Emma",position:s,type:"shopkeeper",dialogue:["Welcome to Emma's Seeds & Produce!","I buy fresh carrots and sell quality seeds.","Press F to open the shop!"]}),this.shop=new Z;const e=this.findSafePositionNear(i.x+300,i.y,200);this.blacksmithNPC=new U({id:"blacksmith",name:"Bjorn",position:e,type:"blacksmith",dialogue:["Welcome to Bjorn's Forge!","I buy wood and sell fine metal ingots.","Press F to trade!"]}),this.blacksmith=new rt,this.audioSystem=new J,this.inventorySystem=new tt,this.inventoryUI=new et(this.inventorySystem),this.actionSystem=new st,this.tileActionRenderer=new ot(this.renderer);const o=new L(this.shopkeeper,this,this.shop);this.actionSystem.registerInteractable("shopkeeper",o);const r=new L(this.blacksmithNPC,this,void 0,this.blacksmith);this.actionSystem.registerInteractable("blacksmith",r),this.setupEventListeners(),this.init(),window.gameInstance=this}findSafeSpawnPosition(){const t=this.tileMap.getTileSize(),i=this.tileMap.getWidth(),s=this.tileMap.getHeight(),e=Math.floor(i/2),o=Math.floor(s/2);for(let r=0;r<Math.max(i,s)/2;r++)for(let n=-r;n<=r;n++)for(let h=-r;h<=r;h++){if(Math.abs(n)!==r&&Math.abs(h)!==r)continue;const c=e+n,u=o+h;if(c>=0&&c<i&&u>=0&&u<s){const d=this.tileMap.getTileAt(c,u);if(d&&(d.type===S.Grass||d.type===S.Dirt)&&!d.solid)return new v(c*t+t/2,u*t+t/2)}}return console.warn("No safe spawn position found, using center"),new v(i*t/2,s*t/2)}findSafePositionNear(t,i,s){const e=this.tileMap.getTileSize(),o=Math.floor(t/e),r=Math.floor(i/e),n=Math.ceil(s/e);for(let h=1;h<=n;h++)for(let c=-h;c<=h;c++)for(let u=-h;u<=h;u++){if(Math.abs(c)!==h&&Math.abs(u)!==h)continue;const d=o+c,m=r+u;if(d>=0&&d<this.tileMap.getWidth()&&m>=0&&m<this.tileMap.getHeight()){const l=this.tileMap.getTileAt(d,m);if(l&&(l.type===S.Grass||l.type===S.Dirt)&&!l.solid)return new v(d*e+e/2,m*e+e/2)}}return console.warn("No safe position found near",t,i),new v(t,i)}handleShopBuy(){console.log("Shop buy button clicked!"),this.player.getMoney()>=10&&(this.player.spendMoney(10),this.inventorySystem.addItem({id:"carrot_seeds",name:"Carrot Seeds",icon:"🥕",quantity:5,stackable:!0,type:"seed",toolType:"seeds"}),this.inventoryUI.updateHotbar(),this.updateShopUI(),this.audioSystem.playSound("pickup",.4))}handleShopSell(){console.log("Shop sell button clicked!"),this.inventorySystem.getItemCount("carrot")>0&&(this.inventorySystem.removeItem("carrot",1),this.player.addMoney(15),this.inventoryUI.updateHotbar(),this.updateShopUI(),this.audioSystem.playSound("pickup",.5))}handleBlacksmithSellWood(){console.log("Blacksmith sell wood clicked!"),this.inventorySystem.getItemCount("wood")>0&&(this.inventorySystem.removeItem("wood",1),this.player.addMoney(5),this.inventoryUI.updateHotbar(),this.updateBlacksmithUI(),this.audioSystem.playSound("pickup",.4))}handleBlacksmithBuyIron(){console.log("Blacksmith buy iron clicked!"),this.player.getMoney()>=25&&(this.player.spendMoney(25),this.inventorySystem.addItem({id:"iron_ingot",name:"Iron Ingot",icon:"⚙️",quantity:1,stackable:!0,type:"material"}),this.inventoryUI.updateHotbar(),this.updateBlacksmithUI(),this.audioSystem.playSound("pickup",.5))}handleBlacksmithBuyGold(){console.log("Blacksmith buy gold clicked!"),this.player.getMoney()>=100&&(this.player.spendMoney(100),this.inventorySystem.addItem({id:"gold_ingot",name:"Gold Ingot",icon:"🟨",quantity:1,stackable:!0,type:"material"}),this.inventoryUI.updateHotbar(),this.updateBlacksmithUI(),this.audioSystem.playSound("pickup",.6))}async init(){await this.loadAssets(),this.start(),this.loadAndPlayMusic().catch(t=>{console.error("Failed to load music:",t)})}setupCanvas(){this.canvas.width=800,this.canvas.height=600}setupEventListeners(){window.addEventListener("resize",()=>{this.setupCanvas(),this.renderer.resize(this.canvas.width,this.canvas.height),this.camera.resize(this.canvas.width,this.canvas.height)});const t=document.getElementById("musicVolume"),i=document.getElementById("volumeValue");if(t&&i){t.addEventListener("input",e=>{const o=parseInt(e.target.value),r=o/100;this.audioSystem.setMusicVolume(r),i.textContent=`${o}%`});const s=parseInt(t.value)/100;this.audioSystem.setMusicVolume(s)}}async loadAndPlayMusic(){try{await this.audioSystem.loadMusic("/sound/Harvest Glow.mp3");const t=()=>{this.audioSystem.playMusic(!0),window.removeEventListener("click",t),window.removeEventListener("keydown",t)};window.addEventListener("click",t),window.addEventListener("keydown",t),console.log("Music load initiated, waiting for user interaction...")}catch(t){console.error("Failed to load music:",t)}}async loadAssets(){const t=this.renderer.getGL();this.whiteTexture=x.createSolid(t,1,1,255,255,255);try{console.log("Loading grass texture from image...");const s=await x.load(t,"/images/grass.png");this.textures.set("grass",s),console.log("Grass texture loaded successfully")}catch(s){console.error("Failed to load grass.png, using procedural texture:",s),this.textures.set("grass",x.generateGrassTile(t))}try{console.log("Loading dirt texture from image...");const s=await x.load(t,"/images/dirt-1.png");this.textures.set("dirt",s),console.log("Dirt texture loaded successfully")}catch(s){console.error("Failed to load dirt-1.png, using procedural texture:",s),this.textures.set("dirt",x.generateDirtTile(t))}try{console.log("Loading stone texture from image...");const s=await x.load(t,"/images/stone-1.png");this.textures.set("stone",s),console.log("Stone texture loaded successfully")}catch(s){console.error("Failed to load stone-1.png, using procedural texture:",s),this.textures.set("stone",x.generateStoneTile(t))}try{console.log("Loading water texture from image...");const s=await x.load(t,"/images/water-1.png");this.textures.set("water",s),console.log("Water texture loaded successfully")}catch(s){console.error("Failed to load water-1.png, using procedural texture:",s),this.textures.set("water",x.generateWaterTile(t))}this.textures.set("tilledDirt",this.generateTilledDirtTexture()),this.textures.set("wateredDirt",this.generateWateredDirtTexture()),this.textures.set("plant_0.2",this.generatePlantTexture(.2)),this.textures.set("plant_0.5",this.generatePlantTexture(.5)),this.textures.set("plant_1.0",this.generatePlantTexture(1)),this.textures.set("item_carrot",this.generateCarrotItemTexture()),this.textures.set("item_seeds",this.generateSeedItemTexture()),this.textures.set("item_tree_seeds",this.generateTreeSeedItemTexture());try{console.log("Loading wood texture from image...");const s=await x.load(t,"/images/log-1.png");this.textures.set("item_wood",s),console.log("Wood texture loaded successfully")}catch(s){console.error("Failed to load log-1.png, using procedural texture:",s),this.textures.set("item_wood",this.generateWoodItemTexture())}const i=[];for(let s=1;s<=4;s++)i.push(x.load(t,`/images/tree-${s}.png`).then(e=>{this.textures.set(`tree-${s}`,e),console.log(`Tree texture ${s} loaded successfully`)}).catch(e=>{console.error(`Failed to load tree-${s}.png:`,e)}));await Promise.all(i),this.textures.has("tree-1")||(console.log("No tree textures loaded, using procedural texture"),this.textures.set("tree",this.generateTreeTexture()));try{console.log("Loading character sprite sheet...");const s=await x.load(t,"/images/character.png");this.textures.set("character",s),console.log("Character sprite sheet loaded successfully")}catch(s){console.error("Failed to load character.png:",s)}try{console.log("Loading shopkeeper texture from image...");const s=await x.load(t,"/images/shopkeeper-1.png");this.textures.set("shopkeeper",s),console.log("Shopkeeper texture loaded successfully")}catch(s){console.error("Failed to load shopkeeper-1.png, using procedural texture:",s);const e=this.generateShopkeeperTexture();this.textures.set("shopkeeper",e)}try{console.log("Loading blacksmith texture from image...");const s=await x.load(t,"/images/blacksmithguy-1.png");this.textures.set("blacksmith",s),console.log("Blacksmith texture loaded successfully")}catch(s){console.error("Failed to load blacksmithguy-1.png, using procedural texture:",s);const e=this.generateBlacksmithTexture();this.textures.set("blacksmith",e)}try{console.log("Loading shop texture from image...");const s=await x.load(t,"/images/shop-1.png");this.textures.set("shop_stall",s),console.log("Shop texture loaded successfully")}catch(s){console.error("Failed to load shop-1.png, using procedural texture:",s),this.textures.set("shop_stall",this.generateShopStallTexture())}try{console.log("Loading blacksmith forge texture from image...");const s=await x.load(t,"/images/blacksmith-1.png");this.textures.set("forge",s),console.log("Blacksmith forge texture loaded successfully")}catch(s){console.error("Failed to load blacksmith-1.png, using procedural texture:",s),this.textures.set("forge",this.generateForgeTexture())}}generatePlayerTexture(t="down",i,s=0){const e=this.renderer.getGL(),o=32,r=document.createElement("canvas");r.width=o,r.height=o;const n=r.getContext("2d");n.save();let h=8,c=8,u=16,d=8;switch(n.fillStyle="#f39c12",n.fillRect(h,c,16,20),n.fillStyle="#fdbcb4",n.beginPath(),n.arc(u,d,6,0,Math.PI*2),n.fill(),n.fillStyle="#000",t){case"down":n.fillRect(13,8,2,2),n.fillRect(17,8,2,2);break;case"up":break;case"left":n.fillRect(12,6,2,2);break;case"right":n.fillRect(18,6,2,2);break}if(i){const l=Math.sin(s*Math.PI)*15;switch(i){case w.Hoe:n.strokeStyle="#8B4513",n.lineWidth=3,n.beginPath(),t==="right"?(n.moveTo(24,16),n.lineTo(28,16-l)):t==="left"?(n.moveTo(8,16),n.lineTo(4,16-l)):(n.moveTo(20,20),n.lineTo(24,20-l)),n.stroke();break;case w.WateringCan:n.fillStyle="#4169E1";const f=t==="right"?22:t==="left"?6:20,g=18-l*.5;n.fillRect(f,g,6,4);break;case w.Seeds:n.fillStyle="#8B4513";const b=t==="right"?24:t==="left"?4:12;n.beginPath(),n.arc(b,20,2,0,Math.PI*2),n.fill();break;case w.Scythe:n.strokeStyle="#C0C0C0",n.lineWidth=2,n.beginPath(),t==="right"?n.arc(24,16,6,-Math.PI/4-l/30,Math.PI/4-l/30):t==="left"?n.arc(8,16,6,3*Math.PI/4+l/30,5*Math.PI/4+l/30):(n.moveTo(20,20),n.lineTo(26,20-l)),n.stroke();break;case w.Axe:n.strokeStyle="#8B4513",n.lineWidth=3,n.beginPath(),t==="right"?(n.moveTo(22,16),n.lineTo(28,16-l)):t==="left"?(n.moveTo(10,16),n.lineTo(4,16-l)):(n.moveTo(20,20),n.lineTo(24,20-l)),n.stroke(),n.fillStyle="#696969",t==="right"?(n.beginPath(),n.moveTo(28,16-l),n.lineTo(32,14-l),n.lineTo(32,18-l),n.closePath(),n.fill()):t==="left"?(n.beginPath(),n.moveTo(4,16-l),n.lineTo(0,14-l),n.lineTo(0,18-l),n.closePath(),n.fill()):(n.beginPath(),n.moveTo(24,20-l),n.lineTo(22,18-l),n.lineTo(26,18-l),n.closePath(),n.fill());break}}n.restore();const m=n.getImageData(0,0,o,o);return x.fromImageData(e,m)}generateTilledDirtTexture(){const t=this.renderer.getGL(),i=32,s=document.createElement("canvas");s.width=i,s.height=i;const e=s.getContext("2d");e.fillStyle="#654321",e.fillRect(0,0,i,i),e.strokeStyle="#4a3018",e.lineWidth=2;for(let r=0;r<4;r++){const n=4+r*8;e.beginPath(),e.moveTo(2,n),e.lineTo(30,n),e.stroke()}const o=e.getImageData(0,0,i,i);return x.fromImageData(t,o)}generatePlantTexture(t=1){const i=this.renderer.getGL(),s=32,e=document.createElement("canvas");e.width=s,e.height=s;const o=e.getContext("2d");t<.3?(o.strokeStyle="#2ecc71",o.lineWidth=2,o.beginPath(),o.moveTo(16,24),o.lineTo(16,20),o.stroke(),o.fillStyle="#27ae60",o.beginPath(),o.arc(14,20,2,0,Math.PI*2),o.fill(),o.beginPath(),o.arc(18,20,2,0,Math.PI*2),o.fill()):t<.7?(o.strokeStyle="#2ecc71",o.lineWidth=2.5,o.beginPath(),o.moveTo(16,24),o.lineTo(16,16),o.stroke(),o.fillStyle="#27ae60",o.beginPath(),o.ellipse(12,16,4,6,-.3,0,Math.PI*2),o.fill(),o.beginPath(),o.ellipse(20,16,4,6,.3,0,Math.PI*2),o.fill()):(o.strokeStyle="#2ecc71",o.lineWidth=3,o.beginPath(),o.moveTo(16,24),o.lineTo(16,8),o.stroke(),o.fillStyle="#27ae60",o.beginPath(),o.ellipse(11,8,5,10,-.3,0,Math.PI*2),o.fill(),o.beginPath(),o.ellipse(21,8,5,10,.3,0,Math.PI*2),o.fill(),o.fillStyle="#ff6b35",o.beginPath(),o.ellipse(16,20,3,5,0,0,Math.PI*2),o.fill());const r=o.getImageData(0,0,s,s);return x.fromImageData(i,r)}generateWateredDirtTexture(){const t=this.renderer.getGL(),i=32,s=document.createElement("canvas");s.width=i,s.height=i;const e=s.getContext("2d");e.fillStyle="#3d2817",e.fillRect(0,0,i,i),e.strokeStyle="#2a1810",e.lineWidth=2;for(let r=0;r<4;r++){const n=4+r*8;e.beginPath(),e.moveTo(2,n),e.lineTo(30,n),e.stroke()}e.fillStyle="rgba(100, 150, 255, 0.2)",e.fillRect(0,0,i,i);const o=e.getImageData(0,0,i,i);return x.fromImageData(t,o)}generateCarrotItemTexture(){const t=this.renderer.getGL(),i=16,s=document.createElement("canvas");s.width=i,s.height=i;const e=s.getContext("2d");e.fillStyle="#ff6b35",e.beginPath(),e.moveTo(8,4),e.lineTo(11,12),e.lineTo(8,14),e.lineTo(5,12),e.closePath(),e.fill(),e.fillStyle="#27ae60",e.fillRect(6,2,1,3),e.fillRect(8,2,1,3),e.fillRect(10,2,1,3);const o=e.getImageData(0,0,i,i);return x.fromImageData(t,o)}generateSeedItemTexture(){const t=this.renderer.getGL(),i=16,s=document.createElement("canvas");s.width=i,s.height=i;const e=s.getContext("2d");e.fillStyle="#8b6914",e.fillRect(4,6,8,8),e.fillStyle="#5d460f",e.fillRect(6,8,2,2),e.fillRect(8,10,2,2),e.fillRect(7,11,2,2);const o=e.getImageData(0,0,i,i);return x.fromImageData(t,o)}generateTreeSeedItemTexture(){const t=this.renderer.getGL(),i=16,s=document.createElement("canvas");s.width=i,s.height=i;const e=s.getContext("2d");e.fillStyle="#D2691E",e.beginPath(),e.arc(8,10,5,0,Math.PI*2),e.fill(),e.fillStyle="#8B4513",e.fillRect(3,4,10,5),e.strokeStyle="#654321",e.lineWidth=1,e.beginPath(),e.moveTo(4,6),e.lineTo(12,6),e.stroke(),e.beginPath(),e.moveTo(4,8),e.lineTo(12,8),e.stroke(),e.fillStyle="rgba(255, 255, 255, 0.3)",e.beginPath(),e.arc(6,9,2,0,Math.PI*2),e.fill();const o=e.getImageData(0,0,i,i);return x.fromImageData(t,o)}generateTreeTexture(){const t=this.renderer.getGL(),i=48,s=document.createElement("canvas");s.width=i,s.height=i;const e=s.getContext("2d");e.clearRect(0,0,i,i),e.fillStyle="#654321",e.fillRect(18,30,12,18),e.strokeStyle="#4a3018",e.lineWidth=1.5,e.beginPath(),e.moveTo(21,30),e.lineTo(21,48),e.moveTo(27,30),e.lineTo(27,48),e.stroke(),e.fillStyle="#228b22",e.beginPath(),e.arc(24,18,15,0,Math.PI*2),e.fill(),e.fillStyle="#32cd32",e.beginPath(),e.arc(21,15,6,0,Math.PI*2),e.fill(),e.beginPath(),e.arc(28,16,4.5,0,Math.PI*2),e.fill(),e.fillStyle="#1f5f1f",e.beginPath(),e.arc(24,22,10,0,Math.PI),e.fill();const o=e.getImageData(0,0,i,i);return x.fromImageData(t,o)}generateWoodItemTexture(){const t=this.renderer.getGL(),i=16,s=document.createElement("canvas");s.width=i,s.height=i;const e=s.getContext("2d");e.fillStyle="#8b4513",e.fillRect(3,5,10,6),e.strokeStyle="#654321",e.lineWidth=1,e.beginPath(),e.moveTo(4,7),e.lineTo(12,7),e.moveTo(4,9),e.lineTo(12,9),e.stroke(),e.fillStyle="#654321",e.beginPath(),e.arc(3,8,2,0,Math.PI*2),e.fill(),e.beginPath(),e.arc(13,8,2,0,Math.PI*2),e.fill();const o=e.getImageData(0,0,i,i);return x.fromImageData(t,o)}generateShopkeeperTexture(){const t=this.renderer.getGL(),i=32,s=document.createElement("canvas");s.width=i,s.height=i;const e=s.getContext("2d");e.fillStyle="#8b4789",e.fillRect(8,12,16,16),e.fillStyle="#fdbcb4",e.beginPath(),e.arc(16,10,6,0,Math.PI*2),e.fill(),e.fillStyle="#f4e04d",e.beginPath(),e.arc(16,7,7,Math.PI,0),e.fill(),e.fillRect(9,7,2,8),e.fillRect(21,7,2,8),e.fillStyle="#4169E1",e.fillRect(13,9,2,2),e.fillRect(17,9,2,2),e.strokeStyle="#000",e.lineWidth=1,e.beginPath(),e.arc(16,11,2,0,Math.PI),e.stroke();const o=e.getImageData(0,0,i,i);return x.fromImageData(t,o)}generateBlacksmithTexture(){const t=this.renderer.getGL(),i=32,s=document.createElement("canvas");s.width=i,s.height=i;const e=s.getContext("2d");e.fillStyle="#654321",e.fillRect(8,12,16,16),e.fillStyle="#d2691e",e.fillRect(5,14,3,10),e.fillRect(24,14,3,10),e.fillStyle="#daa520",e.beginPath(),e.arc(16,10,6,0,Math.PI*2),e.fill(),e.fillStyle="#2f1f0f",e.beginPath(),e.arc(16,7,7,Math.PI,0),e.fill(),e.fillStyle="#2f1f0f",e.fillRect(12,12,8,4),e.fillStyle="#000",e.fillRect(13,9,2,2),e.fillRect(17,9,2,2),e.fillStyle="#696969",e.fillRect(26,16,2,6),e.fillRect(25,15,4,2);const o=e.getImageData(0,0,i,i);return x.fromImageData(t,o)}generateShopkeeperPortrait(){const i=document.createElement("canvas");i.width=256,i.height=256;const s=i.getContext("2d");s.fillStyle="#f5e6d3",s.fillRect(0,0,256,256),s.fillStyle="#f4e04d",s.fillRect(60,40,136,180),s.fillStyle="#fdbcb4",s.fillRect(108,140,40,40),s.fillStyle="#6b3568",s.fillRect(96,170,64,20),s.fillStyle="#fdbcb4",s.fillRect(88,60,80,90),s.fillStyle="#f4e04d",s.fillRect(88,40,80,30),s.fillRect(68,60,20,60),s.fillRect(168,60,20,60),s.fillStyle="#e6d541";for(let e=0;e<5;e++)s.fillRect(90+e*15,42,10,26);s.fillStyle="#ffffff",s.fillRect(100,85,20,15),s.fillRect(136,85,20,15),s.fillStyle="#4169E1",s.fillRect(105,88,12,12),s.fillRect(141,88,12,12),s.fillStyle="#000000",s.fillRect(108,91,6,6),s.fillRect(144,91,6,6),s.fillStyle="#ffffff",s.fillRect(110,92,2,2),s.fillRect(146,92,2,2),s.fillStyle="#d4c339",s.fillRect(98,78,24,3),s.fillRect(134,78,24,3),s.fillStyle="#f4a09a",s.fillRect(124,105,8,12),s.fillStyle="#ff6b6b",s.fillRect(116,125,24,8),s.fillStyle="#000000",s.fillRect(114,125,2,2),s.fillRect(140,125,2,2),s.fillStyle="#8b4789",s.fillRect(80,180,96,76),s.fillStyle="#6b3568";for(let e=0;e<3;e++)s.fillRect(90+e*30,200,20,4),s.fillRect(90+e*30,220,20,4);return s.fillStyle="#fdbcb4",s.fillRect(60,180,20,60),s.fillRect(176,180,20,60),s.fillStyle="rgba(255, 182, 193, 0.3)",s.fillRect(88,108,16,12),s.fillRect(152,108,16,12),i.toDataURL()}generateShopStallTexture(){const t=this.renderer.getGL(),i=64,s=document.createElement("canvas");s.width=i,s.height=i;const e=s.getContext("2d");e.fillStyle="#8B4513",e.fillRect(0,32,64,32),e.fillStyle="#A0522D",e.fillRect(0,32,64,4),e.fillStyle="#DC143C",e.fillRect(0,0,64,20),e.fillStyle="#FFF";for(let r=0;r<4;r++)e.fillRect(r*16+4,0,8,20);e.fillStyle="#FFD700",e.fillRect(20,22,24,8),e.fillStyle="#000",e.font="6px Arial",e.fillText("SHOP",26,28);const o=e.getImageData(0,0,i,i);return x.fromImageData(t,o)}generateStumpTexture(){const t=this.renderer.getGL(),i=32,s=document.createElement("canvas");s.width=i,s.height=i;const e=s.getContext("2d");e.clearRect(0,0,i,i),e.fillStyle="#8B4513",e.beginPath(),e.arc(16,16,10,0,Math.PI*2),e.fill(),e.strokeStyle="#654321",e.lineWidth=1,e.beginPath(),e.arc(16,16,8,0,Math.PI*2),e.stroke(),e.beginPath(),e.arc(16,16,5,0,Math.PI*2),e.stroke(),e.fillStyle="#4a3018",e.beginPath(),e.arc(16,16,2,0,Math.PI*2),e.fill();const o=e.getImageData(0,0,i,i);return x.fromImageData(t,o)}generateForgeTexture(){const t=this.renderer.getGL(),i=64,s=document.createElement("canvas");s.width=i,s.height=i;const e=s.getContext("2d");e.fillStyle="#4a4a4a",e.fillRect(0,24,64,40),e.fillStyle="#ff4500",e.fillRect(20,32,24,20),e.fillStyle="#ff6347",e.fillRect(24,36,16,12),e.fillStyle="#ffd700",e.fillRect(28,40,8,6),e.fillStyle="#2f2f2f",e.fillRect(8,20,20,4),e.fillRect(12,16,12,4),e.fillStyle="#3a3a3a",e.fillRect(48,0,12,30),e.fillStyle="rgba(128, 128, 128, 0.6)",e.beginPath(),e.arc(54,0,8,0,Math.PI*2),e.fill(),e.beginPath(),e.arc(54,-5,6,0,Math.PI*2),e.fill();const o=e.getImageData(0,0,i,i);return x.fromImageData(t,o)}start(){console.log("Starting game with loaded textures..."),this.lastTime=performance.now(),requestAnimationFrame(this.gameLoop)}update(t){const i=this.input.getMousePosition();this.mouseWorldPos=this.camera.screenToWorld(i.x,i.y);const s=this.tileMap.getTileSize(),e=Math.floor(this.mouseWorldPos.x/s),o=Math.floor(this.mouseWorldPos.y/s),r=this.player.getPosition(),n=e*s+s/2-r.x,h=o*s+s/2-r.y,c=n*n+h*h,u=64;c<u*u&&!this.shop.isShopOpen()?this.hoveredTile=new v(e,o):this.hoveredTile=null;const d=this.input.getMovementVector(),m=this.input.isKeyDown(P.Shift);if(this.player.update(t,d,this.tileMap,m),d.length()>0&&!this.player.isAnimatingTool()){this.lastFootstepTime+=t;const l=m?this.footstepInterval*.6:this.footstepInterval;this.lastFootstepTime>=l&&(this.audioSystem.playFootstep(),this.lastFootstepTime=0)}else this.lastFootstepTime=this.footstepInterval;if(this.currentTileActions=[],this.shopkeeper.isNearPlayer(this.player.getPosition())){const l=this.shopkeeper.position;this.currentTileActions.push({position:new v(l.x,l.y-16),key:"E"}),this.currentTileActions.push({position:new v(l.x,l.y),key:"F"})}if(this.blacksmithNPC.isNearPlayer(this.player.getPosition())){const l=this.blacksmithNPC.position;this.currentTileActions.push({position:new v(l.x,l.y-16),key:"E"}),this.currentTileActions.push({position:new v(l.x,l.y),key:"F"})}if(this.hoveredTile){const l=this.tileMap.getTileAt(this.hoveredTile.x,this.hoveredTile.y),f=this.inventorySystem.getSelectedHotbarItem();if(l&&f&&f.toolType){const g=this.hoveredTile.x*32+16,b=this.hoveredTile.y*32+16;let y=!1;switch(l.type){case S.Grass:case S.Dirt:f.toolType==="hoe"&&(y=!0);break;case S.TilledDirt:(!l.planted&&f.toolType==="seeds"||f.toolType==="wateringCan")&&(y=!0);break;case S.PlantedDirt:(f.toolType==="wateringCan"&&!l.watered||f.toolType==="scythe"&&l.growth&&l.growth>=1)&&(y=!0);break;case S.Tree:f.toolType==="axe"&&(y=!0);break;case S.TreeStump:f.toolType==="axe"&&(y=!0);break}y&&this.currentTileActions.push({position:new v(g,b),key:"C"})}}if(this.input.isKeyPressed(P.Escape)){let l=!1;this.inventorySystem.isInventoryOpen()&&(this.inventorySystem.toggleInventory(),this.inventoryUI.hideInventory(),l=!0),this.shop.isShopOpen()&&(this.shop.close(),l=!0),this.blacksmith.isBlacksmithOpen()&&(this.blacksmith.close(),l=!0),l&&this.audioSystem.playSound("uiClose",.5)}if(this.input.isKeyPressed(P.E)&&(this.shopkeeper.isNearPlayer(this.player.getPosition())?console.log(`${this.shopkeeper.name}: ${this.shopkeeper.dialogue[0]}`):(this.inventorySystem.toggleInventory(),this.inventorySystem.isInventoryOpen()?this.inventoryUI.showInventory():this.inventoryUI.hideInventory())),this.input.isKeyPressed(P.F)&&(this.shopkeeper.isNearPlayer(this.player.getPosition())?this.shop.isShopOpen()?(this.shop.close(),this.audioSystem.playSound("uiClose",.5)):(this.shop.open(),this.audioSystem.playSound("uiOpen",.5)):this.blacksmithNPC.isNearPlayer(this.player.getPosition())&&(this.blacksmith.isBlacksmithOpen()?(this.blacksmith.close(),this.audioSystem.playSound("uiClose",.5)):(this.blacksmith.open(),this.audioSystem.playSound("uiOpen",.5)))),!this.inventorySystem.isInventoryOpen()&&this.input.isKeyPressed(P.Space)){const l=this.inventorySystem.getSelectedHotbarItem();if(l&&(l.type==="tool"||l.type==="seed")&&l.toolType&&(this.player.interact(this.tileMap,this.itemDropManager,this.audioSystem,l.toolType),l.type==="seed"&&(l.toolType==="seeds"||l.toolType==="treeSeeds"))){const f=this.player.getPosition(),g=this.player.getFacing();let b=f.x,y=f.y;const T=32;switch(g){case"up":y-=T;break;case"down":y+=T;break;case"left":b-=T;break;case"right":b+=T;break}const k=Math.floor(b/32),M=Math.floor(y/32),C=this.tileMap.getTileAt(k,M),D=C?.type===S.Grass,B=C?.type===S.TilledDirt&&!C.planted,E=this.tileMap.getTileAt(k,M);let R=!1;if(l.toolType==="seeds"?R=B&&E?.planted===!0:l.toolType==="treeSeeds"&&(R=D&&E?.type===S.TreeStump),R){if(l.quantity>1)l.quantity--;else{const F=this.inventorySystem.getHotbar(),H=this.inventorySystem.getSelectedHotbarIndex();F[H].item=null}this.inventoryUI.updateHotbar()}}}if(this.input.isMouseButtonPressed(0)&&this.hoveredTile&&!this.shop.isShopOpen()&&!this.inventorySystem.isInventoryOpen()){const l=this.inventorySystem.getSelectedHotbarItem();if(l&&(l.type==="tool"||l.type==="seed")&&l.toolType){const f=this.hoveredTile.x*s+s/2,g=this.hoveredTile.y*s+s/2;if(l.type==="seed"&&(l.toolType==="seeds"||l.toolType==="treeSeeds")){const b=Math.floor(f/32),y=Math.floor(g/32),T=this.tileMap.getTileAt(b,y),k=T?.type===S.Grass,M=T?.type===S.TilledDirt&&!T.planted;this.player.interactAt(f,g,this.tileMap,this.itemDropManager,this.audioSystem,l.toolType);const C=this.tileMap.getTileAt(b,y);let D=!1;if(l.toolType==="seeds"?D=M&&C?.planted===!0:l.toolType==="treeSeeds"&&(D=k&&C?.type===S.TreeStump),D){if(l.quantity>1)l.quantity--;else{const B=this.inventorySystem.getHotbar(),E=this.inventorySystem.getSelectedHotbarIndex();B[E].item=null}this.inventoryUI.updateHotbar()}}else this.player.interactAt(f,g,this.tileMap,this.itemDropManager,this.audioSystem,l.toolType)}}if(this.player.collectItems(this.itemDropManager,this.audioSystem,this.inventorySystem),this.shop.isShopOpen()&&!this.shopkeeper.isNearPlayer(this.player.getPosition())&&this.shop.close(),this.input.isKeyDown(P.F)||(this.shopToggled=!1),this.shop.isShopOpen())this.input.isKeyPressed("Digit1")&&this.player.spendMoney(10)&&(this.inventorySystem.addItem({id:"carrot_seeds",name:"Carrot Seeds",icon:"🥕",quantity:5,stackable:!0,type:"seed",toolType:"seeds"}),console.log("Bought 5 seeds for 10 coins!"),this.audioSystem.playSound("purchase",.6),this.inventoryUI.updateHotbar()),this.input.isKeyPressed("Digit2")&&this.inventorySystem.removeItem("carrot",1)&&(this.player.addMoney(15),console.log("Sold 1 carrot for 15 coins!"),this.audioSystem.playSound("coin",.5),this.inventoryUI.updateHotbar());else if(this.blacksmith.isBlacksmithOpen())this.input.isKeyPressed("Digit1")&&this.inventorySystem.getItemCount("wood")>0&&(this.inventorySystem.removeItem("wood",1),this.player.addMoney(5),console.log("Sold 1 wood for 5 coins!"),this.audioSystem.playSound("coin",.4),this.inventoryUI.updateHotbar(),this.updateBlacksmithUI()),this.input.isKeyPressed("Digit2")&&this.player.getMoney()>=25&&(this.player.spendMoney(25),this.inventorySystem.addItem({id:"iron_ingot",name:"Iron Ingot",icon:"⚙️",quantity:1,stackable:!0,type:"material"}),console.log("Bought 1 iron ingot for 25 coins!"),this.audioSystem.playSound("purchase",.5),this.inventoryUI.updateHotbar(),this.updateBlacksmithUI()),this.input.isKeyPressed("Digit3")&&this.player.getMoney()>=100&&(this.player.spendMoney(100),this.inventorySystem.addItem({id:"gold_ingot",name:"Gold Ingot",icon:"🟨",quantity:1,stackable:!0,type:"material"}),console.log("Bought 1 gold ingot for 100 coins!"),this.audioSystem.playSound("purchase",.6),this.inventoryUI.updateHotbar(),this.updateBlacksmithUI());else if(!this.inventorySystem.isInventoryOpen()){for(let l=1;l<=6;l++)if(this.input.isKeyPressed(`Digit${l}`)){this.inventorySystem.selectHotbarSlot(l-1),this.inventoryUI.updateHotbar();break}}this.tileMap.updateCrops(t),this.itemDropManager.update(t),this.shopkeeper.update(t),this.camera.followTarget(r.x,r.y,.1),this.updateUI(),this.input.update()}updateUI(){const t=this.player.getPosition(),i=document.getElementById("position");i&&(i.textContent=`${Math.floor(t.x)}, ${Math.floor(t.y)}`);const s=document.getElementById("inventorySlots");s&&(s.style.display="none");const e=document.getElementById("cropCount");if(e){let o=`Money: ${this.player.getMoney()} coins`;this.shopkeeper.isNearPlayer(this.player.getPosition())&&(o+=" | Press F to open shop"),o+=" | Press E for inventory",e.textContent=o}this.updateShopUI(),this.updateBlacksmithUI()}updateShopUI(){let t=document.getElementById("shopUI");if(this.shop.isShopOpen()){t||(t=document.createElement("div"),t.id="shopUI",t.style.cssText=`
          position: absolute;
          top: 50%;
          left: 50%;
          transform: translate(-50%, -50%);
          background: rgba(0, 0, 0, 0.95);
          color: white;
          padding: 30px;
          border-radius: 15px;
          border: 3px solid #FFD700;
          text-align: center;
          font-size: 16px;
          z-index: 1000;
          box-shadow: 0 0 50px rgba(0, 0, 0, 0.8);
        `,document.body.appendChild(t),t.addEventListener("click",e=>{const o=e.target;o.id==="buy-seeds-btn"?this.handleShopBuy():o.id==="sell-carrot-btn"&&this.handleShopSell()}));const i=this.inventorySystem.getItemCount("carrot");t.querySelector(".shop-content")||(t.innerHTML=`
          <div style="display: flex; gap: 30px; align-items: flex-start;">
            <div>
              <img src="/images/shopkeeper-1.png" style="width: 256px; height: 256px; image-rendering: pixelated; border: 3px solid #FFD700; border-radius: 8px; object-fit: cover;">
              <p style="margin-top: 10px; font-style: italic;">"Welcome to my shop!"</p>
            </div>
            <div class="shop-content" style="min-width: 250px;">
              <!-- Dynamic content goes here -->
            </div>
          </div>
        `);const s=t.querySelector(".shop-content");s&&(s.innerHTML=`
          <h2>Emma's Seeds & Produce</h2>
          <div style="margin: 20px 0;">
            <p>Your money: ${this.player.getMoney()} coins</p>
            <p>Your carrots: ${i}</p>
          </div>
          <div style="margin: 20px 0; text-align: left;">
            <button id="buy-seeds-btn" style="
              display: block;
              width: 100%;
              padding: 12px;
              margin: 8px 0;
              background: rgba(46, 204, 113, 0.8);
              color: white;
              border: 2px solid #27ae60;
              border-radius: 6px;
              font-size: 16px;
              cursor: pointer;
              transition: all 0.2s;
            " onmouseover="this.style.background='rgba(46, 204, 113, 1)'" onmouseout="this.style.background='rgba(46, 204, 113, 0.8)'">
              [1] Buy 5 seeds - 10 coins
            </button>
            <button id="sell-carrot-btn" style="
              display: block;
              width: 100%;
              padding: 12px;
              margin: 8px 0;
              background: rgba(231, 76, 60, 0.8);
              color: white;
              border: 2px solid #c0392b;
              border-radius: 6px;
              font-size: 16px;
              cursor: pointer;
              transition: all 0.2s;
            " onmouseover="this.style.background='rgba(231, 76, 60, 1)'" onmouseout="this.style.background='rgba(231, 76, 60, 0.8)'">
              [2] Sell 1 carrot - 15 coins
            </button>
          </div>
          <p style="margin-top: 20px; font-size: 14px;">Press F to close</p>
        `)}else t&&t.remove()}updateBlacksmithUI(){let t=document.getElementById("blacksmithUI");if(this.blacksmith.isBlacksmithOpen()){t||(t=document.createElement("div"),t.id="blacksmithUI",t.style.cssText=`
          position: absolute;
          top: 50%;
          left: 50%;
          transform: translate(-50%, -50%);
          background: rgba(20, 10, 0, 0.95);
          color: white;
          padding: 30px;
          border-radius: 15px;
          border: 3px solid #8B4513;
          text-align: center;
          font-size: 16px;
          z-index: 1000;
          box-shadow: 0 0 50px rgba(255, 100, 0, 0.3);
        `,document.body.appendChild(t),t.addEventListener("click",e=>{const o=e.target;o.id==="sell-wood-btn"?this.handleBlacksmithSellWood():o.id==="buy-iron-btn"?this.handleBlacksmithBuyIron():o.id==="buy-gold-btn"&&this.handleBlacksmithBuyGold()}));const i=this.inventorySystem.getItemCount("wood");t.querySelector(".blacksmith-content")||(t.innerHTML=`
          <div style="display: flex; gap: 30px; align-items: flex-start;">
            <div>
              <img src="/images/blacksmithguy-1.png" style="width: 256px; height: 256px; image-rendering: pixelated; border: 3px solid #8B4513; border-radius: 8px; object-fit: cover;">
              <p style="margin-top: 10px; font-style: italic;">"Need some fine metalwork?"</p>
            </div>
            <div class="blacksmith-content" style="min-width: 300px;">
              <!-- Dynamic content goes here -->
            </div>
          </div>
        `);const s=t.querySelector(".blacksmith-content");s&&(s.innerHTML=`
          <h2>Blacksmith's Forge</h2>
          <div style="margin: 20px 0;">
            <p>Your money: ${this.player.getMoney()} coins</p>
            <p>Your wood: ${i}</p>
          </div>
          <div style="margin: 20px 0; text-align: left;">
            <button id="sell-wood-btn" style="
              display: block;
              width: 100%;
              padding: 12px;
              margin: 8px 0;
              background: rgba(139, 69, 19, 0.8);
              color: white;
              border: 2px solid #654321;
              border-radius: 6px;
              font-size: 16px;
              cursor: pointer;
              transition: all 0.2s;
            " onmouseover="this.style.background='rgba(139, 69, 19, 1)'" onmouseout="this.style.background='rgba(139, 69, 19, 0.8)'">
              [1] Sell Wood - 5 coins each
            </button>
            <button id="buy-iron-btn" style="
              display: block;
              width: 100%;
              padding: 12px;
              margin: 8px 0;
              background: rgba(70, 70, 70, 0.8);
              color: white;
              border: 2px solid #555;
              border-radius: 6px;
              font-size: 16px;
              cursor: pointer;
              transition: all 0.2s;
            " onmouseover="this.style.background='rgba(70, 70, 70, 1)'" onmouseout="this.style.background='rgba(70, 70, 70, 0.8)'">
              [2] Buy Iron Ingot - 25 coins
            </button>
            <button id="buy-gold-btn" style="
              display: block;
              width: 100%;
              padding: 12px;
              margin: 8px 0;
              background: rgba(255, 215, 0, 0.8);
              color: black;
              border: 2px solid #FFD700;
              border-radius: 6px;
              font-size: 16px;
              cursor: pointer;
              transition: all 0.2s;
            " onmouseover="this.style.background='rgba(255, 215, 0, 1)'" onmouseout="this.style.background='rgba(255, 215, 0, 0.8)'">
              [3] Buy Gold Ingot - 100 coins
            </button>
          </div>
          <p style="margin-top: 20px; font-size: 14px;">Press F to close</p>
        `)}else t&&t.remove()}render(){this.renderer.clear(.2,.3,.4);const t=this.camera.getProjectionMatrix(),i=this.camera.getViewMatrix();this.spriteBatch.begin(t,i),this.renderTileMap(),this.renderProgressIndicators(),this.renderTileHighlight(),this.renderShop(),this.renderNPC(),this.renderItemDrops(),this.renderPlayer(),this.tileActionRenderer.renderTileActions(this.spriteBatch,this.currentTileActions),this.spriteBatch.end()}renderTileHighlight(){if(!this.hoveredTile)return;const t=this.tileMap.getTileSize(),i=this.hoveredTile.x*t,s=this.hoveredTile.y*t,e=this.inventorySystem.getSelectedHotbarItem();let o=1,r=1,n=1;if(e&&e.type==="tool"&&e.toolType)switch(e.toolType){case"hoe":o=.6,r=.4,n=.2;break;case"seeds":o=.2,r=.8,n=.2;break;case"wateringCan":o=.2,r=.4,n=.8;break;case"scythe":o=.8,r=.7,n=.2;break;case"axe":o=.9,r=.4,n=.1;break}this.spriteBatch.flush(),this.whiteTexture.bind(0);const h=i+t/2,c=s+t/2,u=this.spriteBatch.getSpriteShader();u.use();const d=3,m=performance.now()/1e3,l=(Math.sin(m*3)+1)/2,f=.6+l*.4;u.setUniform4f("u_color",o,r,n,f),this.spriteBatch.drawTexturedQuad(h,s+d/2,t,d),this.spriteBatch.drawTexturedQuad(h,s+t-d/2,t,d),this.spriteBatch.drawTexturedQuad(i+d/2,c,d,t-d*2),this.spriteBatch.drawTexturedQuad(i+t-d/2,c,d,t-d*2);const g=8,b=.8+l*.2;u.setUniform4f("u_color",o,r,n,b),this.spriteBatch.drawTexturedQuad(i+g/2,s+d/2,g,d),this.spriteBatch.drawTexturedQuad(i+d/2,s+g/2,d,g),this.spriteBatch.drawTexturedQuad(i+t-g/2,s+d/2,g,d),this.spriteBatch.drawTexturedQuad(i+t-d/2,s+g/2,d,g),this.spriteBatch.drawTexturedQuad(i+g/2,s+t-d/2,g,d),this.spriteBatch.drawTexturedQuad(i+d/2,s+t-g/2,d,g),this.spriteBatch.drawTexturedQuad(i+t-g/2,s+t-d/2,g,d),this.spriteBatch.drawTexturedQuad(i+t-d/2,s+t-g/2,d,g),u.setUniform4f("u_color",1,1,1,1)}renderTileMap(){const t=this.tileMap.getTileSize(),i=this.camera.getPosition(),s=this.camera.getZoom(),e=1,o=Math.max(0,Math.floor((i.x-this.canvas.width/(2*s))/t)-e),r=Math.min(this.tileMap.getWidth(),Math.ceil((i.x+this.canvas.width/(2*s))/t)+e),n=Math.max(0,Math.floor((i.y-this.canvas.height/(2*s))/t)-e),h=Math.min(this.tileMap.getHeight(),Math.ceil((i.y+this.canvas.height/(2*s))/t)+e),c=this.textures.get("water");if(c){this.spriteBatch.flush(),c.bind(0);for(let d=n;d<h;d++)for(let m=o;m<r;m++){const l=this.tileMap.getTileAt(m,d);if(l&&l.type===S.Water){const f=m*t,g=d*t;this.spriteBatch.drawTexturedQuad(f+t/2,g+t/2,t+3,t+3)}}}const u=this.textures.get("dirt");if(u){this.spriteBatch.flush(),u.bind(0);for(let d=n;d<h;d++)for(let m=o;m<r;m++){const l=this.tileMap.getTileAt(m,d);if(l&&l.type===S.Dirt){const f=m*t,g=d*t;this.spriteBatch.drawTexturedQuad(f+t/2,g+t/2,t+2,t+2)}}}for(let d=n;d<h;d++)for(let m=o;m<r;m++){const l=this.tileMap.getTileAt(m,d);if(!l||l.type===S.Water||l.type===S.Dirt)continue;const f=m*t,g=d*t;let b=null;switch(l.type){case S.Grass:b=this.textures.get("grass");break;case S.Stone:b=this.textures.get("stone");break;case S.TilledDirt:b=l.watered?this.textures.get("wateredDirt"):this.textures.get("tilledDirt");break;case S.PlantedDirt:b=l.watered?this.textures.get("wateredDirt"):this.textures.get("tilledDirt");break;case S.Tree:b=this.textures.get("grass");break;case S.TreeStump:b=this.textures.get("grass");break}if(b){if(this.spriteBatch.flush(),b.bind(0),this.spriteBatch.drawTexturedQuad(f+t/2,g+t/2,t,t),l.type===S.PlantedDirt&&l.growth!==void 0){this.spriteBatch.flush();let y;l.growth<.3?y=this.textures.get("plant_0.2"):l.growth<.7?y=this.textures.get("plant_0.5"):y=this.textures.get("plant_1.0"),y.bind(0),this.spriteBatch.drawTexturedQuad(f+t/2,g+t/2,t,t)}if(l.type===S.Tree){this.spriteBatch.flush();let y;if(l.treeVariant&&l.treeVariant>=1&&l.treeVariant<=4&&(y=this.textures.get(`tree-${l.treeVariant}`)),y||(y=this.textures.get("tree")),y){y.bind(0);const T=t*1.5,k=-t*.2;this.spriteBatch.drawTexturedQuad(f+t/2,g+t/2+k,T,T)}}else if(l.type===S.TreeStump){this.spriteBatch.flush();let y=this.textures.get("stump");y||(y=this.generateStumpTexture(),this.textures.set("stump",y)),y.bind(0),this.spriteBatch.drawTexturedQuad(f+t/2,g+t/2,t*.8,t*.8)}}}this.renderShoreline(o,r,n,h)}renderShoreline(t,i,s,e){const o=this.tileMap.getTileSize();if(this.spriteBatch.getSpriteShader(),!this.textures.has("shoreline")){const n=x.createSolid(this.renderer.getGL(),1,1,102,76,38);this.textures.set("shoreline",n)}const r=this.textures.get("shoreline");if(r){this.spriteBatch.flush(),r.bind(0);for(let n=s;n<e;n++)for(let h=t;h<i;h++){const c=this.tileMap.getTileAt(h,n);if(!(!c||c.type===S.Water)&&(c.type===S.Grass||c.type===S.Dirt)){const u=h*o,d=n*o,m=h>0&&this.tileMap.getTileAt(h-1,n)?.type===S.Water,l=h<this.tileMap.getWidth()-1&&this.tileMap.getTileAt(h+1,n)?.type===S.Water,f=n>0&&this.tileMap.getTileAt(h,n-1)?.type===S.Water,g=n<this.tileMap.getHeight()-1&&this.tileMap.getTileAt(h,n+1)?.type===S.Water,b=3;m&&this.spriteBatch.drawTexturedQuad(u+b/2,d+o/2,b,o),l&&this.spriteBatch.drawTexturedQuad(u+o-b/2,d+o/2,b,o),f&&this.spriteBatch.drawTexturedQuad(u+o/2,d+b/2,o,b),g&&this.spriteBatch.drawTexturedQuad(u+o/2,d+o-b/2,o,b)}}this.spriteBatch.flush()}}renderItemDrops(){this.itemDropManager.getDrops().forEach(i=>{let s=null;if(i.itemType==="seeds"?s=this.textures.get("item_seeds")||null:i.itemType==="carrot"?s=this.textures.get("item_carrot")||null:i.itemType==="wood"?s=this.textures.get("item_wood")||null:i.itemType==="tree_seeds"&&(s=this.textures.get("item_tree_seeds")||null),s){this.spriteBatch.flush(),s.bind(0);const e=i.position.y+i.bobOffset;if(this.spriteBatch.drawTexturedQuad(i.position.x,e,16,16),i.quantity>1)for(let o=1;o<Math.min(i.quantity,3);o++)this.spriteBatch.drawTexturedQuad(i.position.x+o*4,e-o*2,16,16)}})}renderShop(){const t=this.shopkeeper.position,i=this.textures.get("shop_stall");i&&(this.spriteBatch.flush(),i.bind(0),this.spriteBatch.drawTexturedQuad(t.x,t.y-16,64,64),this.spriteBatch.flush());const s=this.blacksmithNPC.position,e=this.textures.get("forge");e&&(this.spriteBatch.flush(),e.bind(0),this.spriteBatch.drawTexturedQuad(s.x,s.y-24,80,80),this.spriteBatch.flush())}renderNPC(){const t=this.shopkeeper.position,i=this.shopkeeper.getAnimOffset(),s=this.textures.get("shopkeeper");s&&(this.spriteBatch.flush(),s.bind(0),this.spriteBatch.drawTexturedQuad(t.x,t.y+i,32,32),this.spriteBatch.flush());const e=this.blacksmithNPC.position,o=this.blacksmithNPC.getAnimOffset(),r=this.textures.get("blacksmith");r&&(this.spriteBatch.flush(),r.bind(0),this.spriteBatch.drawTexturedQuad(e.x,e.y+o,32,32),this.spriteBatch.flush())}renderPlayer(){const t=this.player.getPosition(),i=this.player.getSize(),s=this.player.getFacing(),e=this.inventorySystem.getSelectedHotbarItem(),o=this.player.getToolAnimationProgress(),r=this.textures.get("character");if(r){r.getWidth()/4,r.getHeight()/4;let c=0;switch(s){case"down":c=0;break;case"right":c=1;break;case"left":c=3;break;case"up":c=2;break}let u=0;if(this.player.isPlayerMoving()){const T=this.player.getAnimationTime();u=1+Math.floor(T/.2)%3}else u=0;const d=u/4,m=c/4,l=(u+1)/4,f=(c+1)/4;this.spriteBatch.flush(),r.bind(0),this.spriteBatch.drawTexturedQuad(t.x,t.y+-8,48,48,d,m,l,f)}else{let n;if(e&&e.toolType)switch(e.toolType){case"hoe":n=w.Hoe;break;case"axe":n=w.Axe;break;case"wateringCan":n=w.WateringCan;break;case"scythe":n=w.Scythe;break;case"seeds":n=w.Seeds;break}const h=this.generatePlayerTexture(s,n,o);this.spriteBatch.flush(),h.bind(0),this.spriteBatch.drawTexturedQuad(t.x,t.y,i.x*1.2,i.y*1.2)}if(this.player.isAnimatingTool()){const n=this.player.getToolAnimationProgress();this.renderProgressBar(t.x,t.y-32,20,3,n,{r:1,g:1,b:0})}}updateFPS(t){if(this.frameCount++,t-this.fpsTime>=1e3){const i=document.getElementById("fps");i&&(i.textContent=this.frameCount.toString());const s=document.getElementById("soundtrack");if(s){const e=this.audioSystem.getMusicStatus(),o=this.audioSystem.getAudioContextState();s.textContent=`${e} (Context: ${o})`}this.frameCount=0,this.fpsTime=t}}renderProgressIndicators(){const t=this.tileMap.getTileSize(),i=this.camera.getPosition(),s=this.camera.getZoom(),e=Math.max(0,Math.floor((i.x-this.canvas.width/(2*s))/t)),o=Math.min(this.tileMap.getWidth(),Math.ceil((i.x+this.canvas.width/(2*s))/t)),r=Math.max(0,Math.floor((i.y-this.canvas.height/(2*s))/t)),n=Math.min(this.tileMap.getHeight(),Math.ceil((i.y+this.canvas.height/(2*s))/t));for(let h=r;h<n;h++)for(let c=e;c<o;c++){const u=this.tileMap.getTileAt(c,h);if(!u)continue;const d=c*t+t/2,m=h*t+t/2;if(u.type===S.Tree&&u.treeHealth!==void 0&&u.treeHealth<3){const l=u.treeHealth/3;this.renderProgressBar(d,m-t/2-8,24,4,l,{r:.6,g:.3,b:.1})}if(u.type===S.TilledDirt&&!u.planted&&u.tilledTime){const l=Date.now(),f=3e4,g=l-u.tilledTime,y=Math.max(0,f-g)/f;this.renderProgressBar(d,m+t/2+4,20,2,y,{r:.6,g:.4,b:.2})}if(u.type===S.PlantedDirt&&u.growth!==void 0&&(this.renderProgressBar(d,m+t/2+4,20,3,u.growth,{r:.2,g:.8,b:.2}),u.watered&&u.lastWatered)){const l=Date.now(),f=5e3,g=l-u.lastWatered,y=Math.max(0,f-g)/f;this.renderProgressBar(d,m-t/2-6,16,2,y,{r:.2,g:.6,b:1})}}}renderProgressBar(t,i,s,e,o,r){o=Math.max(0,Math.min(1,o)),this.spriteBatch.flush(),this.whiteTexture.bind(0);const n=this.spriteBatch.getSpriteShader();if(n.use(),n.setUniform4f("u_color",.2,.2,.2,.8),this.spriteBatch.drawTexturedQuad(t,i,s,e),this.spriteBatch.flush(),o>0){n.setUniform4f("u_color",r.r,r.g,r.b,.9);const c=Math.max(1,(s-2)*o),u=t-s/2+c/2+1;this.spriteBatch.drawTexturedQuad(u,i,c,e-2),this.spriteBatch.flush()}n.setUniform4f("u_color",.1,.1,.1,1);const h=1;this.spriteBatch.drawTexturedQuad(t,i-e/2+h/2,s,h),this.spriteBatch.drawTexturedQuad(t,i+e/2-h/2,s,h),this.spriteBatch.drawTexturedQuad(t-s/2+h/2,i,h,e),this.spriteBatch.drawTexturedQuad(t+s/2-h/2,i,h,e),this.spriteBatch.flush(),n.setUniform4f("u_color",1,1,1,1)}}const at=document.getElementById("app");at.innerHTML=`
  <canvas id="gameCanvas"></canvas>
  <div id="gameInfo">
    <div>FPS: <span id="fps">0</span></div>
    <div>Position: <span id="position">0, 0</span></div>
    <div>Soundtrack: <span id="soundtrack">Loading...</span></div>
    <div class="volume-control">
      <label for="musicVolume">Music Volume: </label>
      <input type="range" id="musicVolume" min="0" max="100" value="50" />
      <span id="volumeValue">50%</span>
    </div>
  </div>
  <div id="inventory">
    <div id="inventorySlots"></div>
    <div id="cropCount"></div>
  </div>
`;const lt=document.getElementById("gameCanvas");new nt(lt);
