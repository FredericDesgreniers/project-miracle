var U=Object.defineProperty;var F=(p,t,e)=>t in p?U(p,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):p[t]=e;var a=(p,t,e)=>F(p,typeof t!="symbol"?t+"":t,e);(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const s of document.querySelectorAll('link[rel="modulepreload"]'))i(s);new MutationObserver(s=>{for(const o of s)if(o.type==="childList")for(const r of o.addedNodes)r.tagName==="LINK"&&r.rel==="modulepreload"&&i(r)}).observe(document,{childList:!0,subtree:!0});function e(s){const o={};return s.integrity&&(o.integrity=s.integrity),s.referrerPolicy&&(o.referrerPolicy=s.referrerPolicy),s.crossOrigin==="use-credentials"?o.credentials="include":s.crossOrigin==="anonymous"?o.credentials="omit":o.credentials="same-origin",o}function i(s){if(s.ep)return;s.ep=!0;const o=e(s);fetch(s.href,o)}})();class L{constructor(t){a(this,"gl");a(this,"width");a(this,"height");const e=t.getContext("webgl2");if(!e)throw new Error("WebGL2 not supported");this.gl=e,this.width=t.width,this.height=t.height,this.setupGL()}setupGL(){const t=this.gl;t.enable(t.BLEND),t.blendFunc(t.SRC_ALPHA,t.ONE_MINUS_SRC_ALPHA),t.enable(t.DEPTH_TEST),t.depthFunc(t.LEQUAL),this.resize(this.width,this.height)}resize(t,e){this.width=t,this.height=e,this.gl.viewport(0,0,t,e)}clear(t=.1,e=.1,i=.1,s=1){const o=this.gl;o.clearColor(t,e,i,s),o.clear(o.COLOR_BUFFER_BIT|o.DEPTH_BUFFER_BIT)}getGL(){return this.gl}getWidth(){return this.width}getHeight(){return this.height}}class D{constructor(t,e,i){a(this,"gl");a(this,"program");a(this,"uniformLocations",new Map);this.gl=t;const s=this.compileShader(t.VERTEX_SHADER,e),o=this.compileShader(t.FRAGMENT_SHADER,i);this.program=this.createProgram(s,o)}compileShader(t,e){const i=this.gl,s=i.createShader(t);if(!s)throw new Error("Failed to create shader");if(i.shaderSource(s,e),i.compileShader(s),!i.getShaderParameter(s,i.COMPILE_STATUS)){const o=i.getShaderInfoLog(s);throw i.deleteShader(s),new Error(`Shader compilation error: ${o}`)}return s}createProgram(t,e){const i=this.gl,s=i.createProgram();if(!s)throw new Error("Failed to create program");if(i.attachShader(s,t),i.attachShader(s,e),i.linkProgram(s),!i.getProgramParameter(s,i.LINK_STATUS)){const o=i.getProgramInfoLog(s);throw i.deleteProgram(s),new Error(`Program linking error: ${o}`)}return i.deleteShader(t),i.deleteShader(e),s}use(){this.gl.useProgram(this.program)}getUniformLocation(t){if(!this.uniformLocations.has(t)){const e=this.gl.getUniformLocation(this.program,t);if(!e)return console.warn(`Uniform '${t}' not found`),null;this.uniformLocations.set(t,e)}return this.uniformLocations.get(t)}setUniform1i(t,e){const i=this.getUniformLocation(t);i&&this.gl.uniform1i(i,e)}setUniform1f(t,e){const i=this.getUniformLocation(t);i&&this.gl.uniform1f(i,e)}setUniform2f(t,e,i){const s=this.getUniformLocation(t);s&&this.gl.uniform2f(s,e,i)}setUniform3f(t,e,i,s){const o=this.getUniformLocation(t);o&&this.gl.uniform3f(o,e,i,s)}setUniform4f(t,e,i,s,o){const r=this.getUniformLocation(t);r&&this.gl.uniform4f(r,e,i,s,o)}setUniformMatrix4fv(t,e){const i=this.getUniformLocation(t);i&&this.gl.uniformMatrix4fv(i,!1,e)}getProgram(){return this.program}}const H=`#version 300 es
precision highp float;

in vec2 a_position;
in vec2 a_texCoord;

uniform mat4 u_projection;
uniform mat4 u_view;
uniform mat4 u_model;

out vec2 v_texCoord;

void main() {
    gl_Position = u_projection * u_view * u_model * vec4(a_position, 0.0, 1.0);
    v_texCoord = a_texCoord;
}`,_=`#version 300 es
precision highp float;

in vec2 v_texCoord;

uniform sampler2D u_texture;
uniform vec4 u_color;

out vec4 fragColor;

void main() {
    vec4 texColor = texture(u_texture, v_texCoord);
    fragColor = texColor * u_color;
}`,z=`#version 300 es
precision highp float;

in vec2 a_position;

uniform mat4 u_projection;
uniform mat4 u_view;
uniform mat4 u_model;

void main() {
    gl_Position = u_projection * u_view * u_model * vec4(a_position, 0.0, 1.0);
}`,W=`#version 300 es
precision highp float;

uniform vec4 u_color;

out vec4 fragColor;

void main() {
    fragColor = u_color;
}`;class v{constructor(t=0,e=0){this.x=t,this.y=e}add(t){return new v(this.x+t.x,this.y+t.y)}subtract(t){return new v(this.x-t.x,this.y-t.y)}multiply(t){return new v(this.x*t,this.y*t)}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}normalize(){const t=this.length();return t===0?new v(0,0):new v(this.x/t,this.y/t)}}class M{constructor(t){a(this,"data");this.data=t||new Float32Array(16)}static identity(){const t=new M;return t.data[0]=1,t.data[5]=1,t.data[10]=1,t.data[15]=1,t}static orthographic(t,e,i,s,o,r){const n=new M,h=1/(t-e),c=1/(i-s),u=1/(o-r);return n.data[0]=-2*h,n.data[5]=-2*c,n.data[10]=2*u,n.data[12]=(t+e)*h,n.data[13]=(s+i)*c,n.data[14]=(r+o)*u,n.data[15]=1,n}static translate(t,e,i=0){const s=M.identity();return s.data[12]=t,s.data[13]=e,s.data[14]=i,s}static scale(t,e,i=1){const s=M.identity();return s.data[0]=t,s.data[5]=e,s.data[10]=i,s}static rotateZ(t){const e=M.identity(),i=Math.cos(t),s=Math.sin(t);return e.data[0]=i,e.data[1]=s,e.data[4]=-s,e.data[5]=i,e}multiply(t){const e=new M,i=this.data,s=t.data,o=e.data;for(let r=0;r<4;r++)for(let n=0;n<4;n++)o[r*4+n]=i[r*4+0]*s[0*4+n]+i[r*4+1]*s[1*4+n]+i[r*4+2]*s[2*4+n]+i[r*4+3]*s[3*4+n];return e}}class O{constructor(t,e=1e3){a(this,"gl");a(this,"spriteShader");a(this,"colorShader");a(this,"vertexBuffer");a(this,"indexBuffer");a(this,"vertices");a(this,"indices");a(this,"maxSprites");a(this,"spriteCount",0);a(this,"vertexIndex",0);this.gl=t,this.maxSprites=e,this.spriteShader=new D(t,H,_),this.colorShader=new D(t,z,W),this.vertices=new Float32Array(e*4*4),this.indices=new Uint16Array(e*6),this.setupBuffers(),this.setupIndices()}setupBuffers(){const t=this.gl,e=t.createBuffer();if(!e)throw new Error("Failed to create vertex buffer");this.vertexBuffer=e;const i=t.createBuffer();if(!i)throw new Error("Failed to create index buffer");this.indexBuffer=i}setupIndices(){for(let t=0;t<this.maxSprites;t++){const e=t*6,i=t*4;this.indices[e+0]=i+0,this.indices[e+1]=i+1,this.indices[e+2]=i+2,this.indices[e+3]=i+0,this.indices[e+4]=i+2,this.indices[e+5]=i+3}}begin(t,e){this.spriteCount=0,this.vertexIndex=0,this.spriteShader.use(),this.spriteShader.setUniformMatrix4fv("u_projection",t.data),this.spriteShader.setUniformMatrix4fv("u_view",e.data),this.spriteShader.setUniformMatrix4fv("u_model",M.identity().data),this.spriteShader.setUniform4f("u_color",1,1,1,1)}drawTexturedQuad(t,e,i,s,o=0,r=0,n=1,h=1,c=0){this.spriteCount>=this.maxSprites&&this.flush();const u=i/2,d=s/2,f=Math.cos(c),l=Math.sin(c),m=-u,g=-d,x=u,b=d,T=[t+m*f-g*l,e+m*l+g*f,t+x*f-g*l,e+x*l+g*f,t+x*f-b*l,e+x*l+b*f,t+m*f-b*l,e+m*l+b*f],P=[o,r,n,r,n,h,o,h];for(let I=0;I<4;I++)this.vertices[this.vertexIndex++]=T[I*2],this.vertices[this.vertexIndex++]=T[I*2+1],this.vertices[this.vertexIndex++]=P[I*2],this.vertices[this.vertexIndex++]=P[I*2+1];this.spriteCount++}drawColoredQuad(t,e,i,s,o,r,n,h=1,c,u){const d=this.gl;this.flush(),this.colorShader.use(),this.colorShader.setUniform4f("u_color",o,r,n,h),c&&u&&(this.colorShader.setUniformMatrix4fv("u_projection",c.data),this.colorShader.setUniformMatrix4fv("u_view",u.data),this.colorShader.setUniformMatrix4fv("u_model",M.identity().data));const f=new Float32Array([t-i/2,e-s/2,t+i/2,e-s/2,t+i/2,e+s/2,t-i/2,e+s/2]),l=d.createBuffer();d.bindBuffer(d.ARRAY_BUFFER,l),d.bufferData(d.ARRAY_BUFFER,f,d.STATIC_DRAW);const m=d.getAttribLocation(this.colorShader.getProgram(),"a_position");d.enableVertexAttribArray(m),d.vertexAttribPointer(m,2,d.FLOAT,!1,0,0),d.drawArrays(d.TRIANGLE_FAN,0,4),d.deleteBuffer(l)}flush(){if(this.spriteCount===0)return;const t=this.gl;t.bindBuffer(t.ARRAY_BUFFER,this.vertexBuffer),t.bufferData(t.ARRAY_BUFFER,this.vertices.subarray(0,this.vertexIndex),t.DYNAMIC_DRAW),t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,this.indexBuffer),t.bufferData(t.ELEMENT_ARRAY_BUFFER,this.indices.subarray(0,this.spriteCount*6),t.DYNAMIC_DRAW);const e=4*4,i=t.getAttribLocation(this.spriteShader.getProgram(),"a_position");i!==-1&&(t.enableVertexAttribArray(i),t.vertexAttribPointer(i,2,t.FLOAT,!1,e,0));const s=t.getAttribLocation(this.spriteShader.getProgram(),"a_texCoord");s!==-1&&(t.enableVertexAttribArray(s),t.vertexAttribPointer(s,2,t.FLOAT,!1,e,8)),this.spriteShader.setUniform1i("u_texture",0),t.drawElements(t.TRIANGLES,this.spriteCount*6,t.UNSIGNED_SHORT,0),this.spriteCount=0,this.vertexIndex=0}end(){this.flush()}getSpriteShader(){return this.spriteShader}}class y{constructor(t,e,i){a(this,"gl");a(this,"texture");a(this,"width");a(this,"height");this.gl=t,this.width=e,this.height=i;const s=t.createTexture();if(!s)throw new Error("Failed to create texture");this.texture=s}static fromImageData(t,e){const i=new y(t,e.width,e.height);return i.setData(new Uint8Array(e.data)),i}static async load(t,e,i=t.CLAMP_TO_EDGE){return new Promise((s,o)=>{const r=new Image;r.onload=()=>{const n=new y(t,r.width,r.height);t.bindTexture(t.TEXTURE_2D,n.texture),t.texImage2D(t.TEXTURE_2D,0,t.RGBA,t.RGBA,t.UNSIGNED_BYTE,r),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_S,i),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_T,i),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MIN_FILTER,t.NEAREST),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MAG_FILTER,t.NEAREST),s(n)},r.onerror=()=>{o(new Error(`Failed to load image: ${e}`))},r.src=e})}static createSolid(t,e,i,s,o,r,n=255){const h=new y(t,e,i),c=new Uint8Array(e*i*4);for(let u=0;u<e*i;u++)c[u*4+0]=s,c[u*4+1]=o,c[u*4+2]=r,c[u*4+3]=n;return h.setData(c),h}static generateGrassTile(t,e=32){const i=document.createElement("canvas");i.width=e,i.height=e;const s=i.getContext("2d");s.fillStyle="#4a7c4e",s.fillRect(0,0,e,e);for(let r=0;r<100;r++){const n=Math.random()*e,h=Math.random()*e,c=2+Math.random()*4,u=-Math.PI/2+(Math.random()-.5)*.5;s.strokeStyle=`rgba(${60+Math.random()*40}, ${100+Math.random()*55}, 60, 0.7)`,s.lineWidth=1,s.beginPath(),s.moveTo(n,h),s.lineTo(n+Math.cos(u)*c,h+Math.sin(u)*c),s.stroke()}const o=s.getImageData(0,0,e,e);return y.fromImageData(t,o)}static generateDirtTile(t,e=32){const i=document.createElement("canvas");i.width=e,i.height=e;const s=i.getContext("2d");s.fillStyle="#8b6914",s.fillRect(0,0,e,e);for(let r=0;r<50;r++){const n=Math.random()*e,h=Math.random()*e,c=Math.random()*3;s.fillStyle=`rgba(${100+Math.random()*55}, ${80+Math.random()*40}, 20, 0.5)`,s.beginPath(),s.arc(n,h,c,0,Math.PI*2),s.fill()}const o=s.getImageData(0,0,e,e);return y.fromImageData(t,o)}static generateStoneTile(t,e=32){const i=document.createElement("canvas");i.width=e,i.height=e;const s=i.getContext("2d");s.fillStyle="#666666",s.fillRect(0,0,e,e);for(let r=0;r<30;r++){const n=Math.random()*e,h=Math.random()*e,c=5+Math.random()*10,u=5+Math.random()*10;s.fillStyle=`rgba(${80+Math.random()*40}, ${80+Math.random()*40}, ${80+Math.random()*40}, 0.5)`,s.fillRect(n,h,c,u)}const o=s.getImageData(0,0,e,e);return y.fromImageData(t,o)}static generateWaterTile(t,e=32){const i=document.createElement("canvas");i.width=e,i.height=e;const s=i.getContext("2d"),o=s.createLinearGradient(0,0,e,e);o.addColorStop(0,"#2e86de"),o.addColorStop(.5,"#54a0ff"),o.addColorStop(1,"#2e86de"),s.fillStyle=o,s.fillRect(0,0,e,e),s.strokeStyle="rgba(255, 255, 255, 0.3)",s.lineWidth=1;for(let n=0;n<3;n++){const h=Math.random()*e,c=Math.random()*e,u=5+Math.random()*10;s.beginPath(),s.arc(h,c,u,0,Math.PI*2),s.stroke()}const r=s.getImageData(0,0,e,e);return y.fromImageData(t,r)}setData(t){const e=this.gl;e.bindTexture(e.TEXTURE_2D,this.texture),e.texImage2D(e.TEXTURE_2D,0,e.RGBA,this.width,this.height,0,e.RGBA,e.UNSIGNED_BYTE,t),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MIN_FILTER,e.NEAREST),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MAG_FILTER,e.NEAREST)}bind(t=0){const e=this.gl;e.activeTexture(e.TEXTURE0+t),e.bindTexture(e.TEXTURE_2D,this.texture)}getWidth(){return this.width}getHeight(){return this.height}dispose(){this.gl.deleteTexture(this.texture)}}class G{constructor(t,e){a(this,"position");a(this,"zoom");a(this,"screenWidth");a(this,"screenHeight");this.position=new v(0,0),this.zoom=1,this.screenWidth=t,this.screenHeight=e}setPosition(t,e){this.position.x=t,this.position.y=e}getPosition(){return this.position}setZoom(t){this.zoom=Math.max(.1,Math.min(5,t))}getZoom(){return this.zoom}resize(t,e){this.screenWidth=t,this.screenHeight=e}getProjectionMatrix(){const t=this.screenWidth/2,e=this.screenHeight/2;return M.orthographic(-t,t,e,-e,-1,1)}getViewMatrix(){const t=M.scale(this.zoom,this.zoom),e=M.translate(-this.position.x,-this.position.y);return t.multiply(e)}screenToWorld(t,e){const i=(t-this.screenWidth/2)/this.zoom+this.position.x,s=(e-this.screenHeight/2)/this.zoom+this.position.y;return new v(i,s)}worldToScreen(t,e){const i=(t-this.position.x)*this.zoom+this.screenWidth/2,s=(e-this.position.y)*this.zoom+this.screenHeight/2;return new v(i,s)}followTarget(t,e,i=.1){this.position.x+=(t-this.position.x)*i,this.position.y+=(e-this.position.y)*i}}var k=(p=>(p.W="KeyW",p.A="KeyA",p.S="KeyS",p.D="KeyD",p.Space="Space",p.Shift="ShiftLeft",p.E="KeyE",p.F="KeyF",p.Escape="Escape",p.ArrowUp="ArrowUp",p.ArrowDown="ArrowDown",p.ArrowLeft="ArrowLeft",p.ArrowRight="ArrowRight",p))(k||{});class q{constructor(t){a(this,"keys",new Map);a(this,"previousKeys",new Map);a(this,"mousePosition",new v);a(this,"mouseButtons",new Map);a(this,"previousMouseButtons",new Map);t.tabIndex=1,t.focus(),this.setupEventListeners(t)}setupEventListeners(t){window.addEventListener("keydown",e=>{this.keys.set(e.code,!0),(e.code.startsWith("Arrow")||e.code.startsWith("Key")||e.code==="Space"||e.code.startsWith("Digit"))&&e.preventDefault()}),window.addEventListener("keyup",e=>{this.keys.set(e.code,!1),(e.code.startsWith("Arrow")||e.code.startsWith("Key")||e.code==="Space"||e.code.startsWith("Digit"))&&e.preventDefault()}),t.addEventListener("mousemove",e=>{const i=t.getBoundingClientRect();this.mousePosition.x=e.clientX-i.left,this.mousePosition.y=e.clientY-i.top}),t.addEventListener("mousedown",e=>{t.focus(),this.mouseButtons.set(e.button,!0),e.preventDefault()}),t.addEventListener("mouseup",e=>{this.mouseButtons.set(e.button,!1),e.preventDefault()}),t.addEventListener("contextmenu",e=>{e.preventDefault()}),window.addEventListener("blur",()=>{this.keys.clear(),this.mouseButtons.clear()})}update(){this.previousKeys=new Map(this.keys),this.previousMouseButtons=new Map(this.mouseButtons)}isKeyDown(t){return this.keys.get(t)||!1}isKeyPressed(t){const e=this.keys.get(t)||!1,i=this.previousKeys.get(t)||!1;return e&&!i}isKeyReleased(t){return!this.keys.get(t)&&(this.previousKeys.get(t)||!1)}isMouseButtonDown(t){return this.mouseButtons.get(t)||!1}isMouseButtonPressed(t){return(this.mouseButtons.get(t)||!1)&&!this.previousMouseButtons.get(t)}isMouseButtonReleased(t){return!this.mouseButtons.get(t)&&(this.previousMouseButtons.get(t)||!1)}getMousePosition(){return this.mousePosition}getMovementVector(){const t=new v;return(this.isKeyDown("KeyW")||this.isKeyDown("ArrowUp"))&&(t.y-=1),(this.isKeyDown("KeyS")||this.isKeyDown("ArrowDown"))&&(t.y+=1),(this.isKeyDown("KeyA")||this.isKeyDown("ArrowLeft"))&&(t.x-=1),(this.isKeyDown("KeyD")||this.isKeyDown("ArrowRight"))&&(t.x+=1),t.length()>0?t.normalize():t}}var S=(p=>(p[p.Grass=0]="Grass",p[p.Dirt=1]="Dirt",p[p.Stone=2]="Stone",p[p.Water=3]="Water",p[p.TilledDirt=4]="TilledDirt",p[p.PlantedDirt=5]="PlantedDirt",p[p.Tree=6]="Tree",p))(S||{});class N{constructor(t,e,i=32){a(this,"tiles");a(this,"width");a(this,"height");a(this,"tileSize");this.width=t,this.height=e,this.tileSize=i,this.tiles=[],this.generateMap()}generateMap(){for(let t=0;t<this.height;t++){this.tiles[t]=[];for(let e=0;e<this.width;e++)this.tiles[t][e]={type:0,solid:!1}}this.generateRiver(),this.generateStones(),this.generateDirtPatches(),this.generateTrees()}generateRiver(){const t=Math.floor(this.height/2),e=3;for(let i=0;i<this.width;i++){const s=Math.sin(i*.3)*2;for(let o=-e;o<=e;o++){const r=Math.floor(t+s+o);r>=0&&r<this.height&&(this.tiles[r][i]={type:3,solid:!0})}}}generateStones(){const t=Math.floor(this.width*this.height*.02);for(let e=0;e<t;e++){const i=Math.floor(Math.random()*this.width),s=Math.floor(Math.random()*this.height);this.tiles[s][i].type===0&&(this.tiles[s][i]={type:2,solid:!0})}}generateDirtPatches(){for(let e=0;e<5;e++){const i=Math.floor(Math.random()*this.width),s=Math.floor(Math.random()*this.height),o=2+Math.floor(Math.random()*3);for(let r=-o;r<=o;r++)for(let n=-o;n<=o;n++)if(n*n+r*r<=o*o){const h=i+n,c=s+r;h>=0&&h<this.width&&c>=0&&c<this.height&&this.tiles[c][h].type===0&&(this.tiles[c][h]={type:1,solid:!1})}}}generateTrees(){const t=Math.floor(this.width*this.height*.03);for(let e=0;e<t;e++){const i=Math.floor(Math.random()*this.width),s=Math.floor(Math.random()*this.height);if(this.tiles[s][i].type===0){let o=!1;for(let r=-1;r<=1;r++){for(let n=-1;n<=1;n++){const h=i+n,c=s+r;if(h>=0&&h<this.width&&c>=0&&c<this.height&&this.tiles[c][h].type===6){o=!0;break}}if(o)break}o||(this.tiles[s][i]={type:6,solid:!0,treeHealth:3,treeVariant:Math.floor(Math.random()*4)+1})}}}getTile(t,e){const i=Math.floor(t/this.tileSize),s=Math.floor(e/this.tileSize);return i<0||i>=this.width||s<0||s>=this.height?null:this.tiles[s][i]}getTileAt(t,e){return t<0||t>=this.width||e<0||e>=this.height?null:this.tiles[e][t]}setTile(t,e,i){t>=0&&t<this.width&&e>=0&&e<this.height&&(this.tiles[e][t]=i)}tillTile(t,e){const i=Math.floor(t/this.tileSize),s=Math.floor(e/this.tileSize),o=this.getTileAt(i,s);return o&&(o.type===0||o.type===1)?(this.tiles[s][i]={type:4,solid:!1,tilled:!0,tilledTime:Date.now()},!0):!1}plantSeed(t,e,i="carrot"){const s=Math.floor(t/this.tileSize),o=Math.floor(e/this.tileSize),r=this.getTileAt(s,o);return r&&r.type===4&&!r.planted?(this.tiles[o][s]={type:5,solid:!1,tilled:!0,planted:!0,growth:0,watered:!1,cropType:i},!0):!1}waterTile(t,e){const i=Math.floor(t/this.tileSize),s=Math.floor(e/this.tileSize),o=this.getTileAt(i,s);return o&&(o.type===4||o.type===5)?(o.watered=!0,o.lastWatered=Date.now(),!0):!1}harvestCrop(t,e){const i=Math.floor(t/this.tileSize),s=Math.floor(e/this.tileSize),o=this.getTileAt(i,s);if(o&&o.type===5&&o.growth&&o.growth>=1){const r=o.cropType||"carrot";return this.tiles[s][i]={type:4,solid:!1,tilled:!0,watered:!1},r}return null}chopTree(t,e){const i=Math.floor(t/this.tileSize),s=Math.floor(e/this.tileSize),o=this.getTileAt(i,s);return o&&o.type===6?o.treeHealth&&o.treeHealth>1?(o.treeHealth--,!1):(this.tiles[s][i]={type:0,solid:!1},!0):!1}updateCrops(t){const e=Date.now();for(let i=0;i<this.height;i++)for(let s=0;s<this.width;s++){const o=this.tiles[i][s];o.type===5&&o.planted&&o.growth!==void 0?o.watered&&(o.growth=Math.min(1,o.growth+t*.1),o.lastWatered&&e-o.lastWatered>5e3&&(o.watered=!1)):o.type===4&&!o.planted&&o.tilledTime&&e-o.tilledTime>3e4&&(this.tiles[i][s]={type:0,solid:!1})}}isSolid(t,e){const i=this.getTile(t,e);return i?i.solid:!0}getWidth(){return this.width}getHeight(){return this.height}getTileSize(){return this.tileSize}getWorldWidth(){return this.width*this.tileSize}getWorldHeight(){return this.height*this.tileSize}}var w=(p=>(p.None="none",p.Hoe="hoe",p.Seeds="seeds",p.WateringCan="wateringCan",p.Scythe="scythe",p.Axe="axe",p))(w||{});class ${constructor(){a(this,"tools",[]);a(this,"selectedIndex",0);this.initializeTools()}initializeTools(){this.tools=[{type:"hoe",name:"Hoe",icon:"⛏️"},{type:"seeds",name:"Carrot Seeds",icon:"🥕",quantity:10},{type:"wateringCan",name:"Watering Can",icon:"💧"},{type:"scythe",name:"Scythe",icon:"🌾"},{type:"axe",name:"Axe",icon:"🪓"}]}getSelectedTool(){return this.tools[this.selectedIndex]}selectTool(t){t>=0&&t<this.tools.length&&(this.selectedIndex=t)}selectNextTool(){this.selectedIndex=(this.selectedIndex+1)%this.tools.length}selectPreviousTool(){this.selectedIndex=(this.selectedIndex-1+this.tools.length)%this.tools.length}consumeSeed(){const t=this.getSelectedTool();return t.type==="seeds"&&t.quantity&&t.quantity>0?(t.quantity--,!0):!1}addSeeds(t){const e=this.tools.find(i=>i.type==="seeds");e&&e.quantity!==void 0&&(e.quantity+=t)}getTools(){return this.tools}getSelectedIndex(){return this.selectedIndex}}class X{constructor(t,e){a(this,"position");a(this,"velocity");a(this,"size");a(this,"speed");a(this,"facing");a(this,"inventory");a(this,"harvestedCrops",new Map);a(this,"isUsingTool",!1);a(this,"toolUseTime",0);a(this,"toolUseDuration",.3);a(this,"money",100);a(this,"sprintMultiplier",1.75);a(this,"animationTime",0);a(this,"isMoving",!1);this.position=new v(t,e),this.velocity=new v(0,0),this.size=new v(24,24),this.speed=150,this.facing="down",this.inventory=new $}update(t,e,i,s=!1){this.isUsingTool&&(this.toolUseTime+=t,this.toolUseTime>=this.toolUseDuration&&(this.isUsingTool=!1,this.toolUseTime=0)),this.isMoving=e.length()>0,this.isMoving?this.animationTime+=t:this.animationTime=0;let o=this.isUsingTool?.5:1;s&&!this.isUsingTool&&(o*=this.sprintMultiplier),this.velocity=e.multiply(this.speed*o),Math.abs(this.velocity.x)>Math.abs(this.velocity.y)?this.facing=this.velocity.x>0?"right":"left":this.velocity.y!==0&&(this.facing=this.velocity.y>0?"down":"up");const r=this.position.x+this.velocity.x*t,n=this.position.y+this.velocity.y*t;this.checkCollision(r,this.position.y,i)||(this.position.x=r),this.checkCollision(this.position.x,n,i)||(this.position.y=n);const h=i.getWorldWidth(),c=i.getWorldHeight();this.position.x=Math.max(this.size.x/2,Math.min(h-this.size.x/2,this.position.x)),this.position.y=Math.max(this.size.y/2,Math.min(c-this.size.y/2,this.position.y))}checkCollision(t,e,i){const s=this.size.x/2,o=this.size.y/2,r=[{x:t-s,y:e-o},{x:t+s,y:e-o},{x:t-s,y:e+o},{x:t+s,y:e+o}];for(const n of r)if(i.isSolid(n.x,n.y))return!0;return!1}interact(t,e,i,s){if(this.isUsingTool)return;this.isUsingTool=!0,this.toolUseTime=0;let o=this.position.x,r=this.position.y;const n=32;switch(this.facing){case"up":r-=n;break;case"down":r+=n;break;case"left":o-=n;break;case"right":o+=n;break}switch(s||this.inventory.getSelectedTool().type){case w.Hoe:case"hoe":t.tillTile(o,r)&&i?.playSound("hoe",.5);break;case w.Seeds:case"seeds":t.plantSeed(o,r)&&i?.playSound("plant",.4);break;case w.WateringCan:case"wateringCan":t.waterTile(o,r)&&i?.playSound("watering",.4);break;case w.Scythe:case"scythe":const c=t.harvestCrop(o,r);c&&(i?.playSound("scythe",.5),e.createDrop(o,r,c,1),e.createDrop(o+10,r-10,"seeds",2));break;case w.Axe:case"axe":const u=t.chopTree(o,r);i?.playSound("axe",.6),u&&(e.createDrop(o,r,"wood",3),e.createDrop(o-10,r+10,"wood",2));break}}interactAt(t,e,i,s,o,r){if(this.isUsingTool)return;switch(this.isUsingTool=!0,this.toolUseTime=0,r||this.inventory.getSelectedTool().type){case w.Hoe:i.tillTile(t,e)&&o?.playSound("hoe",.5);break;case w.Seeds:case"seeds":i.plantSeed(t,e)&&o?.playSound("plant",.4);break;case w.WateringCan:case"wateringCan":i.waterTile(t,e)&&o?.playSound("watering",.4);break;case w.Scythe:case"scythe":const h=i.harvestCrop(t,e);h&&(o?.playSound("scythe",.5),s.createDrop(t,e,h,1),s.createDrop(t+10,e-10,"seeds",2));break;case w.Axe:case"axe":const c=i.chopTree(t,e);o?.playSound("axe",.6),c&&(s.createDrop(t,e,"wood",3),s.createDrop(t-10,e+10,"wood",2));break}}getPosition(){return this.position}getSize(){return this.size}getFacing(){return this.facing}getInventory(){return this.inventory}getHarvestedCrops(){return this.harvestedCrops}isAnimatingTool(){return this.isUsingTool}getToolAnimationProgress(){return this.isUsingTool?this.toolUseTime/this.toolUseDuration:0}collectItems(t,e,i){t.checkPickup(this.position.x,this.position.y).forEach(o=>{let r=!1;if(i){let n=null;o.itemType==="seeds"?n={id:"carrot_seeds",name:"Carrot Seeds",icon:"🥕",quantity:o.quantity,stackable:!0,type:"seed",toolType:"seeds"}:o.itemType==="carrot"?n={id:"carrot",name:"Carrot",icon:"🥕",quantity:o.quantity,stackable:!0,type:"crop"}:o.itemType==="wood"&&(n={id:"wood",name:"Wood",icon:"🪵",quantity:o.quantity,stackable:!0,type:"resource"}),n&&(r=i.addItem(n))}else if(o.itemType==="seeds")this.inventory.addSeeds(o.quantity),r=!0;else{const n=this.harvestedCrops.get(o.itemType)||0;this.harvestedCrops.set(o.itemType,n+o.quantity),r=!0}r&&(console.log(`Picked up ${o.quantity} ${o.itemType}!`),e?.playSound("pickup",.4))})}getMoney(){return this.money}addMoney(t){this.money+=t}spendMoney(t){return this.money>=t?(this.money-=t,!0):!1}getAnimationTime(){return this.animationTime}isPlayerMoving(){return this.isMoving}}class K{constructor(){a(this,"drops",new Map);a(this,"nextId",1)}createDrop(t,e,i,s=1){const o={id:this.nextId++,position:new v(t,e),itemType:i,quantity:s,bobOffset:0,bobTime:Math.random()*Math.PI*2};this.drops.set(o.id,o)}update(t){this.drops.forEach(e=>{e.bobTime+=t*3,e.bobOffset=Math.sin(e.bobTime)*2})}checkPickup(t,e,i=24){const s=[],o=[];return this.drops.forEach((r,n)=>{const h=r.position.x-t,c=r.position.y-e;h*h+c*c<i*i&&(s.push(r),o.push(n))}),o.forEach(r=>this.drops.delete(r)),s}getDrops(){return Array.from(this.drops.values())}clear(){this.drops.clear()}}class E{constructor(t){a(this,"id");a(this,"name");a(this,"position");a(this,"type");a(this,"dialogue");a(this,"animTime",0);this.id=t.id,this.name=t.name,this.position=t.position,this.type=t.type,this.dialogue=t.dialogue||["Hello there!"]}update(t){this.animTime+=t}getAnimOffset(){return Math.sin(this.animTime*2)*1}isNearPlayer(t,e=48){const i=this.position.x-t.x,s=this.position.y-t.y;return i*i+s*s<e*e}}class Q{constructor(){a(this,"items",[]);a(this,"isOpen",!1);this.initializeShopItems()}initializeShopItems(){this.items=[{id:"seeds",name:"Carrot Seeds",buyPrice:10,sellPrice:5,quantity:-1},{id:"carrot",name:"Carrot",buyPrice:30,sellPrice:15,quantity:0}]}open(){this.isOpen=!0}close(){this.isOpen=!1}isShopOpen(){return this.isOpen}getItems(){return this.items}canBuyItem(t,e){const i=this.items.find(s=>s.id===t);return!i||t==="carrot"?!1:e>=i.buyPrice}buyItem(t){const e=this.items.find(i=>i.id===t);return!e||t==="carrot"?0:e.buyPrice}sellItem(t,e=1){const i=this.items.find(s=>s.id===t);return i?i.sellPrice*e:0}}class Y{constructor(){a(this,"audioContext");a(this,"masterGain");a(this,"sounds",new Map);a(this,"musicGain");a(this,"currentMusic",null);a(this,"musicBuffer",null);a(this,"musicStatus","Not loaded");a(this,"musicPlaying",!1);this.audioContext=new(window.AudioContext||window.webkitAudioContext),this.masterGain=this.audioContext.createGain(),this.masterGain.gain.value=.3,this.masterGain.connect(this.audioContext.destination),this.musicGain=this.audioContext.createGain(),this.musicGain.gain.value=.2,this.musicGain.connect(this.masterGain),this.generateSounds()}generateSounds(){this.sounds.set("footstep1",this.generateFootstep(.1)),this.sounds.set("footstep2",this.generateFootstep(.15)),this.sounds.set("footstep3",this.generateFootstep(.12)),this.sounds.set("hoe",this.generateHoeSound()),this.sounds.set("axe",this.generateAxeSound()),this.sounds.set("scythe",this.generateScytheSound()),this.sounds.set("watering",this.generateWateringSound()),this.sounds.set("plant",this.generatePlantSound()),this.sounds.set("pickup",this.generatePickupSound()),this.sounds.set("coin",this.generateCoinSound()),this.sounds.set("uiOpen",this.generateUIOpenSound()),this.sounds.set("uiClose",this.generateUICloseSound()),this.sounds.set("purchase",this.generatePurchaseSound())}generateFootstep(t){const e=this.audioContext.sampleRate,s=this.audioContext.createBuffer(1,e*.1,e),o=s.getChannelData(0);for(let r=0;r<o.length;r++){const n=r/e,h=Math.sin(2*Math.PI*(50+t*100)*n)*Math.exp(-n*30),c=(Math.random()-.5)*.1*Math.exp(-n*40);o[r]=(h+c)*.3}return s}generateHoeSound(){const t=this.audioContext.sampleRate,i=this.audioContext.createBuffer(1,t*.2,t),s=i.getChannelData(0);for(let o=0;o<s.length;o++){const r=o/t,n=Math.sin(2*Math.PI*80*r)*Math.exp(-r*15),h=(Math.random()-.5)*.3*Math.exp(-r*10)*Math.sin(2*Math.PI*200*r);s[o]=(n+h)*.4}return i}generateAxeSound(){const t=this.audioContext.sampleRate,i=this.audioContext.createBuffer(1,t*.3,t),s=i.getChannelData(0);for(let o=0;o<s.length;o++){const r=o/t,n=Math.sin(2*Math.PI*150*r)*Math.exp(-r*20),h=Math.sin(2*Math.PI*300*r)*Math.exp(-r*8)*.5,c=(Math.random()-.5)*Math.exp(-r*50);s[o]=(n+h+c)*.6}return i}generateScytheSound(){const t=this.audioContext.sampleRate,i=this.audioContext.createBuffer(1,t*.25,t),s=i.getChannelData(0);for(let o=0;o<s.length;o++){const r=o/t,n=Math.sin(2*Math.PI*400*r*(1+r))*Math.exp(-r*10),h=(Math.random()-.5)*.2*Math.exp(-r*20);s[o]=(n+h)*.3}return i}generateWateringSound(){const t=this.audioContext.sampleRate,e=.8,i=this.audioContext.createBuffer(1,t*e,t),s=i.getChannelData(0);for(let o=0;o<s.length;o++){const r=o/t,n=(Math.random()-.5)*.3,h=Math.sin(2*Math.PI*50*r)*Math.sin(2*Math.PI*3*r),c=Math.sin(Math.PI*r/e);s[o]=(n+h*.2)*c*.3}return i}generatePlantSound(){const t=this.audioContext.sampleRate,i=this.audioContext.createBuffer(1,t*.15,t),s=i.getChannelData(0);for(let o=0;o<s.length;o++){const r=o/t,n=Math.sin(2*Math.PI*100*r)*Math.exp(-r*25),h=(Math.random()-.5)*.1*Math.exp(-r*30);s[o]=(n+h)*.25}return i}generatePickupSound(){const t=this.audioContext.sampleRate,i=this.audioContext.createBuffer(1,t*.2,t),s=i.getChannelData(0);for(let o=0;o<s.length;o++){const r=o/t,n=Math.sin(2*Math.PI*600*r)*Math.exp(-r*8),h=Math.sin(2*Math.PI*800*r)*Math.exp(-r*10)*(r>.05?1:0);s[o]=(n+h)*.3}return i}generateCoinSound(){const t=this.audioContext.sampleRate,i=this.audioContext.createBuffer(1,t*.3,t),s=i.getChannelData(0);for(let o=0;o<s.length;o++){const r=o/t,n=Math.sin(2*Math.PI*1200*r)*Math.exp(-r*5),h=Math.sin(2*Math.PI*1800*r)*Math.exp(-r*7)*.5;s[o]=(n+h)*.4}return i}generateUIOpenSound(){const t=this.audioContext.sampleRate,i=this.audioContext.createBuffer(1,t*.2,t),s=i.getChannelData(0);for(let o=0;o<s.length;o++){const r=o/t,n=Math.sin(2*Math.PI*(200+r*800)*r)*Math.exp(-r*5);s[o]=n*.3}return i}generateUICloseSound(){const t=this.audioContext.sampleRate,i=this.audioContext.createBuffer(1,t*.2,t),s=i.getChannelData(0);for(let o=0;o<s.length;o++){const r=o/t,n=Math.sin(2*Math.PI*(800-r*600)*r)*Math.exp(-r*5);s[o]=n*.3}return i}generatePurchaseSound(){const t=this.audioContext.sampleRate,i=this.audioContext.createBuffer(1,t*.4,t),s=i.getChannelData(0);for(let o=0;o<s.length;o++){const r=o/t,n=Math.sin(2*Math.PI*800*r)*Math.exp(-r*4)*(r<.1?1:0),h=Math.sin(2*Math.PI*1e3*r)*Math.exp(-(r-.1)*4)*(r>.1?1:0);s[o]=(n+h)*.4}return i}playSound(t,e=1,i=1){const s=this.sounds.get(t);if(!s){console.warn(`Sound "${t}" not found`);return}this.audioContext.state==="suspended"&&this.audioContext.resume();const o=this.audioContext.createBufferSource();o.buffer=s;const r=this.audioContext.createGain();r.gain.value=e,o.connect(r),r.connect(this.masterGain),o.playbackRate.value=i,o.start()}playFootstep(){const t=Math.floor(Math.random()*3)+1,e=.9+Math.random()*.2;this.playSound(`footstep${t}`,.3,e)}setMasterVolume(t){this.masterGain.gain.value=Math.max(0,Math.min(1,t))}async loadMusic(t){try{this.musicStatus="Loading...";const i=await(await fetch(t)).arrayBuffer();this.musicBuffer=await this.audioContext.decodeAudioData(i),this.musicStatus="Loaded (Click to play)",console.log("Music loaded successfully")}catch(e){this.musicStatus="Load failed: "+e,console.error("Failed to load music:",e)}}playMusic(t=!0){if(!this.musicBuffer){console.warn("No music loaded"),this.musicStatus="No music buffer";return}this.stopMusic(),this.audioContext.state==="suspended"&&this.audioContext.resume(),this.currentMusic=this.audioContext.createBufferSource(),this.currentMusic.buffer=this.musicBuffer,this.currentMusic.loop=t,this.currentMusic.connect(this.musicGain),this.currentMusic.start(),this.musicPlaying=!0,this.musicStatus="Playing",console.log("Music started playing")}stopMusic(){this.currentMusic&&(this.currentMusic.stop(),this.currentMusic.disconnect(),this.currentMusic=null,this.musicPlaying=!1,this.musicStatus="Stopped")}getMusicStatus(){return this.musicStatus}getAudioContextState(){return this.audioContext.state}setMusicVolume(t){this.musicGain.gain.value=Math.max(0,Math.min(1,t))}}class V{constructor(){a(this,"grid");a(this,"hotbar");a(this,"gridSize",{rows:6,cols:6});a(this,"hotbarSize",6);a(this,"isOpen",!1);a(this,"selectedHotbarSlot",0);a(this,"draggedItem",null);a(this,"draggedFromSlot",null);this.grid=[];for(let t=0;t<this.gridSize.rows;t++){this.grid[t]=[];for(let e=0;e<this.gridSize.cols;e++)this.grid[t][e]={item:null,row:t,col:e}}this.hotbar=[];for(let t=0;t<this.hotbarSize;t++)this.hotbar[t]={item:null,row:-1,col:t};this.initializeStartingItems()}initializeStartingItems(){this.hotbar[0].item={id:"hoe",name:"Hoe",icon:"⛏️",quantity:1,stackable:!1,type:"tool",toolType:"hoe"},this.hotbar[1].item={id:"axe",name:"Axe",icon:"🪓",quantity:1,stackable:!1,type:"tool",toolType:"axe"},this.hotbar[2].item={id:"watering_can",name:"Watering Can",icon:"💧",quantity:1,stackable:!1,type:"tool",toolType:"wateringCan"},this.hotbar[3].item={id:"scythe",name:"Scythe",icon:"🌾",quantity:1,stackable:!1,type:"tool",toolType:"scythe"},this.hotbar[4].item={id:"carrot_seeds",name:"Carrot Seeds",icon:"🥕",quantity:10,stackable:!0,type:"seed",toolType:"seeds"}}addItem(t){if(t.stackable){for(const e of this.hotbar)if(e.item&&e.item.id===t.id)return e.item.quantity+=t.quantity,!0;for(let e=0;e<this.gridSize.rows;e++)for(let i=0;i<this.gridSize.cols;i++){const s=this.grid[e][i];if(s.item&&s.item.id===t.id)return s.item.quantity+=t.quantity,!0}}for(let e=0;e<this.gridSize.rows;e++)for(let i=0;i<this.gridSize.cols;i++)if(!this.grid[e][i].item)return this.grid[e][i].item={...t},!0;return!1}removeItem(t,e){for(const i of this.hotbar)if(i.item&&i.item.id===t&&i.item.quantity>=e)return i.item.quantity-=e,i.item.quantity===0&&(i.item=null),!0;for(let i=0;i<this.gridSize.rows;i++)for(let s=0;s<this.gridSize.cols;s++){const o=this.grid[i][s];if(o.item&&o.item.id===t&&o.item.quantity>=e)return o.item.quantity-=e,o.item.quantity===0&&(o.item=null),!0}return!1}getItemCount(t){let e=0;for(const i of this.hotbar)i.item&&i.item.id===t&&(e+=i.item.quantity);for(let i=0;i<this.gridSize.rows;i++)for(let s=0;s<this.gridSize.cols;s++){const o=this.grid[i][s];o.item&&o.item.id===t&&(e+=o.item.quantity)}return e}startDragging(t,e,i){const s=i?this.hotbar[e]:this.grid[t][e];s.item&&(this.draggedItem={...s.item},this.draggedFromSlot={row:t,col:e,isHotbar:i},s.item=null)}dropItem(t,e,i){if(!this.draggedItem||!this.draggedFromSlot)return;const s=i?this.hotbar[e]:this.grid[t][e],o=this.draggedFromSlot.isHotbar?this.hotbar[this.draggedFromSlot.col]:this.grid[this.draggedFromSlot.row][this.draggedFromSlot.col];s.item&&(o.item=s.item),s.item=this.draggedItem,this.draggedItem=null,this.draggedFromSlot=null}cancelDragging(){if(this.draggedItem&&this.draggedFromSlot){const t=this.draggedFromSlot.isHotbar?this.hotbar[this.draggedFromSlot.col]:this.grid[this.draggedFromSlot.row][this.draggedFromSlot.col];t.item=this.draggedItem}this.draggedItem=null,this.draggedFromSlot=null}toggleInventory(){this.isOpen=!this.isOpen,this.isOpen||this.cancelDragging()}isInventoryOpen(){return this.isOpen}selectHotbarSlot(t){t>=0&&t<this.hotbarSize&&(this.selectedHotbarSlot=t)}getSelectedHotbarItem(){return this.hotbar[this.selectedHotbarSlot].item}getGrid(){return this.grid}getHotbar(){return this.hotbar}getSelectedHotbarIndex(){return this.selectedHotbarSlot}getDraggedItem(){return this.draggedItem}getGridSize(){return this.gridSize}quickTransfer(t,e,i){const s=i?this.hotbar[e]:this.grid[t][e];if(s.item)if(i){for(let o=0;o<this.gridSize.rows;o++)for(let r=0;r<this.gridSize.cols;r++){const n=this.grid[o][r];if(s.item.stackable&&n.item&&n.item.id===s.item.id){n.item.quantity+=s.item.quantity,s.item=null;return}}for(let o=0;o<this.gridSize.rows;o++)for(let r=0;r<this.gridSize.cols;r++)if(!this.grid[o][r].item){this.grid[o][r].item=s.item,s.item=null;return}}else{for(let o=0;o<this.hotbarSize;o++){const r=this.hotbar[o];if(s.item.stackable&&r.item&&r.item.id===s.item.id){r.item.quantity+=s.item.quantity,s.item=null;return}}for(let o=0;o<this.hotbarSize;o++)if(!this.hotbar[o].item){this.hotbar[o].item=s.item,s.item=null;return}}}}class j{constructor(t){a(this,"container",null);a(this,"hotbarContainer",null);a(this,"inventorySystem");a(this,"mousePos",{x:0,y:0});a(this,"hoveredSlot",null);a(this,"handledKeys",new Set);a(this,"tooltip",null);a(this,"keyHandler",null);a(this,"keyupHandler",null);this.inventorySystem=t,this.createHotbar(),this.createTooltip(),this.setupMouseTracking()}setupMouseTracking(){document.addEventListener("mousemove",t=>{this.mousePos={x:t.clientX,y:t.clientY},this.updateDraggedItem(),this.updateTooltip()})}createTooltip(){this.tooltip=document.createElement("div"),this.tooltip.style.cssText=`
      position: fixed;
      background: rgba(0, 0, 0, 0.9);
      color: white;
      padding: 8px 12px;
      border-radius: 6px;
      font-size: 14px;
      pointer-events: none;
      z-index: 3000;
      display: none;
      border: 1px solid #555;
      box-shadow: 0 2px 8px rgba(0, 0, 0, 0.5);
      font-family: Arial, sans-serif;
    `,document.body.appendChild(this.tooltip)}updateTooltip(){if(this.tooltip)if(this.hoveredSlot&&!this.inventorySystem.getDraggedItem()){const t=this.hoveredSlot.isHotbar?this.inventorySystem.getHotbar()[this.hoveredSlot.col]:this.inventorySystem.getGrid()[this.hoveredSlot.row][this.hoveredSlot.col];if(t.item){this.tooltip.style.display="block",this.tooltip.innerHTML=`
          <div style="font-weight: bold; margin-bottom: 4px;">${t.item.name}</div>
          ${t.item.quantity>1?`<div style="color: #AAA; font-size: 12px;">Quantity: ${t.item.quantity}</div>`:""}
          ${t.item.type==="tool"?'<div style="color: #FFD700; font-size: 12px;">Tool</div>':""}
          ${t.item.type==="seed"?'<div style="color: #90EE90; font-size: 12px;">Seed - Can be planted</div>':""}
          ${t.item.type==="crop"?'<div style="color: #FFA500; font-size: 12px;">Crop - Can be sold</div>':""}
          ${t.item.type==="resource"?'<div style="color: #8B7355; font-size: 12px;">Resource</div>':""}
        `;const e=this.tooltip.getBoundingClientRect();let i=this.mousePos.x+15,s=this.mousePos.y+15;i+e.width>window.innerWidth&&(i=this.mousePos.x-e.width-15),s+e.height>window.innerHeight&&(s=this.mousePos.y-e.height-15),this.tooltip.style.left=`${i}px`,this.tooltip.style.top=`${s}px`}else this.tooltip.style.display="none"}else this.tooltip.style.display="none"}createHotbar(){this.hotbarContainer=document.createElement("div"),this.hotbarContainer.id="hotbar",this.hotbarContainer.style.cssText=`
      position: fixed;
      bottom: 20px;
      left: 50%;
      transform: translateX(-50%);
      display: flex;
      gap: 4px;
      background: rgba(0, 0, 0, 0.7);
      padding: 8px;
      border-radius: 8px;
      border: 2px solid #444;
      z-index: 100;
    `,document.body.appendChild(this.hotbarContainer),this.updateHotbar()}updateHotbar(){if(!this.hotbarContainer)return;this.hotbarContainer.innerHTML="";const t=this.inventorySystem.getHotbar(),e=this.inventorySystem.getSelectedHotbarIndex();t.forEach((i,s)=>{const o=this.createSlotElement(i,!0,s);s===e&&(o.style.border="2px solid #FFD700",o.style.boxShadow="0 0 10px #FFD700");const r=document.createElement("div");r.style.cssText=`
        position: absolute;
        top: 2px;
        left: 2px;
        font-size: 10px;
        color: #AAA;
        text-shadow: 1px 1px 2px black;
      `,r.textContent=(s+1).toString(),o.appendChild(r),this.hotbarContainer.appendChild(o)})}showInventory(){if(this.container)return;this.container=document.createElement("div"),this.container.id="inventory",this.container.style.cssText=`
      position: fixed;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
      background: rgba(0, 0, 0, 0.9);
      border: 3px solid #444;
      border-radius: 10px;
      padding: 20px;
      z-index: 1000;
      box-shadow: 0 0 20px rgba(0, 0, 0, 0.8);
      width: 360px;
      display: flex;
      flex-direction: column;
      min-height: 480px;
    `,this.setupHotbarAssignment();const t=document.createElement("h2");t.textContent="Inventory",t.style.cssText=`
      color: white;
      text-align: center;
      margin: 0 0 20px 0;
      font-size: 24px;
    `,this.container.appendChild(t);const e=document.createElement("div");e.style.cssText=`
      display: grid;
      grid-template-columns: repeat(6, 50px);
      gap: 4px;
      margin-bottom: 30px;
      width: fit-content;
      justify-self: center;
      align-self: center;
    `;const i=this.inventorySystem.getGrid();for(let r=0;r<6;r++)for(let n=0;n<6;n++){const h=i[r][n],c=this.createSlotElement(h,!1,n,r);e.appendChild(c)}this.container.appendChild(e);const s=document.createElement("p");s.textContent="Press E to close",s.style.cssText=`
      color: #AAA;
      text-align: center;
      margin: 10px 0 0 0;
      font-size: 14px;
    `,this.container.appendChild(s),document.body.appendChild(this.container);const o=document.createElement("div");o.id="dragged-item",o.style.cssText=`
      position: fixed;
      pointer-events: none;
      z-index: 2000;
      display: none;
    `,document.body.appendChild(o)}hideInventory(){this.container&&(this.container.remove(),this.container=null);const t=document.getElementById("dragged-item");t&&t.remove(),this.removeHotbarAssignment()}createSlotElement(t,e,i,s=-1){const o=document.createElement("div");return o.style.cssText=`
      width: 50px;
      height: 50px;
      background: rgba(50, 50, 50, 0.8);
      border: 2px solid #666;
      border-radius: 4px;
      position: relative;
      cursor: pointer;
      display: flex;
      align-items: center;
      justify-content: center;
      font-size: 24px;
      user-select: none;
    `,t.item&&(o.innerHTML=`
        <span style="font-size: 28px;">${t.item.icon}</span>
        ${t.item.quantity>1?`<span style="
          position: absolute;
          bottom: 2px;
          right: 2px;
          font-size: 12px;
          color: white;
          text-shadow: 1px 1px 2px black;
          background: rgba(0, 0, 0, 0.5);
          padding: 0 3px;
          border-radius: 3px;
        ">${t.item.quantity}</span>`:""}
      `),o.addEventListener("mousedown",r=>{if(r.preventDefault(),e&&!this.inventorySystem.isInventoryOpen()){this.inventorySystem.selectHotbarSlot(i),this.updateHotbar();return}if(r.shiftKey&&t.item&&this.inventorySystem.isInventoryOpen()){this.inventorySystem.quickTransfer(s,i,e),this.updateDisplay();return}t.item&&(this.inventorySystem.startDragging(s,i,e),this.updateDisplay())}),o.addEventListener("mouseup",r=>{r.preventDefault(),this.inventorySystem.isInventoryOpen()&&this.inventorySystem.getDraggedItem()&&(this.inventorySystem.dropItem(s,i,e),this.updateDisplay())}),o.addEventListener("mouseenter",()=>{o.style.background="rgba(80, 80, 80, 0.8)",this.hoveredSlot={row:s,col:i,isHotbar:e}}),o.addEventListener("mouseleave",()=>{o.style.background="rgba(50, 50, 50, 0.8)",this.hoveredSlot=null}),o}updateDraggedItem(){const t=document.getElementById("dragged-item");if(!t)return;const e=this.inventorySystem.getDraggedItem();e?(t.style.display="block",t.style.left=`${this.mousePos.x-25}px`,t.style.top=`${this.mousePos.y-25}px`,t.innerHTML=`
        <div style="
          width: 50px;
          height: 50px;
          background: rgba(50, 50, 50, 0.9);
          border: 2px solid #888;
          border-radius: 4px;
          display: flex;
          align-items: center;
          justify-content: center;
          font-size: 28px;
          opacity: 0.8;
        ">
          ${e.icon}
          ${e.quantity>1?`<span style="
            position: absolute;
            bottom: 2px;
            right: 2px;
            font-size: 12px;
            color: white;
            text-shadow: 1px 1px 2px black;
          ">${e.quantity}</span>`:""}
        </div>
      `):t.style.display="none"}updateDisplay(){this.updateHotbar(),this.container&&this.refreshInventoryGrid(),this.updateDraggedItem()}refreshInventoryGrid(){if(!this.container)return;const t=this.container.querySelector('div[style*="grid-template-columns"]');if(!t)return;t.innerHTML="";const e=this.inventorySystem.getGrid();for(let i=0;i<6;i++)for(let s=0;s<6;s++){const o=e[i][s],r=this.createSlotElement(o,!1,s,i);t.appendChild(r)}}cleanup(){this.container&&this.container.remove(),this.hotbarContainer&&this.hotbarContainer.remove(),this.tooltip&&this.tooltip.remove(),this.removeHotbarAssignment()}isKeyHandled(t){return this.handledKeys.has(t)}setupHotbarAssignment(){this.keyHandler=t=>{const e=t.key;if(e>="1"&&e<="6"&&this.hoveredSlot&&this.inventorySystem.isInventoryOpen()){t.preventDefault(),t.stopPropagation(),t.stopImmediatePropagation(),this.handledKeys.add(t.code);const i=parseInt(e)-1;this.quickAssignToHotbar(i)}},this.keyupHandler=t=>{this.handledKeys.delete(t.code)},document.addEventListener("keydown",this.keyHandler,!0),document.addEventListener("keyup",this.keyupHandler,!0)}removeHotbarAssignment(){this.keyHandler&&(document.removeEventListener("keydown",this.keyHandler,!0),this.keyHandler=null),this.keyupHandler&&(document.removeEventListener("keyup",this.keyupHandler,!0),this.keyupHandler=null),this.handledKeys.clear()}quickAssignToHotbar(t){if(!this.hoveredSlot)return;const e=this.hoveredSlot.isHotbar?this.inventorySystem.getHotbar()[this.hoveredSlot.col]:this.inventorySystem.getGrid()[this.hoveredSlot.row][this.hoveredSlot.col],i=this.inventorySystem.getHotbar()[t];if(e.item){const s=i.item;if(i.item=e.item,e.item=s,this.updateHotbar(),this.container&&!this.hoveredSlot.isHotbar){const o=this.container.querySelector('div[style*="grid-template-columns"]');if(o){const r=this.hoveredSlot.row*6+this.hoveredSlot.col,n=o.children[r];if(n){const h=this.createSlotElement(e,!1,this.hoveredSlot.col,this.hoveredSlot.row);o.replaceChild(h,n)}}}}}}class Z{constructor(t,e){a(this,"position");a(this,"actions");a(this,"opacity",1);a(this,"targetOpacity",1);this.position=t,this.actions=e}show(){this.targetOpacity=1}hide(){this.targetOpacity=0}update(t){this.opacity<this.targetOpacity?this.opacity=Math.min(this.opacity+5*t,this.targetOpacity):this.opacity>this.targetOpacity&&(this.opacity=Math.max(this.opacity-5*t,this.targetOpacity))}isVisible(){return this.opacity>.01}}class J{constructor(){a(this,"interactables",new Map);a(this,"currentIndicator",null)}registerInteractable(t,e){this.interactables.set(t,e)}unregisterInteractable(t){this.interactables.delete(t)}update(t,e,i){let s=null,o=[];for(const[r,n]of this.interactables)if(n.canInteract(t,e)){const h=n.getAvailableActions();if(h.length>0){s=n,o=h;break}}s&&o.length>0?((!this.currentIndicator||this.currentIndicator.position.x!==s.position.x||this.currentIndicator.position.y!==s.position.y)&&(this.currentIndicator=new Z(s.position,o)),this.currentIndicator.show()):this.currentIndicator&&this.currentIndicator.hide(),this.currentIndicator&&(this.currentIndicator.update(i),!this.currentIndicator.isVisible()&&this.currentIndicator.targetOpacity===0&&(this.currentIndicator=null))}getCurrentIndicator(){return this.currentIndicator}handleKeyPress(t){if(!this.currentIndicator||!this.currentIndicator.isVisible())return!1;for(const[e,i]of this.interactables)if(i.canInteract(this.currentIndicator.position,"")){const o=i.getAvailableActions().find(r=>r.keyCode===t);if(o)return i.performAction(o.id),!0}return!1}}class B{constructor(t,e,i,s){a(this,"npc");a(this,"shop");a(this,"blacksmith");a(this,"game");a(this,"onInteract");this.npc=t,this.game=e,this.shop=i,this.blacksmith=s}get position(){return this.npc.position}getAvailableActions(){const t=[];return t.push({id:"talk",name:"Talk",key:"E",keyCode:k.E,icon:"💬"}),this.npc.type==="shopkeeper"&&this.shop&&t.push({id:"shop",name:"Shop",key:"F",keyCode:k.F,icon:"🛍️"}),this.npc.type==="blacksmith"&&this.blacksmith&&t.push({id:"blacksmith",name:"Forge",key:"F",keyCode:k.F,icon:"🔨"}),t}canInteract(t,e){const s=this.npc.position.x-t.x,o=this.npc.position.y-t.y;if(s*s+o*o>48*48)return!1;const n=Math.atan2(o,s),h=this.getFacingAngle(e);return Math.abs(this.normalizeAngle(n-h))<Math.PI/2}performAction(t){switch(t){case"talk":console.log(`${this.npc.name}: ${this.npc.dialogue[0]}`);break;case"shop":this.shop&&(this.shop.isShopOpen()?this.shop.close():this.shop.open());break;case"blacksmith":this.blacksmith&&(this.blacksmith.isBlacksmithOpen()?this.blacksmith.close():this.blacksmith.open());break}}getFacingAngle(t){switch(t){case"up":return-Math.PI/2;case"down":return Math.PI/2;case"left":return Math.PI;case"right":return 0;default:return 0}}normalizeAngle(t){for(;t>Math.PI;)t-=2*Math.PI;for(;t<-Math.PI;)t+=2*Math.PI;return t}}class tt{constructor(t){a(this,"renderer");a(this,"keyTextures",new Map);a(this,"whiteTexture");this.renderer=t,this.whiteTexture=this.generateWhiteTexture(),this.generateKeyTextures()}generateWhiteTexture(){const t=this.renderer.getGL(),e=document.createElement("canvas");e.width=1,e.height=1;const i=e.getContext("2d");i.fillStyle="white",i.fillRect(0,0,1,1);const s=i.getImageData(0,0,1,1);return y.fromImageData(t,s)}generateKeyTextures(){["E","F","C"].forEach(e=>{this.keyTextures.set(e,this.generateKeyBadgeTexture(e))})}generateKeyBadgeTexture(t){const e=this.renderer.getGL(),i=20,s=document.createElement("canvas");s.width=i,s.height=i;const o=s.getContext("2d");o.clearRect(0,0,i,i),o.fillStyle="rgba(0, 0, 0, 0.7)",o.beginPath(),o.arc(i/2,i/2,i/2-1,0,Math.PI*2),o.fill(),o.strokeStyle="rgba(255, 255, 255, 0.9)",o.lineWidth=1.5,o.beginPath(),o.arc(i/2,i/2,i/2-2,0,Math.PI*2),o.stroke(),o.fillStyle="#ffffff",o.font="bold 12px Arial",o.textAlign="center",o.textBaseline="middle",o.fillText(t,i/2,i/2);const r=o.getImageData(0,0,i,i);return y.fromImageData(e,r)}renderTileActions(t,e){e.forEach(i=>{const s=this.keyTextures.get(i.key==="Click"?"C":i.key);s&&(t.flush(),s.bind(0),t.drawTexturedQuad(i.position.x+10,i.position.y+-10,20,20))})}dispose(){for(const[t,e]of this.keyTextures)e.dispose();this.keyTextures.clear(),this.whiteTexture.dispose()}}class et{constructor(){a(this,"items",[]);a(this,"isOpen",!1);this.initializeBlacksmithItems()}initializeBlacksmithItems(){this.items=[{id:"wood",name:"Wood",buyPrice:0,sellPrice:5,quantity:0},{id:"iron_ingot",name:"Iron Ingot",buyPrice:25,sellPrice:0,quantity:-1},{id:"gold_ingot",name:"Gold Ingot",buyPrice:100,sellPrice:0,quantity:-1}]}open(){this.isOpen=!0}close(){this.isOpen=!1}isBlacksmithOpen(){return this.isOpen}getItems(){return this.items}canBuyItem(t,e){const i=this.items.find(s=>s.id===t);return!i||t==="wood"?!1:e>=i.buyPrice}buyItem(t){const e=this.items.find(i=>i.id===t);return!e||t==="wood"?0:e.buyPrice}sellItem(t,e=1){const i=this.items.find(s=>s.id===t);return i?i.sellPrice*e:0}}class it{constructor(t){a(this,"canvas");a(this,"renderer");a(this,"spriteBatch");a(this,"camera");a(this,"input");a(this,"tileMap");a(this,"player");a(this,"itemDropManager");a(this,"shopkeeper");a(this,"shop");a(this,"blacksmithNPC");a(this,"blacksmith");a(this,"textures",new Map);a(this,"whiteTexture");a(this,"lastTime",0);a(this,"frameCount",0);a(this,"fpsTime",0);a(this,"debugLogTime",0);a(this,"shopToggled",!1);a(this,"mouseWorldPos",new v(0,0));a(this,"hoveredTile",null);a(this,"audioSystem");a(this,"lastFootstepTime",0);a(this,"footstepInterval",.3);a(this,"inventorySystem");a(this,"inventoryUI");a(this,"actionSystem");a(this,"tileActionRenderer");a(this,"currentTileActions",[]);a(this,"gameLoop",()=>{const t=performance.now(),e=(t-this.lastTime)/1e3;this.lastTime=t,this.update(e),this.render(),this.updateFPS(t),requestAnimationFrame(this.gameLoop)});this.canvas=t,this.setupCanvas(),this.renderer=new L(t),this.spriteBatch=new O(this.renderer.getGL()),this.camera=new G(t.width,t.height),this.input=new q(t),this.tileMap=new N(50,50,32);const e=this.findSafeSpawnPosition();this.player=new X(e.x,e.y),this.itemDropManager=new K;const i=this.findSafePositionNear(e.x,e.y,200);this.shopkeeper=new E({id:"shopkeeper",name:"Emma",position:i,type:"shopkeeper",dialogue:["Welcome to Emma's Seeds & Produce!","I buy fresh carrots and sell quality seeds.","Press F to open the shop!"]}),this.shop=new Q;const s=this.findSafePositionNear(e.x+300,e.y,200);this.blacksmithNPC=new E({id:"blacksmith",name:"Bjorn",position:s,type:"blacksmith",dialogue:["Welcome to Bjorn's Forge!","I buy wood and sell fine metal ingots.","Press F to trade!"]}),this.blacksmith=new et,this.audioSystem=new Y,this.inventorySystem=new V,this.inventoryUI=new j(this.inventorySystem),this.actionSystem=new J,this.tileActionRenderer=new tt(this.renderer);const o=new B(this.shopkeeper,this,this.shop);this.actionSystem.registerInteractable("shopkeeper",o);const r=new B(this.blacksmithNPC,this,void 0,this.blacksmith);this.actionSystem.registerInteractable("blacksmith",r),this.setupEventListeners(),this.init(),window.gameInstance=this}findSafeSpawnPosition(){const t=this.tileMap.getTileSize(),e=this.tileMap.getWidth(),i=this.tileMap.getHeight(),s=Math.floor(e/2),o=Math.floor(i/2);for(let r=0;r<Math.max(e,i)/2;r++)for(let n=-r;n<=r;n++)for(let h=-r;h<=r;h++){if(Math.abs(n)!==r&&Math.abs(h)!==r)continue;const c=s+n,u=o+h;if(c>=0&&c<e&&u>=0&&u<i){const d=this.tileMap.getTileAt(c,u);if(d&&(d.type===S.Grass||d.type===S.Dirt)&&!d.solid)return new v(c*t+t/2,u*t+t/2)}}return console.warn("No safe spawn position found, using center"),new v(e*t/2,i*t/2)}findSafePositionNear(t,e,i){const s=this.tileMap.getTileSize(),o=Math.floor(t/s),r=Math.floor(e/s),n=Math.ceil(i/s);for(let h=1;h<=n;h++)for(let c=-h;c<=h;c++)for(let u=-h;u<=h;u++){if(Math.abs(c)!==h&&Math.abs(u)!==h)continue;const d=o+c,f=r+u;if(d>=0&&d<this.tileMap.getWidth()&&f>=0&&f<this.tileMap.getHeight()){const l=this.tileMap.getTileAt(d,f);if(l&&(l.type===S.Grass||l.type===S.Dirt)&&!l.solid)return new v(d*s+s/2,f*s+s/2)}}return console.warn("No safe position found near",t,e),new v(t,e)}handleShopBuy(){console.log("Shop buy button clicked!"),this.player.getMoney()>=10&&(this.player.spendMoney(10),this.inventorySystem.addItem({id:"carrot_seeds",name:"Carrot Seeds",icon:"🥕",quantity:5,stackable:!0,type:"seed",toolType:"seeds"}),this.inventoryUI.updateHotbar(),this.updateShopUI(),this.audioSystem.playSound("pickup",.4))}handleShopSell(){console.log("Shop sell button clicked!"),this.inventorySystem.getItemCount("carrot")>0&&(this.inventorySystem.removeItem("carrot",1),this.player.addMoney(15),this.inventoryUI.updateHotbar(),this.updateShopUI(),this.audioSystem.playSound("pickup",.5))}handleBlacksmithSellWood(){console.log("Blacksmith sell wood clicked!"),this.inventorySystem.getItemCount("wood")>0&&(this.inventorySystem.removeItem("wood",1),this.player.addMoney(5),this.inventoryUI.updateHotbar(),this.updateBlacksmithUI(),this.audioSystem.playSound("pickup",.4))}handleBlacksmithBuyIron(){console.log("Blacksmith buy iron clicked!"),this.player.getMoney()>=25&&(this.player.spendMoney(25),this.inventorySystem.addItem({id:"iron_ingot",name:"Iron Ingot",icon:"⚙️",quantity:1,stackable:!0,type:"material"}),this.inventoryUI.updateHotbar(),this.updateBlacksmithUI(),this.audioSystem.playSound("pickup",.5))}handleBlacksmithBuyGold(){console.log("Blacksmith buy gold clicked!"),this.player.getMoney()>=100&&(this.player.spendMoney(100),this.inventorySystem.addItem({id:"gold_ingot",name:"Gold Ingot",icon:"🟨",quantity:1,stackable:!0,type:"material"}),this.inventoryUI.updateHotbar(),this.updateBlacksmithUI(),this.audioSystem.playSound("pickup",.6))}async init(){await this.loadAssets(),await this.loadAndPlayMusic(),this.start()}setupCanvas(){this.canvas.width=800,this.canvas.height=600}setupEventListeners(){window.addEventListener("resize",()=>{this.setupCanvas(),this.renderer.resize(this.canvas.width,this.canvas.height),this.camera.resize(this.canvas.width,this.canvas.height)});const t=document.getElementById("musicVolume"),e=document.getElementById("volumeValue");if(t&&e){t.addEventListener("input",s=>{const o=parseInt(s.target.value),r=o/100;this.audioSystem.setMusicVolume(r),e.textContent=`${o}%`});const i=parseInt(t.value)/100;this.audioSystem.setMusicVolume(i)}}async loadAndPlayMusic(){try{await this.audioSystem.loadMusic("/sound/Harvest Glow.wav");const t=()=>{this.audioSystem.playMusic(!0),window.removeEventListener("click",t),window.removeEventListener("keydown",t)};window.addEventListener("click",t),window.addEventListener("keydown",t),console.log("Music load initiated, waiting for user interaction...")}catch(t){console.error("Failed to load music:",t)}}async loadAssets(){const t=this.renderer.getGL();this.whiteTexture=y.createSolid(t,1,1,255,255,255);try{console.log("Loading grass texture from image...");const i=await y.load(t,"/images/grass.png");this.textures.set("grass",i),console.log("Grass texture loaded successfully")}catch(i){console.error("Failed to load grass.png, using procedural texture:",i),this.textures.set("grass",y.generateGrassTile(t))}try{console.log("Loading dirt texture from image...");const i=await y.load(t,"/images/dirt-1.png");this.textures.set("dirt",i),console.log("Dirt texture loaded successfully")}catch(i){console.error("Failed to load dirt-1.png, using procedural texture:",i),this.textures.set("dirt",y.generateDirtTile(t))}try{console.log("Loading stone texture from image...");const i=await y.load(t,"/images/stone-1.png");this.textures.set("stone",i),console.log("Stone texture loaded successfully")}catch(i){console.error("Failed to load stone-1.png, using procedural texture:",i),this.textures.set("stone",y.generateStoneTile(t))}try{console.log("Loading water texture from image...");const i=await y.load(t,"/images/water-1.png");this.textures.set("water",i),console.log("Water texture loaded successfully")}catch(i){console.error("Failed to load water-1.png, using procedural texture:",i),this.textures.set("water",y.generateWaterTile(t))}this.textures.set("tilledDirt",this.generateTilledDirtTexture()),this.textures.set("wateredDirt",this.generateWateredDirtTexture()),this.textures.set("plant_0.2",this.generatePlantTexture(.2)),this.textures.set("plant_0.5",this.generatePlantTexture(.5)),this.textures.set("plant_1.0",this.generatePlantTexture(1)),this.textures.set("item_carrot",this.generateCarrotItemTexture()),this.textures.set("item_seeds",this.generateSeedItemTexture());try{console.log("Loading wood texture from image...");const i=await y.load(t,"/images/log-1.png");this.textures.set("item_wood",i),console.log("Wood texture loaded successfully")}catch(i){console.error("Failed to load log-1.png, using procedural texture:",i),this.textures.set("item_wood",this.generateWoodItemTexture())}const e=[];for(let i=1;i<=4;i++)e.push(y.load(t,`/images/tree-${i}.png`).then(s=>{this.textures.set(`tree-${i}`,s),console.log(`Tree texture ${i} loaded successfully`)}).catch(s=>{console.error(`Failed to load tree-${i}.png:`,s)}));await Promise.all(e),this.textures.has("tree-1")||(console.log("No tree textures loaded, using procedural texture"),this.textures.set("tree",this.generateTreeTexture()));try{console.log("Loading character sprite sheet...");const i=await y.load(t,"/images/character.png");this.textures.set("character",i),console.log("Character sprite sheet loaded successfully")}catch(i){console.error("Failed to load character.png:",i)}try{console.log("Loading shopkeeper texture from image...");const i=await y.load(t,"/images/shopkeeper-1.png");this.textures.set("shopkeeper",i),console.log("Shopkeeper texture loaded successfully")}catch(i){console.error("Failed to load shopkeeper-1.png, using procedural texture:",i);const s=this.generateShopkeeperTexture();this.textures.set("shopkeeper",s)}try{console.log("Loading blacksmith texture from image...");const i=await y.load(t,"/images/blacksmithguy-1.png");this.textures.set("blacksmith",i),console.log("Blacksmith texture loaded successfully")}catch(i){console.error("Failed to load blacksmithguy-1.png, using procedural texture:",i);const s=this.generateBlacksmithTexture();this.textures.set("blacksmith",s)}try{console.log("Loading shop texture from image...");const i=await y.load(t,"/images/shop-1.png");this.textures.set("shop_stall",i),console.log("Shop texture loaded successfully")}catch(i){console.error("Failed to load shop-1.png, using procedural texture:",i),this.textures.set("shop_stall",this.generateShopStallTexture())}try{console.log("Loading blacksmith forge texture from image...");const i=await y.load(t,"/images/blacksmith-1.png");this.textures.set("forge",i),console.log("Blacksmith forge texture loaded successfully")}catch(i){console.error("Failed to load blacksmith-1.png, using procedural texture:",i),this.textures.set("forge",this.generateForgeTexture())}}generatePlayerTexture(t="down",e,i=0){const s=this.renderer.getGL(),o=32,r=document.createElement("canvas");r.width=o,r.height=o;const n=r.getContext("2d");n.save();let h=8,c=8,u=16,d=8;switch(n.fillStyle="#f39c12",n.fillRect(h,c,16,20),n.fillStyle="#fdbcb4",n.beginPath(),n.arc(u,d,6,0,Math.PI*2),n.fill(),n.fillStyle="#000",t){case"down":n.fillRect(13,8,2,2),n.fillRect(17,8,2,2);break;case"up":break;case"left":n.fillRect(12,6,2,2);break;case"right":n.fillRect(18,6,2,2);break}if(e){const l=Math.sin(i*Math.PI)*15;switch(e){case w.Hoe:n.strokeStyle="#8B4513",n.lineWidth=3,n.beginPath(),t==="right"?(n.moveTo(24,16),n.lineTo(28,16-l)):t==="left"?(n.moveTo(8,16),n.lineTo(4,16-l)):(n.moveTo(20,20),n.lineTo(24,20-l)),n.stroke();break;case w.WateringCan:n.fillStyle="#4169E1";const m=t==="right"?22:t==="left"?6:20,g=18-l*.5;n.fillRect(m,g,6,4);break;case w.Seeds:n.fillStyle="#8B4513";const x=t==="right"?24:t==="left"?4:12;n.beginPath(),n.arc(x,20,2,0,Math.PI*2),n.fill();break;case w.Scythe:n.strokeStyle="#C0C0C0",n.lineWidth=2,n.beginPath(),t==="right"?n.arc(24,16,6,-Math.PI/4-l/30,Math.PI/4-l/30):t==="left"?n.arc(8,16,6,3*Math.PI/4+l/30,5*Math.PI/4+l/30):(n.moveTo(20,20),n.lineTo(26,20-l)),n.stroke();break;case w.Axe:n.strokeStyle="#8B4513",n.lineWidth=3,n.beginPath(),t==="right"?(n.moveTo(22,16),n.lineTo(28,16-l)):t==="left"?(n.moveTo(10,16),n.lineTo(4,16-l)):(n.moveTo(20,20),n.lineTo(24,20-l)),n.stroke(),n.fillStyle="#696969",t==="right"?(n.beginPath(),n.moveTo(28,16-l),n.lineTo(32,14-l),n.lineTo(32,18-l),n.closePath(),n.fill()):t==="left"?(n.beginPath(),n.moveTo(4,16-l),n.lineTo(0,14-l),n.lineTo(0,18-l),n.closePath(),n.fill()):(n.beginPath(),n.moveTo(24,20-l),n.lineTo(22,18-l),n.lineTo(26,18-l),n.closePath(),n.fill());break}}n.restore();const f=n.getImageData(0,0,o,o);return y.fromImageData(s,f)}generateTilledDirtTexture(){const t=this.renderer.getGL(),e=32,i=document.createElement("canvas");i.width=e,i.height=e;const s=i.getContext("2d");s.fillStyle="#654321",s.fillRect(0,0,e,e),s.strokeStyle="#4a3018",s.lineWidth=2;for(let r=0;r<4;r++){const n=4+r*8;s.beginPath(),s.moveTo(2,n),s.lineTo(30,n),s.stroke()}const o=s.getImageData(0,0,e,e);return y.fromImageData(t,o)}generatePlantTexture(t=1){const e=this.renderer.getGL(),i=32,s=document.createElement("canvas");s.width=i,s.height=i;const o=s.getContext("2d");t<.3?(o.strokeStyle="#2ecc71",o.lineWidth=2,o.beginPath(),o.moveTo(16,24),o.lineTo(16,20),o.stroke(),o.fillStyle="#27ae60",o.beginPath(),o.arc(14,20,2,0,Math.PI*2),o.fill(),o.beginPath(),o.arc(18,20,2,0,Math.PI*2),o.fill()):t<.7?(o.strokeStyle="#2ecc71",o.lineWidth=2.5,o.beginPath(),o.moveTo(16,24),o.lineTo(16,16),o.stroke(),o.fillStyle="#27ae60",o.beginPath(),o.ellipse(12,16,4,6,-.3,0,Math.PI*2),o.fill(),o.beginPath(),o.ellipse(20,16,4,6,.3,0,Math.PI*2),o.fill()):(o.strokeStyle="#2ecc71",o.lineWidth=3,o.beginPath(),o.moveTo(16,24),o.lineTo(16,8),o.stroke(),o.fillStyle="#27ae60",o.beginPath(),o.ellipse(11,8,5,10,-.3,0,Math.PI*2),o.fill(),o.beginPath(),o.ellipse(21,8,5,10,.3,0,Math.PI*2),o.fill(),o.fillStyle="#ff6b35",o.beginPath(),o.ellipse(16,20,3,5,0,0,Math.PI*2),o.fill());const r=o.getImageData(0,0,i,i);return y.fromImageData(e,r)}generateWateredDirtTexture(){const t=this.renderer.getGL(),e=32,i=document.createElement("canvas");i.width=e,i.height=e;const s=i.getContext("2d");s.fillStyle="#3d2817",s.fillRect(0,0,e,e),s.strokeStyle="#2a1810",s.lineWidth=2;for(let r=0;r<4;r++){const n=4+r*8;s.beginPath(),s.moveTo(2,n),s.lineTo(30,n),s.stroke()}s.fillStyle="rgba(100, 150, 255, 0.2)",s.fillRect(0,0,e,e);const o=s.getImageData(0,0,e,e);return y.fromImageData(t,o)}generateCarrotItemTexture(){const t=this.renderer.getGL(),e=16,i=document.createElement("canvas");i.width=e,i.height=e;const s=i.getContext("2d");s.fillStyle="#ff6b35",s.beginPath(),s.moveTo(8,4),s.lineTo(11,12),s.lineTo(8,14),s.lineTo(5,12),s.closePath(),s.fill(),s.fillStyle="#27ae60",s.fillRect(6,2,1,3),s.fillRect(8,2,1,3),s.fillRect(10,2,1,3);const o=s.getImageData(0,0,e,e);return y.fromImageData(t,o)}generateSeedItemTexture(){const t=this.renderer.getGL(),e=16,i=document.createElement("canvas");i.width=e,i.height=e;const s=i.getContext("2d");s.fillStyle="#8b6914",s.fillRect(4,6,8,8),s.fillStyle="#5d460f",s.fillRect(6,8,2,2),s.fillRect(8,10,2,2),s.fillRect(7,11,2,2);const o=s.getImageData(0,0,e,e);return y.fromImageData(t,o)}generateTreeTexture(){const t=this.renderer.getGL(),e=48,i=document.createElement("canvas");i.width=e,i.height=e;const s=i.getContext("2d");s.clearRect(0,0,e,e),s.fillStyle="#654321",s.fillRect(18,30,12,18),s.strokeStyle="#4a3018",s.lineWidth=1.5,s.beginPath(),s.moveTo(21,30),s.lineTo(21,48),s.moveTo(27,30),s.lineTo(27,48),s.stroke(),s.fillStyle="#228b22",s.beginPath(),s.arc(24,18,15,0,Math.PI*2),s.fill(),s.fillStyle="#32cd32",s.beginPath(),s.arc(21,15,6,0,Math.PI*2),s.fill(),s.beginPath(),s.arc(28,16,4.5,0,Math.PI*2),s.fill(),s.fillStyle="#1f5f1f",s.beginPath(),s.arc(24,22,10,0,Math.PI),s.fill();const o=s.getImageData(0,0,e,e);return y.fromImageData(t,o)}generateWoodItemTexture(){const t=this.renderer.getGL(),e=16,i=document.createElement("canvas");i.width=e,i.height=e;const s=i.getContext("2d");s.fillStyle="#8b4513",s.fillRect(3,5,10,6),s.strokeStyle="#654321",s.lineWidth=1,s.beginPath(),s.moveTo(4,7),s.lineTo(12,7),s.moveTo(4,9),s.lineTo(12,9),s.stroke(),s.fillStyle="#654321",s.beginPath(),s.arc(3,8,2,0,Math.PI*2),s.fill(),s.beginPath(),s.arc(13,8,2,0,Math.PI*2),s.fill();const o=s.getImageData(0,0,e,e);return y.fromImageData(t,o)}generateShopkeeperTexture(){const t=this.renderer.getGL(),e=32,i=document.createElement("canvas");i.width=e,i.height=e;const s=i.getContext("2d");s.fillStyle="#8b4789",s.fillRect(8,12,16,16),s.fillStyle="#fdbcb4",s.beginPath(),s.arc(16,10,6,0,Math.PI*2),s.fill(),s.fillStyle="#f4e04d",s.beginPath(),s.arc(16,7,7,Math.PI,0),s.fill(),s.fillRect(9,7,2,8),s.fillRect(21,7,2,8),s.fillStyle="#4169E1",s.fillRect(13,9,2,2),s.fillRect(17,9,2,2),s.strokeStyle="#000",s.lineWidth=1,s.beginPath(),s.arc(16,11,2,0,Math.PI),s.stroke();const o=s.getImageData(0,0,e,e);return y.fromImageData(t,o)}generateBlacksmithTexture(){const t=this.renderer.getGL(),e=32,i=document.createElement("canvas");i.width=e,i.height=e;const s=i.getContext("2d");s.fillStyle="#654321",s.fillRect(8,12,16,16),s.fillStyle="#d2691e",s.fillRect(5,14,3,10),s.fillRect(24,14,3,10),s.fillStyle="#daa520",s.beginPath(),s.arc(16,10,6,0,Math.PI*2),s.fill(),s.fillStyle="#2f1f0f",s.beginPath(),s.arc(16,7,7,Math.PI,0),s.fill(),s.fillStyle="#2f1f0f",s.fillRect(12,12,8,4),s.fillStyle="#000",s.fillRect(13,9,2,2),s.fillRect(17,9,2,2),s.fillStyle="#696969",s.fillRect(26,16,2,6),s.fillRect(25,15,4,2);const o=s.getImageData(0,0,e,e);return y.fromImageData(t,o)}generateShopkeeperPortrait(){const e=document.createElement("canvas");e.width=256,e.height=256;const i=e.getContext("2d");i.fillStyle="#f5e6d3",i.fillRect(0,0,256,256),i.fillStyle="#f4e04d",i.fillRect(60,40,136,180),i.fillStyle="#fdbcb4",i.fillRect(108,140,40,40),i.fillStyle="#6b3568",i.fillRect(96,170,64,20),i.fillStyle="#fdbcb4",i.fillRect(88,60,80,90),i.fillStyle="#f4e04d",i.fillRect(88,40,80,30),i.fillRect(68,60,20,60),i.fillRect(168,60,20,60),i.fillStyle="#e6d541";for(let s=0;s<5;s++)i.fillRect(90+s*15,42,10,26);i.fillStyle="#ffffff",i.fillRect(100,85,20,15),i.fillRect(136,85,20,15),i.fillStyle="#4169E1",i.fillRect(105,88,12,12),i.fillRect(141,88,12,12),i.fillStyle="#000000",i.fillRect(108,91,6,6),i.fillRect(144,91,6,6),i.fillStyle="#ffffff",i.fillRect(110,92,2,2),i.fillRect(146,92,2,2),i.fillStyle="#d4c339",i.fillRect(98,78,24,3),i.fillRect(134,78,24,3),i.fillStyle="#f4a09a",i.fillRect(124,105,8,12),i.fillStyle="#ff6b6b",i.fillRect(116,125,24,8),i.fillStyle="#000000",i.fillRect(114,125,2,2),i.fillRect(140,125,2,2),i.fillStyle="#8b4789",i.fillRect(80,180,96,76),i.fillStyle="#6b3568";for(let s=0;s<3;s++)i.fillRect(90+s*30,200,20,4),i.fillRect(90+s*30,220,20,4);return i.fillStyle="#fdbcb4",i.fillRect(60,180,20,60),i.fillRect(176,180,20,60),i.fillStyle="rgba(255, 182, 193, 0.3)",i.fillRect(88,108,16,12),i.fillRect(152,108,16,12),e.toDataURL()}generateShopStallTexture(){const t=this.renderer.getGL(),e=64,i=document.createElement("canvas");i.width=e,i.height=e;const s=i.getContext("2d");s.fillStyle="#8B4513",s.fillRect(0,32,64,32),s.fillStyle="#A0522D",s.fillRect(0,32,64,4),s.fillStyle="#DC143C",s.fillRect(0,0,64,20),s.fillStyle="#FFF";for(let r=0;r<4;r++)s.fillRect(r*16+4,0,8,20);s.fillStyle="#FFD700",s.fillRect(20,22,24,8),s.fillStyle="#000",s.font="6px Arial",s.fillText("SHOP",26,28);const o=s.getImageData(0,0,e,e);return y.fromImageData(t,o)}generateForgeTexture(){const t=this.renderer.getGL(),e=64,i=document.createElement("canvas");i.width=e,i.height=e;const s=i.getContext("2d");s.fillStyle="#4a4a4a",s.fillRect(0,24,64,40),s.fillStyle="#ff4500",s.fillRect(20,32,24,20),s.fillStyle="#ff6347",s.fillRect(24,36,16,12),s.fillStyle="#ffd700",s.fillRect(28,40,8,6),s.fillStyle="#2f2f2f",s.fillRect(8,20,20,4),s.fillRect(12,16,12,4),s.fillStyle="#3a3a3a",s.fillRect(48,0,12,30),s.fillStyle="rgba(128, 128, 128, 0.6)",s.beginPath(),s.arc(54,0,8,0,Math.PI*2),s.fill(),s.beginPath(),s.arc(54,-5,6,0,Math.PI*2),s.fill();const o=s.getImageData(0,0,e,e);return y.fromImageData(t,o)}start(){console.log("Starting game with loaded textures..."),this.lastTime=performance.now(),requestAnimationFrame(this.gameLoop)}update(t){const e=this.input.getMousePosition();this.mouseWorldPos=this.camera.screenToWorld(e.x,e.y);const i=this.tileMap.getTileSize(),s=Math.floor(this.mouseWorldPos.x/i),o=Math.floor(this.mouseWorldPos.y/i),r=this.player.getPosition(),n=s*i+i/2-r.x,h=o*i+i/2-r.y,c=n*n+h*h,u=64;c<u*u&&!this.shop.isShopOpen()?this.hoveredTile=new v(s,o):this.hoveredTile=null;const d=this.input.getMovementVector(),f=this.input.isKeyDown(k.Shift);if(this.player.update(t,d,this.tileMap,f),d.length()>0&&!this.player.isAnimatingTool()){this.lastFootstepTime+=t;const l=f?this.footstepInterval*.6:this.footstepInterval;this.lastFootstepTime>=l&&(this.audioSystem.playFootstep(),this.lastFootstepTime=0)}else this.lastFootstepTime=this.footstepInterval;if(this.currentTileActions=[],this.shopkeeper.isNearPlayer(this.player.getPosition())){const l=this.shopkeeper.position;this.currentTileActions.push({position:new v(l.x,l.y-16),key:"E"}),this.currentTileActions.push({position:new v(l.x,l.y),key:"F"})}if(this.blacksmithNPC.isNearPlayer(this.player.getPosition())){const l=this.blacksmithNPC.position;this.currentTileActions.push({position:new v(l.x,l.y-16),key:"E"}),this.currentTileActions.push({position:new v(l.x,l.y),key:"F"})}if(this.hoveredTile){const l=this.tileMap.getTileAt(this.hoveredTile.x,this.hoveredTile.y),m=this.inventorySystem.getSelectedHotbarItem();if(l&&m&&m.toolType){const g=this.hoveredTile.x*32+16,x=this.hoveredTile.y*32+16;let b=!1;switch(l.type){case S.Grass:case S.Dirt:m.toolType==="hoe"&&(b=!0);break;case S.TilledDirt:(!l.planted&&m.toolType==="seeds"||m.toolType==="wateringCan")&&(b=!0);break;case S.PlantedDirt:(m.toolType==="wateringCan"&&!l.watered||m.toolType==="scythe"&&l.growth&&l.growth>=1)&&(b=!0);break;case S.Tree:m.toolType==="axe"&&(b=!0);break}b&&this.currentTileActions.push({position:new v(g,x),key:"C"})}}if(this.input.isKeyPressed(k.Escape)){let l=!1;this.inventorySystem.isInventoryOpen()&&(this.inventorySystem.toggleInventory(),this.inventoryUI.hideInventory(),l=!0),this.shop.isShopOpen()&&(this.shop.close(),l=!0),this.blacksmith.isBlacksmithOpen()&&(this.blacksmith.close(),l=!0),l&&this.audioSystem.playSound("uiClose",.5)}if(this.input.isKeyPressed(k.E)&&(this.shopkeeper.isNearPlayer(this.player.getPosition())?console.log(`${this.shopkeeper.name}: ${this.shopkeeper.dialogue[0]}`):(this.inventorySystem.toggleInventory(),this.inventorySystem.isInventoryOpen()?this.inventoryUI.showInventory():this.inventoryUI.hideInventory())),this.input.isKeyPressed(k.F)&&(this.shopkeeper.isNearPlayer(this.player.getPosition())?this.shop.isShopOpen()?(this.shop.close(),this.audioSystem.playSound("uiClose",.5)):(this.shop.open(),this.audioSystem.playSound("uiOpen",.5)):this.blacksmithNPC.isNearPlayer(this.player.getPosition())&&(this.blacksmith.isBlacksmithOpen()?(this.blacksmith.close(),this.audioSystem.playSound("uiClose",.5)):(this.blacksmith.open(),this.audioSystem.playSound("uiOpen",.5)))),!this.inventorySystem.isInventoryOpen()&&this.input.isKeyPressed(k.Space)){const l=this.inventorySystem.getSelectedHotbarItem();if(l&&(l.type==="tool"||l.type==="seed")&&l.toolType&&(this.player.interact(this.tileMap,this.itemDropManager,this.audioSystem,l.toolType),l.type==="seed"&&l.toolType==="seeds")){const m=this.player.getPosition(),g=this.player.getFacing();let x=m.x,b=m.y;const T=32;switch(g){case"up":b-=T;break;case"down":b+=T;break;case"left":x-=T;break;case"right":x+=T;break}const P=Math.floor(x/32),I=Math.floor(b/32),C=this.tileMap.getTileAt(P,I);if(C&&C.planted){if(l.quantity>1)l.quantity--;else{const R=this.inventorySystem.getHotbar(),A=this.inventorySystem.getSelectedHotbarIndex();R[A].item=null}this.inventoryUI.updateHotbar()}}}if(this.input.isMouseButtonPressed(0)&&this.hoveredTile&&!this.shop.isShopOpen()&&!this.inventorySystem.isInventoryOpen()){const l=this.inventorySystem.getSelectedHotbarItem();if(l&&(l.type==="tool"||l.type==="seed")&&l.toolType){const m=this.hoveredTile.x*i+i/2,g=this.hoveredTile.y*i+i/2;if(this.player.interactAt(m,g,this.tileMap,this.itemDropManager,this.audioSystem,l.toolType),l.type==="seed"&&l.toolType==="seeds"){const x=Math.floor(m/32),b=Math.floor(g/32),T=this.tileMap.getTileAt(x,b);if(T&&T.planted){if(l.quantity>1)l.quantity--;else{const P=this.inventorySystem.getHotbar(),I=this.inventorySystem.getSelectedHotbarIndex();P[I].item=null}this.inventoryUI.updateHotbar()}}}}if(this.player.collectItems(this.itemDropManager,this.audioSystem,this.inventorySystem),this.shop.isShopOpen()&&!this.shopkeeper.isNearPlayer(this.player.getPosition())&&this.shop.close(),this.input.isKeyDown(k.F)||(this.shopToggled=!1),this.shop.isShopOpen())this.input.isKeyPressed("Digit1")&&this.player.spendMoney(10)&&(this.inventorySystem.addItem({id:"carrot_seeds",name:"Carrot Seeds",icon:"🥕",quantity:5,stackable:!0,type:"seed",toolType:"seeds"}),console.log("Bought 5 seeds for 10 coins!"),this.audioSystem.playSound("purchase",.6),this.inventoryUI.updateHotbar()),this.input.isKeyPressed("Digit2")&&this.inventorySystem.removeItem("carrot",1)&&(this.player.addMoney(15),console.log("Sold 1 carrot for 15 coins!"),this.audioSystem.playSound("coin",.5),this.inventoryUI.updateHotbar());else if(this.blacksmith.isBlacksmithOpen())this.input.isKeyPressed("Digit1")&&this.inventorySystem.getItemCount("wood")>0&&(this.inventorySystem.removeItem("wood",1),this.player.addMoney(5),console.log("Sold 1 wood for 5 coins!"),this.audioSystem.playSound("coin",.4),this.inventoryUI.updateHotbar(),this.updateBlacksmithUI()),this.input.isKeyPressed("Digit2")&&this.player.getMoney()>=25&&(this.player.spendMoney(25),this.inventorySystem.addItem({id:"iron_ingot",name:"Iron Ingot",icon:"⚙️",quantity:1,stackable:!0,type:"material"}),console.log("Bought 1 iron ingot for 25 coins!"),this.audioSystem.playSound("purchase",.5),this.inventoryUI.updateHotbar(),this.updateBlacksmithUI()),this.input.isKeyPressed("Digit3")&&this.player.getMoney()>=100&&(this.player.spendMoney(100),this.inventorySystem.addItem({id:"gold_ingot",name:"Gold Ingot",icon:"🟨",quantity:1,stackable:!0,type:"material"}),console.log("Bought 1 gold ingot for 100 coins!"),this.audioSystem.playSound("purchase",.6),this.inventoryUI.updateHotbar(),this.updateBlacksmithUI());else if(!this.inventorySystem.isInventoryOpen()){for(let l=1;l<=6;l++)if(this.input.isKeyPressed(`Digit${l}`)){this.inventorySystem.selectHotbarSlot(l-1),this.inventoryUI.updateHotbar();break}}this.tileMap.updateCrops(t),this.itemDropManager.update(t),this.shopkeeper.update(t),this.camera.followTarget(r.x,r.y,.1),this.updateUI(),this.input.update()}updateUI(){const t=this.player.getPosition(),e=document.getElementById("position");e&&(e.textContent=`${Math.floor(t.x)}, ${Math.floor(t.y)}`);const i=document.getElementById("inventorySlots");i&&(i.style.display="none");const s=document.getElementById("cropCount");if(s){let o=`Money: ${this.player.getMoney()} coins`;this.shopkeeper.isNearPlayer(this.player.getPosition())&&(o+=" | Press F to open shop"),o+=" | Press E for inventory",s.textContent=o}this.updateShopUI(),this.updateBlacksmithUI()}updateShopUI(){let t=document.getElementById("shopUI");if(this.shop.isShopOpen()){t||(t=document.createElement("div"),t.id="shopUI",t.style.cssText=`
          position: absolute;
          top: 50%;
          left: 50%;
          transform: translate(-50%, -50%);
          background: rgba(0, 0, 0, 0.95);
          color: white;
          padding: 30px;
          border-radius: 15px;
          border: 3px solid #FFD700;
          text-align: center;
          font-size: 16px;
          z-index: 1000;
          box-shadow: 0 0 50px rgba(0, 0, 0, 0.8);
        `,document.body.appendChild(t),t.addEventListener("click",s=>{const o=s.target;o.id==="buy-seeds-btn"?this.handleShopBuy():o.id==="sell-carrot-btn"&&this.handleShopSell()}));const e=this.inventorySystem.getItemCount("carrot");t.querySelector(".shop-content")||(t.innerHTML=`
          <div style="display: flex; gap: 30px; align-items: flex-start;">
            <div>
              <img src="/images/shopkeeper-1.png" style="width: 256px; height: 256px; image-rendering: pixelated; border: 3px solid #FFD700; border-radius: 8px; object-fit: cover;">
              <p style="margin-top: 10px; font-style: italic;">"Welcome to my shop!"</p>
            </div>
            <div class="shop-content" style="min-width: 250px;">
              <!-- Dynamic content goes here -->
            </div>
          </div>
        `);const i=t.querySelector(".shop-content");i&&(i.innerHTML=`
          <h2>Emma's Seeds & Produce</h2>
          <div style="margin: 20px 0;">
            <p>Your money: ${this.player.getMoney()} coins</p>
            <p>Your carrots: ${e}</p>
          </div>
          <div style="margin: 20px 0; text-align: left;">
            <button id="buy-seeds-btn" style="
              display: block;
              width: 100%;
              padding: 12px;
              margin: 8px 0;
              background: rgba(46, 204, 113, 0.8);
              color: white;
              border: 2px solid #27ae60;
              border-radius: 6px;
              font-size: 16px;
              cursor: pointer;
              transition: all 0.2s;
            " onmouseover="this.style.background='rgba(46, 204, 113, 1)'" onmouseout="this.style.background='rgba(46, 204, 113, 0.8)'">
              [1] Buy 5 seeds - 10 coins
            </button>
            <button id="sell-carrot-btn" style="
              display: block;
              width: 100%;
              padding: 12px;
              margin: 8px 0;
              background: rgba(231, 76, 60, 0.8);
              color: white;
              border: 2px solid #c0392b;
              border-radius: 6px;
              font-size: 16px;
              cursor: pointer;
              transition: all 0.2s;
            " onmouseover="this.style.background='rgba(231, 76, 60, 1)'" onmouseout="this.style.background='rgba(231, 76, 60, 0.8)'">
              [2] Sell 1 carrot - 15 coins
            </button>
          </div>
          <p style="margin-top: 20px; font-size: 14px;">Press F to close</p>
        `)}else t&&t.remove()}updateBlacksmithUI(){let t=document.getElementById("blacksmithUI");if(this.blacksmith.isBlacksmithOpen()){t||(t=document.createElement("div"),t.id="blacksmithUI",t.style.cssText=`
          position: absolute;
          top: 50%;
          left: 50%;
          transform: translate(-50%, -50%);
          background: rgba(20, 10, 0, 0.95);
          color: white;
          padding: 30px;
          border-radius: 15px;
          border: 3px solid #8B4513;
          text-align: center;
          font-size: 16px;
          z-index: 1000;
          box-shadow: 0 0 50px rgba(255, 100, 0, 0.3);
        `,document.body.appendChild(t),t.addEventListener("click",s=>{const o=s.target;o.id==="sell-wood-btn"?this.handleBlacksmithSellWood():o.id==="buy-iron-btn"?this.handleBlacksmithBuyIron():o.id==="buy-gold-btn"&&this.handleBlacksmithBuyGold()}));const e=this.inventorySystem.getItemCount("wood");t.querySelector(".blacksmith-content")||(t.innerHTML=`
          <div style="display: flex; gap: 30px; align-items: flex-start;">
            <div>
              <img src="/images/blacksmithguy-1.png" style="width: 256px; height: 256px; image-rendering: pixelated; border: 3px solid #8B4513; border-radius: 8px; object-fit: cover;">
              <p style="margin-top: 10px; font-style: italic;">"Need some fine metalwork?"</p>
            </div>
            <div class="blacksmith-content" style="min-width: 300px;">
              <!-- Dynamic content goes here -->
            </div>
          </div>
        `);const i=t.querySelector(".blacksmith-content");i&&(i.innerHTML=`
          <h2>Blacksmith's Forge</h2>
          <div style="margin: 20px 0;">
            <p>Your money: ${this.player.getMoney()} coins</p>
            <p>Your wood: ${e}</p>
          </div>
          <div style="margin: 20px 0; text-align: left;">
            <button id="sell-wood-btn" style="
              display: block;
              width: 100%;
              padding: 12px;
              margin: 8px 0;
              background: rgba(139, 69, 19, 0.8);
              color: white;
              border: 2px solid #654321;
              border-radius: 6px;
              font-size: 16px;
              cursor: pointer;
              transition: all 0.2s;
            " onmouseover="this.style.background='rgba(139, 69, 19, 1)'" onmouseout="this.style.background='rgba(139, 69, 19, 0.8)'">
              [1] Sell Wood - 5 coins each
            </button>
            <button id="buy-iron-btn" style="
              display: block;
              width: 100%;
              padding: 12px;
              margin: 8px 0;
              background: rgba(70, 70, 70, 0.8);
              color: white;
              border: 2px solid #555;
              border-radius: 6px;
              font-size: 16px;
              cursor: pointer;
              transition: all 0.2s;
            " onmouseover="this.style.background='rgba(70, 70, 70, 1)'" onmouseout="this.style.background='rgba(70, 70, 70, 0.8)'">
              [2] Buy Iron Ingot - 25 coins
            </button>
            <button id="buy-gold-btn" style="
              display: block;
              width: 100%;
              padding: 12px;
              margin: 8px 0;
              background: rgba(255, 215, 0, 0.8);
              color: black;
              border: 2px solid #FFD700;
              border-radius: 6px;
              font-size: 16px;
              cursor: pointer;
              transition: all 0.2s;
            " onmouseover="this.style.background='rgba(255, 215, 0, 1)'" onmouseout="this.style.background='rgba(255, 215, 0, 0.8)'">
              [3] Buy Gold Ingot - 100 coins
            </button>
          </div>
          <p style="margin-top: 20px; font-size: 14px;">Press F to close</p>
        `)}else t&&t.remove()}render(){this.renderer.clear(.2,.3,.4);const t=this.camera.getProjectionMatrix(),e=this.camera.getViewMatrix();this.spriteBatch.begin(t,e),this.renderTileMap(),this.renderProgressIndicators(),this.renderTileHighlight(),this.renderShop(),this.renderNPC(),this.renderItemDrops(),this.renderPlayer(),this.tileActionRenderer.renderTileActions(this.spriteBatch,this.currentTileActions),this.spriteBatch.end()}renderTileHighlight(){if(!this.hoveredTile)return;const t=this.tileMap.getTileSize(),e=this.hoveredTile.x*t,i=this.hoveredTile.y*t,s=this.inventorySystem.getSelectedHotbarItem();let o=1,r=1,n=1;if(s&&s.type==="tool"&&s.toolType)switch(s.toolType){case"hoe":o=.6,r=.4,n=.2;break;case"seeds":o=.2,r=.8,n=.2;break;case"wateringCan":o=.2,r=.4,n=.8;break;case"scythe":o=.8,r=.7,n=.2;break;case"axe":o=.9,r=.4,n=.1;break}this.spriteBatch.flush(),this.whiteTexture.bind(0);const h=e+t/2,c=i+t/2,u=this.spriteBatch.getSpriteShader();u.use();const d=3,f=performance.now()/1e3,l=(Math.sin(f*3)+1)/2,m=.6+l*.4;u.setUniform4f("u_color",o,r,n,m),this.spriteBatch.drawTexturedQuad(h,i+d/2,t,d),this.spriteBatch.drawTexturedQuad(h,i+t-d/2,t,d),this.spriteBatch.drawTexturedQuad(e+d/2,c,d,t-d*2),this.spriteBatch.drawTexturedQuad(e+t-d/2,c,d,t-d*2);const g=8,x=.8+l*.2;u.setUniform4f("u_color",o,r,n,x),this.spriteBatch.drawTexturedQuad(e+g/2,i+d/2,g,d),this.spriteBatch.drawTexturedQuad(e+d/2,i+g/2,d,g),this.spriteBatch.drawTexturedQuad(e+t-g/2,i+d/2,g,d),this.spriteBatch.drawTexturedQuad(e+t-d/2,i+g/2,d,g),this.spriteBatch.drawTexturedQuad(e+g/2,i+t-d/2,g,d),this.spriteBatch.drawTexturedQuad(e+d/2,i+t-g/2,d,g),this.spriteBatch.drawTexturedQuad(e+t-g/2,i+t-d/2,g,d),this.spriteBatch.drawTexturedQuad(e+t-d/2,i+t-g/2,d,g),u.setUniform4f("u_color",1,1,1,1)}renderTileMap(){const t=this.tileMap.getTileSize(),e=this.camera.getPosition(),i=this.camera.getZoom(),s=1,o=Math.max(0,Math.floor((e.x-this.canvas.width/(2*i))/t)-s),r=Math.min(this.tileMap.getWidth(),Math.ceil((e.x+this.canvas.width/(2*i))/t)+s),n=Math.max(0,Math.floor((e.y-this.canvas.height/(2*i))/t)-s),h=Math.min(this.tileMap.getHeight(),Math.ceil((e.y+this.canvas.height/(2*i))/t)+s),c=this.textures.get("water");if(c){this.spriteBatch.flush(),c.bind(0);for(let d=n;d<h;d++)for(let f=o;f<r;f++){const l=this.tileMap.getTileAt(f,d);if(l&&l.type===S.Water){const m=f*t,g=d*t;this.spriteBatch.drawTexturedQuad(m+t/2,g+t/2,t+3,t+3)}}}const u=this.textures.get("dirt");if(u){this.spriteBatch.flush(),u.bind(0);for(let d=n;d<h;d++)for(let f=o;f<r;f++){const l=this.tileMap.getTileAt(f,d);if(l&&l.type===S.Dirt){const m=f*t,g=d*t;this.spriteBatch.drawTexturedQuad(m+t/2,g+t/2,t+2,t+2)}}}for(let d=n;d<h;d++)for(let f=o;f<r;f++){const l=this.tileMap.getTileAt(f,d);if(!l||l.type===S.Water||l.type===S.Dirt)continue;const m=f*t,g=d*t;let x=null;switch(l.type){case S.Grass:x=this.textures.get("grass");break;case S.Stone:x=this.textures.get("stone");break;case S.TilledDirt:x=l.watered?this.textures.get("wateredDirt"):this.textures.get("tilledDirt");break;case S.PlantedDirt:x=l.watered?this.textures.get("wateredDirt"):this.textures.get("tilledDirt");break;case S.Tree:x=this.textures.get("grass");break}if(x){if(this.spriteBatch.flush(),x.bind(0),this.spriteBatch.drawTexturedQuad(m+t/2,g+t/2,t,t),l.type===S.PlantedDirt&&l.growth!==void 0){this.spriteBatch.flush();let b;l.growth<.3?b=this.textures.get("plant_0.2"):l.growth<.7?b=this.textures.get("plant_0.5"):b=this.textures.get("plant_1.0"),b.bind(0),this.spriteBatch.drawTexturedQuad(m+t/2,g+t/2,t,t)}if(l.type===S.Tree){this.spriteBatch.flush();let b;if(l.treeVariant&&l.treeVariant>=1&&l.treeVariant<=4&&(b=this.textures.get(`tree-${l.treeVariant}`)),b||(b=this.textures.get("tree")),b){b.bind(0);const T=t*1.5,P=-t*.2;this.spriteBatch.drawTexturedQuad(m+t/2,g+t/2+P,T,T)}}}}this.renderShoreline(o,r,n,h)}renderShoreline(t,e,i,s){const o=this.tileMap.getTileSize();if(this.spriteBatch.getSpriteShader(),!this.textures.has("shoreline")){const n=y.createSolid(this.renderer.getGL(),1,1,102,76,38);this.textures.set("shoreline",n)}const r=this.textures.get("shoreline");if(r){this.spriteBatch.flush(),r.bind(0);for(let n=i;n<s;n++)for(let h=t;h<e;h++){const c=this.tileMap.getTileAt(h,n);if(!(!c||c.type===S.Water)&&(c.type===S.Grass||c.type===S.Dirt)){const u=h*o,d=n*o,f=h>0&&this.tileMap.getTileAt(h-1,n)?.type===S.Water,l=h<this.tileMap.getWidth()-1&&this.tileMap.getTileAt(h+1,n)?.type===S.Water,m=n>0&&this.tileMap.getTileAt(h,n-1)?.type===S.Water,g=n<this.tileMap.getHeight()-1&&this.tileMap.getTileAt(h,n+1)?.type===S.Water,x=3;f&&this.spriteBatch.drawTexturedQuad(u+x/2,d+o/2,x,o),l&&this.spriteBatch.drawTexturedQuad(u+o-x/2,d+o/2,x,o),m&&this.spriteBatch.drawTexturedQuad(u+o/2,d+x/2,o,x),g&&this.spriteBatch.drawTexturedQuad(u+o/2,d+o-x/2,o,x)}}this.spriteBatch.flush()}}renderItemDrops(){this.itemDropManager.getDrops().forEach(e=>{let i=null;if(e.itemType==="seeds"?i=this.textures.get("item_seeds")||null:e.itemType==="carrot"?i=this.textures.get("item_carrot")||null:e.itemType==="wood"&&(i=this.textures.get("item_wood")||null),i){this.spriteBatch.flush(),i.bind(0);const s=e.position.y+e.bobOffset;if(this.spriteBatch.drawTexturedQuad(e.position.x,s,16,16),e.quantity>1)for(let o=1;o<Math.min(e.quantity,3);o++)this.spriteBatch.drawTexturedQuad(e.position.x+o*4,s-o*2,16,16)}})}renderShop(){const t=this.shopkeeper.position,e=this.textures.get("shop_stall");e&&(this.spriteBatch.flush(),e.bind(0),this.spriteBatch.drawTexturedQuad(t.x,t.y-16,64,64),this.spriteBatch.flush());const i=this.blacksmithNPC.position,s=this.textures.get("forge");s&&(this.spriteBatch.flush(),s.bind(0),this.spriteBatch.drawTexturedQuad(i.x,i.y-24,80,80),this.spriteBatch.flush())}renderNPC(){const t=this.shopkeeper.position,e=this.shopkeeper.getAnimOffset(),i=this.textures.get("shopkeeper");i&&(this.spriteBatch.flush(),i.bind(0),this.spriteBatch.drawTexturedQuad(t.x,t.y+e,32,32),this.spriteBatch.flush());const s=this.blacksmithNPC.position,o=this.blacksmithNPC.getAnimOffset(),r=this.textures.get("blacksmith");r&&(this.spriteBatch.flush(),r.bind(0),this.spriteBatch.drawTexturedQuad(s.x,s.y+o,32,32),this.spriteBatch.flush())}renderPlayer(){const t=this.player.getPosition(),e=this.player.getSize(),i=this.player.getFacing(),s=this.inventorySystem.getSelectedHotbarItem(),o=this.player.getToolAnimationProgress(),r=this.textures.get("character");if(r){r.getWidth()/4,r.getHeight()/4;let c=0;switch(i){case"down":c=0;break;case"right":c=1;break;case"left":c=3;break;case"up":c=2;break}let u=0;if(this.player.isPlayerMoving()){const T=this.player.getAnimationTime();u=1+Math.floor(T/.2)%3}else u=0;const d=u/4,f=c/4,l=(u+1)/4,m=(c+1)/4;this.spriteBatch.flush(),r.bind(0),this.spriteBatch.drawTexturedQuad(t.x,t.y+-8,48,48,d,f,l,m)}else{let n;if(s&&s.toolType)switch(s.toolType){case"hoe":n=w.Hoe;break;case"axe":n=w.Axe;break;case"wateringCan":n=w.WateringCan;break;case"scythe":n=w.Scythe;break;case"seeds":n=w.Seeds;break}const h=this.generatePlayerTexture(i,n,o);this.spriteBatch.flush(),h.bind(0),this.spriteBatch.drawTexturedQuad(t.x,t.y,e.x*1.2,e.y*1.2)}if(this.player.isAnimatingTool()){const n=this.player.getToolAnimationProgress();this.renderProgressBar(t.x,t.y-32,20,3,n,{r:1,g:1,b:0})}}updateFPS(t){if(this.frameCount++,t-this.fpsTime>=1e3){const e=document.getElementById("fps");e&&(e.textContent=this.frameCount.toString());const i=document.getElementById("soundtrack");if(i){const s=this.audioSystem.getMusicStatus(),o=this.audioSystem.getAudioContextState();i.textContent=`${s} (Context: ${o})`}this.frameCount=0,this.fpsTime=t}}renderProgressIndicators(){const t=this.tileMap.getTileSize(),e=this.camera.getPosition(),i=this.camera.getZoom(),s=Math.max(0,Math.floor((e.x-this.canvas.width/(2*i))/t)),o=Math.min(this.tileMap.getWidth(),Math.ceil((e.x+this.canvas.width/(2*i))/t)),r=Math.max(0,Math.floor((e.y-this.canvas.height/(2*i))/t)),n=Math.min(this.tileMap.getHeight(),Math.ceil((e.y+this.canvas.height/(2*i))/t));for(let h=r;h<n;h++)for(let c=s;c<o;c++){const u=this.tileMap.getTileAt(c,h);if(!u)continue;const d=c*t+t/2,f=h*t+t/2;if(u.type===S.Tree&&u.treeHealth!==void 0&&u.treeHealth<3){const l=u.treeHealth/3;this.renderProgressBar(d,f-t/2-8,24,4,l,{r:.6,g:.3,b:.1})}if(u.type===S.TilledDirt&&!u.planted&&u.tilledTime){const l=Date.now(),m=3e4,g=l-u.tilledTime,b=Math.max(0,m-g)/m;this.renderProgressBar(d,f+t/2+4,20,2,b,{r:.6,g:.4,b:.2})}if(u.type===S.PlantedDirt&&u.growth!==void 0&&(this.renderProgressBar(d,f+t/2+4,20,3,u.growth,{r:.2,g:.8,b:.2}),u.watered&&u.lastWatered)){const l=Date.now(),m=5e3,g=l-u.lastWatered,b=Math.max(0,m-g)/m;this.renderProgressBar(d,f-t/2-6,16,2,b,{r:.2,g:.6,b:1})}}}renderProgressBar(t,e,i,s,o,r){o=Math.max(0,Math.min(1,o)),this.spriteBatch.flush(),this.whiteTexture.bind(0);const n=this.spriteBatch.getSpriteShader();if(n.use(),n.setUniform4f("u_color",.2,.2,.2,.8),this.spriteBatch.drawTexturedQuad(t,e,i,s),this.spriteBatch.flush(),o>0){n.setUniform4f("u_color",r.r,r.g,r.b,.9);const c=Math.max(1,(i-2)*o),u=t-i/2+c/2+1;this.spriteBatch.drawTexturedQuad(u,e,c,s-2),this.spriteBatch.flush()}n.setUniform4f("u_color",.1,.1,.1,1);const h=1;this.spriteBatch.drawTexturedQuad(t,e-s/2+h/2,i,h),this.spriteBatch.drawTexturedQuad(t,e+s/2-h/2,i,h),this.spriteBatch.drawTexturedQuad(t-i/2+h/2,e,h,s),this.spriteBatch.drawTexturedQuad(t+i/2-h/2,e,h,s),this.spriteBatch.flush(),n.setUniform4f("u_color",1,1,1,1)}}const st=document.getElementById("app");st.innerHTML=`
  <canvas id="gameCanvas"></canvas>
  <div id="gameInfo">
    <div>FPS: <span id="fps">0</span></div>
    <div>Position: <span id="position">0, 0</span></div>
    <div>Soundtrack: <span id="soundtrack">Loading...</span></div>
    <div class="volume-control">
      <label for="musicVolume">Music Volume: </label>
      <input type="range" id="musicVolume" min="0" max="100" value="50" />
      <span id="volumeValue">50%</span>
    </div>
  </div>
  <div id="inventory">
    <div id="inventorySlots"></div>
    <div id="cropCount"></div>
  </div>
`;const ot=document.getElementById("gameCanvas");new it(ot);
